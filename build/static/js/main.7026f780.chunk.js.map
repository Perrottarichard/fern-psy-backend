{"version":3,"sources":["services/forumService.js","reducers/forumReducer.js","reducers/activeUserReducer.js","services/contactService.js","reducers/contactReducer.js","services/userService.js","reducers/userInfoForAdminReducer.js","store.js","components/Logout.js","components/MyNavbar.js","components/About.js","services/loginService.js","components/SpinningLoader.js","components/RegisterForm.js","components/LoginForm.js","components/ForumPostMain.js","components/ForumDisplayAll.js","components/SingleTagDisplay.js","components/ForumLandingPage.js","components/ContactForm.js","components/AdminLoginForm.js","components/AdminContactsDashboard.js","components/AdminUsersDashboard.js","components/AdminForumAnswer.js","components/AdminForumDashboard.js","components/NoPage.js","App.js","index.js","fern-logo-350.png"],"names":["baseUrl","token","getPending","a","axios","get","response","data","getAnswered","create","newObject","config","headers","Authorization","post","update","put","_id","setToken","newToken","remove","question","delete","id","like","toUpdate","initialState","answered","pending","tagFilter","answerQuestion","answer","dispatch","forumService","type","toast","success","addQuestion","newQuestion","initializeForumAnswered","forumReducer","state","action","questionToChange","find","q","changedQuestion","likes","map","answerId","objectToModify","s","changedToAnswered","isAnswered","filter","setUser","activeUserReducer","sendContact","message","getAll","hideContact","contactToHide","contactReducer","c","registerUser","user","getAllUsers","userInfoForAdminReducer","rootReducer","combineReducers","forum","activeUser","contact","userInfoForAdmin","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","Logout","props","setLoggedIn","history","useHistory","useDispatch","Button","onClick","window","localStorage","clear","info","push","outline","color","size","MyNavbar","useState","isOpen","setIsOpen","loggedIn","Navbar","dark","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","className","NavItem","NavLink","tag","Link","to","username","NavbarText","icon","faUser","About","Container","fluid","style","marginBottom","src","Fern","alt","ListGroup","flush","ListGroupItem","userlogin","adminLogin","admin","SpinningLoader","Spinner","width","height","textStyle","textAlign","fontFamily","registerButtonStyle","display","float","formDivStyle","labelStyle","padding","genderSelectStyle","marginRight","RegisterForm","modal","setModal","loading","setLoading","isVerified","setIsVerified","name","setName","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","selectedGender","setSelectedGender","dateOfBirth","setDateOfBirth","toggle","variations","submitRegister","event","preventDefault","includes","v","toLowerCase","warn","length","test","userService","console","log","error","Modal","autoFocus","modalTransition","timeout","ModalBody","Form","onSubmit","FormGroup","Label","Input","onChange","target","value","options","label","sitekey","render","onloadCallback","verifyCallback","ModalFooter","formStyle","loginButtonStyle","backgroundColor","LoginForm","submitLogin","loginService","setItem","JSON","stringify","fontVariant","fontWeight","fontSize","marginTop","buttonStyle","tagOptions","ForumPostMain","setQuestion","title","setTitle","selectedTags","setSelectedTags","animatedTags","makeAnimated","handleEditorSubmit","postToAdd","tags","t","placeholder","closeMenuOnSelect","components","defaultValue","isMulti","tagColorOptions","chooseTagColor","passed","verticalAlign","postition","cardHeaderStyle","paddingTop","paddingBottom","cardBodyStyleQ","paddingLeft","cardBodyStyleA","smallStyle","postButtonDivStyle","postButtonStyle","borderColor","borderWidth","borderStyle","ForumDisplayAll","forumAnswered","useEffect","f","Card","CardHeader","date","slice","CardBody","faQuestionCircle","position","faComment","Badge","block","SingleTagDisplay","tagged","useSelector","chosenFilter","sort","b","Date","faVenusMars","faCocktail","faHeartBroken","faTransgender","faUserFriends","faSadCry","faBolt","faDizzy","faBusinessTime","faBrain","faAngry","faHome","faEye","faBabyCarriage","faSyringe","chooseTagIcon","chosen","divStyle","flexWrap","justifyContent","ForumLandingPage","clickTag","setTagFilter","flexDirection","body","CardTitle","contactButtonStyle","ContactForm","recaptchaLoaded","initialValues","LINE","values","setSubmitting","resetForm","contactService","handleChange","handleBlur","handleSubmit","isSubmitting","faEnvelopeSquare","faFacebookSquare","for","onBlur","iconStyle","AdminLoginForm","faLock","paddingRight","mailIconStyle","AdminContactsDashboard","setHidden","hiddenContact","hidden","setContactHidden","Table","hover","responsive","headingStyle","contentStyle","AdminUsersDashboard","users","questionToggle","setQuestionToggle","allUsers","disabled","AdminForumAnswer","setAnswering","answering","setAnswer","postToAnswer","AdminForumDashboard","questions","NoPage","App","loggedUserJSON","getItem","parse","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","path","exact","margin","UncontrolledCollapse","toggler","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7026f780.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/forum'\n\nlet token = null\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getPending = async () => {\n  const response = await axios.get(`${baseUrl}/pending`)\n  return response.data\n}\nconst getAnswered = async () => {\n  const response = await axios.get(`${baseUrl}/answered`)\n  return response.data\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (newObject) => {\n  const response = axios.put(`${baseUrl}/${newObject._id}`, newObject)\n  return response.data\n}\n\nconst remove = async question => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.delete(`${baseUrl}/${question.id}`, config)\n  return response.data\n}\n\nconst like = async (toUpdate) => {\n  const id = toUpdate.id\n  const response = await axios.put(`${baseUrl}/${id}`, toUpdate)\n  return response.data\n}\n\nexport default { getPending, getAnswered, create, update, setToken, remove, like }","import forumService from '../services/forumService'\nimport { toast } from 'react-toastify'\n\nconst initialState = {\n  answered: [],\n  pending: [],\n  tagFilter: ''\n}\nconst forumReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'NEW_QUESTION':\n      return state\n    case 'INIT_FORUM_PENDING':\n      return { ...state, pending: action.data }\n    case 'INIT_FORUM_ANSWERED':\n      return { ...state, answered: action.data }\n    case 'LIKE':\n      const id = action.data.id\n      const questionToChange = state.find(q => q.id === id)\n      const changedQuestion = { ...questionToChange, likes: questionToChange.likes + 1 }\n      return state.map(q => q.id === id ? changedQuestion : q)\n    case 'POST_ANSWER':\n      const answerId = action.data._id\n      const objectToModify = state.find(s => s._id === answerId)\n      const changedToAnswered = { ...objectToModify, isAnswered: true, answer: action.data.answer }\n      return state.map(s => s._id === answerId ? changedToAnswered : s)\n    case 'DELETE_QUESTION':\n      return state.filter(q => q.id !== action.data.id)\n    case 'SET_TAG_FILTER':\n      return { ...state, tagFilter: action.data }\n    default: return state\n  }\n}\nexport const upLike = (question) => {\n  return async dispatch => {\n    const updatedObject = { ...question, likes: question.likes + 1 }\n    await forumService.like(updatedObject)\n    dispatch({\n      type: 'LIKE',\n      data: updatedObject\n    })\n    toast.success('You like a post!')\n  }\n}\nexport const answerQuestion = (answer) => {\n  return async dispatch => {\n    await forumService.update(answer)\n    dispatch({\n      type: 'POST_ANSWER',\n      data: answer\n    })\n    toast.success('You answered a question!')\n  }\n}\nexport const addQuestion = data => {\n  return async dispatch => {\n    const newQuestion = await forumService.create(data)\n    dispatch({\n      type: 'NEW_QUESTION',\n      data: newQuestion\n    })\n    toast.success('You submitted a question!')\n  }\n}\nexport const deleteQuestion = data => {\n  return async dispatch => {\n    await forumService.remove(data)\n    dispatch({\n      type: 'DELETE_QUESTION',\n      data\n    })\n    toast.success('Question deleted')\n  }\n}\nexport const initializeForumPending = () => {\n  return async dispatch => {\n    const questions = await forumService.getPending()\n    dispatch({\n      type: 'INIT_FORUM_PENDING',\n      data: questions\n    })\n  }\n}\nexport const initializeForumAnswered = () => {\n  return async dispatch => {\n    const answered = await forumService.getAnswered()\n    dispatch({\n      type: 'INIT_FORUM_ANSWERED',\n      data: answered\n    })\n  }\n}\nexport const setTagFilter = (tag) => {\n  console.log(tag)\n  return {\n    type: 'SET_TAG_FILTER',\n    data: tag\n  }\n}\nexport default forumReducer","\nconst activeUserReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.data\n    case 'CLEAR_USER':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const setUser = data => {\n  return {\n    type: 'SET_USER',\n    data\n  }\n}\nexport const clearUser = () => {\n  return {\n    type: 'CLEAR_USER',\n    data: null\n  }\n}\n\nexport default activeUserReducer","import axios from 'axios'\nconst baseUrl = '/api/contact'\n\nconst sendContact = async message => {\n  const response = await axios.post(baseUrl, message)\n  return response.data\n}\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\nconst hideContact = async contactToHide => {\n  const id = contactToHide._id\n  const response = await axios.put(`${baseUrl}/${id}`, contactToHide)\n  return response.data\n}\nexport default { sendContact, getAll, hideContact }","import contactService from '../services/contactService'\nimport { toast } from 'react-toastify'\n\nconst contactReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_CONTACTS':\n      return action.data\n    case 'SET_CONTACT_HIDDEN':\n      return state.filter(c => c._id !== action.data._id)\n    default:\n      return state\n  }\n}\n\nexport const initializeContacts = () => {\n  return async dispatch => {\n    const contact = await contactService.getAll()\n    dispatch({\n      type: 'INIT_CONTACTS',\n      data: contact\n    })\n  }\n}\nexport const setContactHidden = (contact) => {\n  return async dispatch => {\n    const hiddenContact = { ...contact, hidden: true }\n    await contactService.hideContact(hiddenContact)\n    dispatch({\n      type: 'SET_CONTACT_HIDDEN',\n      data: hiddenContact\n    })\n    toast.success('Contact hidden. Contact the IT department to restore')\n  }\n}\n\nexport default contactReducer","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst registerUser = async user => {\n  const response = await axios.post(`${baseUrl}/register`, user)\n  return response.data\n}\nconst getAllUsers = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\nexport default { registerUser, getAllUsers }","import userService from '../services/userService'\n\nconst userInfoForAdminReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_ALL_USERS':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const allUsers = await userService.getAllUsers()\n    dispatch({\n      type: 'INIT_ALL_USERS',\n      data: allUsers\n    })\n  }\n}\nexport default userInfoForAdminReducer","\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport forumReducer from './reducers/forumReducer'\nimport activeUserReducer from './reducers/activeUserReducer'\nimport contactReducer from './reducers/contactReducer'\nimport userInfoForAdminReducer from './reducers/userInfoForAdminReducer'\n\n\nconst rootReducer = combineReducers({\n  forum: forumReducer,\n  activeUser: activeUserReducer,\n  contact: contactReducer,\n  userInfoForAdmin: userInfoForAdminReducer\n})\n\nconst persistConfig = {\n  key: 'root',\n  storage\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n\nexport const store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport const persistor = persistStore(store)\n\n\n\n\n\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Button } from 'reactstrap'\nimport { clearUser } from '../reducers/activeUserReducer'\nimport { toast } from 'react-toastify'\n\nconst Logout = (props) => {\n  const { setLoggedIn } = props\n  const history = useHistory()\n\n  const dispatch = useDispatch()\n  const logout = () => {\n    window.localStorage.clear()\n    setLoggedIn(false)\n    toast.info('Logged out')\n    dispatch(clearUser())\n    history.push('/forum')\n  }\n  return (\n    <div id='nav-logout-button'>\n      <Button onClick={logout} outline color='secondary' size='sm'>Logout</Button>\n    </div>\n  )\n}\nexport default Logout","import React, { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport Logout from './Logout'\nimport { Link } from 'react-router-dom';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarText,\n  Button\n} from 'reactstrap';\n\nconst MyNavbar = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const { activeUser, setLoggedIn, loggedIn } = props\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color='dark' id=\"navbar\" dark expand='md' >\n        <NavbarBrand id='navbrand' href=\"/forum\">Fern's Counseling</NavbarBrand>\n        <NavbarToggler id=\"dropdownmenu\" onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink tag={Link} id=\"NavLink\" to=\"/forum\">Forum</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} id=\"NavLink\" to=\"/about\">About</NavLink>\n            </NavItem>\n            <NavItem>\n              {\n                (!activeUser || (activeUser.username !== \"Fern-Admin\" && activeUser.username !== \"Richard-Admin\"))\n                  ?\n                  <NavLink tag={Link} id=\"NavLink\" to=\"/contact\">Contact Fern</NavLink>\n                  :\n                  <NavLink tag={Link} id=\"NavLink\" to=\"/admin/dashboard\">Dashboard</NavLink>\n              }\n            </NavItem>\n            {\n              (!activeUser || !loggedIn)\n                ?\n                <NavItem>\n                  <NavLink tag={Link} id=\"NavLink\" to=\"/admin\">Admin</NavLink>\n                </NavItem>\n                :\n                null\n            }\n          </Nav>\n          {\n            (!activeUser || !loggedIn)\n              ?\n              <div id='nav-login-button'>\n                <Link to=\"/login\"><Button outline color='secondary' size='lg'>Login</Button></Link>\n              </div>\n              :\n              null\n          }\n          {\n            (activeUser && loggedIn)\n              ?\n              <div>\n                <NavbarText id='NavBarText'>\n                  <FontAwesomeIcon id='fa-user-icon' icon={faUser} /><br />{activeUser.username}\n                </NavbarText>\n                <Logout setLoggedIn={setLoggedIn} />\n              </div>\n              :\n              null\n          }\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\nexport default MyNavbar;","import React from 'react';\nimport { Container, ListGroup, ListGroupItem } from 'reactstrap';\nimport Fern from '../fern-logo-350.png'\nimport '../about.css';\n\nfunction About() {\n  return (\n    <Container id='about' className=\"themed-container\" fluid={true}>\n      <div id='heading'>\n        <h1 id='name'>Nilubon Sukawanich</h1>\n        <h4 id='title'>Counselor</h4>\n      </div>\n      <div style={{ marginBottom: '80px' }}>\n        <img src={Fern} alt=\"fern\" />\n      </div>\n      <hr />\n      <ListGroup flush >\n        <div id='about-me'>\n          <h5>Education:</h5>\n        </div>\n        <ListGroupItem id='list'>\n          มหาวิทยาลัยเชียงใหม่\n          วิทยาศาสตร์มหาบัณฑิต สาขาจิตวิทยาการปรึกษา (2557 - 2559)\n          <br />\n          Chiangmai University\n          Master of Science in Counseling Psychology (2014 - 2016)\n        </ListGroupItem>\n        <ListGroupItem id='list'>\n          มหาวิทยาลัยเชียงใหม่\n          วิทยาศาสตร์บัณฑิต สาขาจิตวิทยา (2544 - 2547)\n          <br />\n          Chiangmai University\n          Bachelor of Science in Counseling Psychology (2001 - 2004)\n        </ListGroupItem>\n      </ListGroup>\n      {/* <img src={Fern} alt=\"me\" /> */}\n    </Container>\n\n  );\n}\n\nexport default About;","import axios from 'axios'\nconst baseUrl = '/api/login'\nconst adminUrl = '/api/admin'\n\nconst userlogin = async user => {\n  const response = await axios.post(baseUrl, user)\n  return response.data\n}\nconst adminLogin = async admin => {\n  const response = await axios.post(adminUrl, admin)\n  return response.data\n}\nexport default { userlogin, adminLogin }","import React from 'react'\nimport { Spinner } from 'reactstrap'\n\nconst SpinningLoader = () => {\n  return (\n    <div>\n      Loading...\n      <Spinner type=\"grow\" color=\"primary\" style={{ width: '5rem', height: '5rem' }} />\n    </div>\n  )\n}\nexport default SpinningLoader","import React, { useState } from 'react'\nimport Recaptcha from 'react-recaptcha'\nimport { Form, Label, FormGroup, Button, Input, Modal, ModalBody, ModalFooter } from 'reactstrap'\nimport Select from 'react-select'\nimport SpinningLoader from './SpinningLoader'\nimport userService from '../services/userService'\nimport { toast } from 'react-toastify'\n\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Montserrat'\n}\nconst registerButtonStyle = {\n  display: 'inline-block',\n  fontFamily: 'Montserrat',\n  float: 'center',\n  width: '100px',\n}\nconst formDivStyle = {\n  display: 'block',\n  textAlign: 'center',\n  fontFamily: 'Montserrat'\n}\nconst labelStyle = {\n  float: 'left',\n  marginBottom: '0px',\n  padding: '0px',\n  fontFamily: 'Montserrat'\n}\nconst genderSelectStyle = {\n  marginRight: '20px',\n  float: 'left',\n  fontFamily: 'Montserrat'\n}\n\nconst RegisterForm = () => {\n\n  const [modal, setModal] = useState(false);\n  const [loading, setLoading] = useState(false)\n\n  const [isVerified, setIsVerified] = useState(false)\n\n  const [name, setName] = useState('')\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [selectedGender, setSelectedGender] = useState('')\n  const [dateOfBirth, setDateOfBirth] = useState('')\n\n  const toggle = () => setModal(!modal);\n\n  const genderOptions = [\n    { value: 'Male', label: 'Male' },\n    { value: 'Female', label: 'Female' },\n    { value: 'Other', label: 'Other' }\n  ]\n\n  const handleChangeName = (event) => {\n    setName(event.target.value)\n  }\n  const handleChangeUsername = (event) => {\n    setUsername(event.target.value)\n  }\n  const handleChangeEmail = (event) => {\n    setEmail(event.target.value)\n  }\n  const handleChangePassword = (event) => {\n    setPassword(event.target.value)\n  }\n  const handleChangeConfirmPassword = (event) => {\n    setConfirmPassword(event.target.value)\n  }\n  const handleChangeGender = (selectedGender) => {\n    setSelectedGender(selectedGender)\n  }\n  const handleChangeDateOfBirth = (event) => {\n    setDateOfBirth(event.target.value)\n  }\n  const recaptchaLoaded = () => {\n    console.log('captcha loaded successfully')\n  }\n  const verifyCallback = (response) => {\n    if (response) {\n      setIsVerified(true);\n    }\n  }\n  const variations = ['fern', 'Fern', 'admin', 'Admin', 'administrator', 'Administrator', 'nilubon', 'Nilubon', 'Fern-Admin', 'Fern-admin', 'fern-admin', 'fern-Admin', 'Fern Admin', 'fern Admin', 'Fern admin', 'fern admin', 'FernAdmin', 'fernAdmin', 'fern_admin', 'Fern_Admin']\n\n  const submitRegister = async event => {\n    event.preventDefault()\n    if (variations.includes(username) || variations.map(v => v.toLowerCase).includes(username)) {\n      toast.warn('Sorry, that username is restricted')\n    }\n    else if (!name || !username || !selectedGender || !dateOfBirth || !password) {\n      toast.warn('You must fill all fields')\n    }\n    else if (password.length < 5 || username.length < 5) {\n      toast.warn('Your username and password must be at least 5 characters long')\n    }\n    else if (password !== confirmPassword) {\n      toast.warn('Your passwords are not the same. Try again.')\n    }\n    else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\n      toast.warn('Your email address is not valid')\n    }\n    else if (!isVerified) {\n      toast.warn('Please verify that you are a human')\n    }\n\n    else {\n      //close modal\n      toggle()\n      try {\n        setLoading(true)\n        await userService.registerUser({ name, username, password, email, selectedGender, dateOfBirth })\n        toast.success('Successfully registered. You can now log in.')\n        setLoading(false)\n        setUsername('')\n        setPassword('')\n        setConfirmPassword('')\n        setName('')\n        setSelectedGender('')\n        setEmail('')\n        setDateOfBirth('')\n      }\n      catch (error) {\n        console.log(error)\n        toast.error('Something went wrong...')\n        setLoading(false)\n      }\n    }\n  }\n\n  return (\n    <div className='container' id='register-form'>\n      {\n        (loading)\n          ?\n          <div>\n            <SpinningLoader />\n          </div>\n          :\n          <div style={formDivStyle}>\n            <Button style={registerButtonStyle} color='secondary' onClick={toggle}>{'Sign up'}</Button>\n            <Modal autoFocus={true} isOpen={modal} toggle={toggle} modalTransition={{ timeout: 300 }} >\n              <ModalBody>\n                <h2 style={textStyle}>Register</h2>\n                <Form onSubmit={submitRegister} >\n                  <FormGroup>\n                    <Label style={labelStyle}>Name:</Label>\n                    <Input onChange={handleChangeName} value={name}></Input><br />\n                    <Label style={labelStyle}>Username:</Label>\n                    <Input onChange={handleChangeUsername} value={username}></Input><br />\n                    <Label style={labelStyle}>Password:</Label> <Input id='password' type=\"password\" onChange={handleChangePassword} value={password}></Input><br />\n                    <Label style={labelStyle}>Confirm Password:</Label>\n                    <Input onChange={handleChangeConfirmPassword} type='password' value={confirmPassword}></Input><br />\n                    <Label style={labelStyle}>Email:</Label> <Input id='email' type=\"text\" onChange={handleChangeEmail} value={email}></Input><br />\n                    <Label style={genderSelectStyle}>Gender:</Label><Select options={genderOptions} value={selectedGender} onChange={handleChangeGender}></Select><br />\n                    <Label style={labelStyle}>Date of Birth:</Label> <Input id='dateOfBirth' type=\"date\" onChange={handleChangeDateOfBirth} value={dateOfBirth}></Input><br />\n                  </FormGroup>\n                </Form>\n              </ModalBody>\n              <Recaptcha sitekey='6LcL060ZAAAAABmkdF8vTezZgafAVQo1WoGgGNDT' render='explicit' onloadCallback={recaptchaLoaded} verifyCallback={verifyCallback} />\n              <ModalFooter>\n                <Button type='submit' color='secondary' onClick={submitRegister}>Sign Up</Button>\n                <Button onClick={toggle}>Cancel</Button>\n              </ModalFooter>\n            </Modal></div>\n      }\n    </div >\n  )\n}\n\nexport default RegisterForm","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { toast } from \"react-toastify\"\nimport { setUser } from '../reducers/activeUserReducer'\nimport loginService from '../services/loginService'\nimport forumService from '../services/forumService'\n\nimport { Form, Label, FormGroup, Button, Input } from 'reactstrap'\nimport RegisterForm from './RegisterForm'\n\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Montserrat',\n  color: 'black'\n}\nconst formDivStyle = {\n  display: 'block',\n  textAlign: 'center'\n}\nconst formStyle = {\n  width: '70%',\n  display: 'inline-block'\n}\nconst labelStyle = {\n  float: 'left',\n  marginBottom: '0px',\n  padding: '0px',\n  fontFamily: 'Montserrat',\n  color: 'white'\n}\nconst loginButtonStyle = {\n  float: 'center',\n  width: '200px',\n  backgroundColor: '#288046',\n  fontFamily: 'Montserrat'\n}\n\nconst LoginForm = (props) => {\n  const { setLoggedIn } = props\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const handleChangeUser = (event) => {\n    setUsername(event.target.value)\n  }\n  const handleChangePass = (event) => {\n    setPassword(event.target.value)\n  }\n  const submitLogin = async event => {\n    event.preventDefault()\n    if (!username || !password) {\n      toast.warn('You must enter a username and password')\n    }\n    else {\n      try {\n        const user =\n          await loginService.userlogin({ username, password })\n        window.localStorage.setItem(\n          'loggedForumUser', JSON.stringify(user)\n        )\n        forumService.setToken(user.token)\n        dispatch(setUser(user))\n        toast.info(`Welcome back ${user.username}`)\n        setLoggedIn(true)\n        setUsername('')\n        setPassword('')\n        history.push('/forum')\n      }\n      catch (error) {\n        console.log(error.message)\n        if (error.message.includes('401')) {\n          toast.error('Check your username and password again')\n        } else {\n          toast.error('Something went wrong...')\n        }\n      }\n    }\n  }\n  return (\n    <div className='container' id='login-form'>\n      <h2 style={textStyle}>Login</h2>\n      <div id='form-div' style={formDivStyle}>\n        <Form style={formStyle} onSubmit={submitLogin}>\n          <FormGroup>\n            <Label style={labelStyle}>Username:</Label>\n            <Input onChange={handleChangeUser} value={username}></Input><br />\n            <Label style={labelStyle}>Password:</Label> <Input id='password' type=\"password\" onChange={handleChangePass} value={password}></Input><br />\n            <Button style={loginButtonStyle} id='submit-login' type=\"submit\">Enter</Button>\n          </FormGroup>\n        </Form>\n      </div>\n      <br />\n      <hr />\n      <div id='no-account-div'>\n        <p style={textStyle}>Don't have an account? </p>\n        <RegisterForm />\n      </div>\n    </div>\n  )\n}\n\nexport default LoginForm","/* eslint-disable no-multi-str */\nimport React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Container, Button, Input, Label } from 'reactstrap'\nimport Select from 'react-select'\nimport makeAnimated from 'react-select/animated'\nimport { addQuestion } from '../reducers/forumReducer'\nimport { toast } from 'react-toastify'\n\nconst labelStyle = {\n  fontFamily: 'Montserrat',\n  fontVariant: 'small-caps',\n  fontWeight: 400,\n  fontSize: '1.5rem',\n  marginBottom: '0px',\n  marginTop: '30px'\n}\nconst buttonStyle = {\n  marginTop: '20px',\n  width: '200px',\n  backgroundColor: '#288046',\n  fontFamily: 'Montserrat',\n}\n\nconst tagOptions = [\n  { value: 'sex', label: 'Sex' },\n  { value: 'dating', label: 'Dating' },\n  { value: 'illegal drugs', label: 'Illegal Drugs' },\n  { value: 'friendship', label: 'Friendship' },\n  { value: 'lgbt', label: 'LGBT' },\n  { value: 'depression', label: 'Depression' },\n  { value: 'anxiety', label: 'Anxiety' },\n  { value: 'bipolar', label: 'Bipolar' },\n  { value: 'relationships', label: 'Relationships' },\n  { value: 'career', label: 'Career' },\n  { value: 'mental health', label: 'Mental Health' },\n  { value: 'bullying', label: 'Bullying' },\n  { value: 'family', label: 'Family' },\n  { value: 'peer pressure', label: 'Peer Pressure' },\n  { value: 'parenting', label: 'Parenting' },\n  { value: 'other', label: 'Other' }\n]\nconst ForumPostMain = (props) => {\n  const { activeUser } = props\n  const [question, setQuestion] = useState('')\n  const [title, setTitle] = useState('')\n  const [selectedTags, setSelectedTags] = useState([])\n  const animatedTags = makeAnimated()\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const handleTitleChange = (event) => {\n    setTitle(event.target.value)\n  }\n  const handleContentChange = (event) => {\n    setQuestion(event.target.value)\n  }\n  const handleTagChange = (selectedTags) => {\n    setSelectedTags(selectedTags)\n  }\n\n  const handleEditorSubmit = async (event) => {\n    event.preventDefault()\n    if (!title || !question || !selectedTags) {\n      toast.warn('Please make sure you have a title, a question, and some tags')\n    } else if (activeUser.username === 'Fern-Admin' || activeUser.username === 'Richard-Admin') {\n      toast.warn('Why are you trying to ask yourself a question?')\n    } else if (!activeUser.username) {\n      toast.warn('You must be logged in to post to the forum')\n      history.push('/login')\n    } else {\n      const postToAdd = {\n        title: title,\n        question: question,\n        answer: '',\n        isAnswered: false,\n        tags: selectedTags.map(t => t.value),\n        likes: 0\n      }\n      try {\n        dispatch(addQuestion(postToAdd))\n        setTitle('')\n        setQuestion('')\n        setSelectedTags([])\n        history.push('/forum')\n      } catch (error) {\n        toast.error('You must be logged in to post to the forum')\n        console.log(error)\n\n      }\n\n    }\n  }\n  return (\n    <Container>\n      <div id='forum-title-div'>\n        <Label style={labelStyle}>Title:</Label>\n        <p style={{ fontFamily: 'Montserrat' }}>Give your post an interesting title.</p>\n        <Input\n          placeholder='My Awesome Title!'\n          onChange={handleTitleChange}\n          value={title}\n          style={{ marginBottom: '20px', fontFamily: 'Montserrat' }}\n        />\n      </div>\n\n      <div id='forum-question-div'>\n        <Label style={labelStyle}>Question:</Label>\n        <p style={{ fontFamily: 'Montserrat' }}>Reminder: This forum is anonymous. Although you must have an account to post, your name and username will NOT show on the forum, so feel free to ask anything.</p>\n        <Input\n          type='textarea'\n          placeholder='I have a question about...'\n          onChange={handleContentChange}\n          value={question}\n          onSubmit={handleEditorSubmit}\n          style={{ fontFamily: 'Montserrat' }}\n        />\n        <Label style={labelStyle}>Tags:</Label>\n        <p style={{ fontFamily: 'Montserrat' }}>Select some tags to help other people know what your question is about!</p>\n        <Select\n          options={tagOptions}\n          onChange={handleTagChange}\n          closeMenuOnSelect={false}\n          components={animatedTags}\n          style={{ fontFamily: 'Montserrat' }}\n          defaultValue={[]}\n          isMulti>\n        </Select>\n        <div style={{ display: 'block', textAlign: 'center' }}>\n          <Button style={buttonStyle} onClick={handleEditorSubmit}>Ask Fern!</Button>\n        </div>\n      </div>\n\n    </Container>\n  )\n}\nexport default ForumPostMain","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faQuestionCircle, faComment } from '@fortawesome/free-solid-svg-icons';\nimport { initializeForumAnswered } from '../reducers/forumReducer'\nimport { Container, Card, Button, CardHeader, CardBody, Badge } from 'reactstrap';\n// import { tagFilterSelected } from '../reducers/forumReducer'\n// import SingleTagDisplay from './SingleTagDisplay';\n\nconst tagColorOptions = [\n  { tag: 'sex', backgroundColor: '#ff5c4d' },\n  { tag: 'dating', backgroundColor: '#288046' },\n  { tag: 'relationships', backgroundColor: '#ffa64d' },\n  { tag: 'lgbt', backgroundColor: '#ff4da6' },\n  { tag: 'friendship', backgroundColor: '#5050ff' },\n  { tag: 'depression', backgroundColor: '#343a40' },\n  { tag: 'anxiety', backgroundColor: '#5e320f' },\n  { tag: 'bipolar', backgroundColor: '#f347ff' },\n  { tag: 'career', backgroundColor: '#8e2bff' },\n  { tag: 'mental health', backgroundColor: '#1e45a8' },\n  { tag: 'bullying', backgroundColor: '#5e320f' },\n  { tag: 'family', backgroundColor: '#ffa64d' },\n  { tag: 'peer pressure', backgroundColor: '#288046' },\n  { tag: 'parenting', backgroundColor: '#6da870' },\n  { tag: 'other', backgroundColor: '#707571' },\n  { tag: 'illegal drugs', backgroundColor: '#40073d' },\n\n]\nconst chooseTagColor = (passed) => {\n  let color = tagColorOptions.find(t => t.tag === passed)\n  if (color) {\n    return {\n      backgroundColor: color.backgroundColor,\n      width: '90px',\n      verticalAlign: 'middle',\n      postition: 'relative'\n    }\n  } else {\n    return {\n      backgroundColor: 'magenta',\n      width: '80px'\n    }\n  }\n}\nconst cardHeaderStyle = {\n  fontFamily: 'Montserrat',\n  fontSize: '14px',\n  backgroundColor: '#343a40',\n  color: 'white',\n  marginTop: '10px',\n  paddingTop: '6px',\n  paddingBottom: '6px'\n}\nconst cardBodyStyleQ = {\n  fontSize: '14px',\n  fontFamily: 'Montserrat',\n  padding: '10px',\n  textAlign: 'left',\n  paddingLeft: '10px',\n  backgroundColor: '#b8ffbe' //super light green\n}\nconst cardBodyStyleA = {\n  fontSize: '14px',\n  fontFamily: 'Montserrat',\n  padding: '10px',\n  backgroundColor: '#f0e1df' //super light pink\n}\n// const cardTitleStyle = {\n//   fontFamily: 'Montserrat',\n\n// }\n// const cardTextStyle = {\n//   fontFamily: 'Montserrat',\n//   backgroundColor: '#e6b6b1', //pinkish\n// }\n// const cardFooterStyle = {\n//   fontFamily: 'Montserrat'\n// }\nconst smallStyle = {\n  float: 'right',\n  color: 'white'\n}\nconst postButtonDivStyle = {\n  marginTop: '50px',\n  marginBottom: '50px',\n  fontFamily: 'Montserrat',\n  fontSize: '30px'\n}\nconst postButtonStyle = {\n  borderColor: '#343a40',\n  borderWidth: '3px',\n  borderStyle: 'solid',\n  fontFamily: 'Montserrat',\n  backgroundColor: '#288046'\n}\n// const likeButtonStyle = {\n//   backgroundColor: '#4da6ff',\n//   height: '28px',\n//   width: '35px',\n//   lineHeight: '5px',\n//   paddingRight: '25px',\n//   borderRadius: '20px',\n// }\n// const tagBadgeStyle = {\n//   backgroundColor: '',\n//   width: '100px'\n// }\nconst ForumDisplayAll = (props) => {\n\n  const dispatch = useDispatch()\n  const { forumAnswered } = props\n\n  useEffect(() => {\n    dispatch(initializeForumAnswered())\n  }, [dispatch])\n\n  return (\n    <Container>\n      {forumAnswered.map(f =>\n        <div key={f._id}>\n          <Card >\n            <CardHeader style={cardHeaderStyle} tag=\"h5\">{f.title}\n              <small className=\"text-muted\" style={smallStyle}>asked on {f.date.slice(0, 10)}</small>\n            </CardHeader>\n            <CardBody style={cardBodyStyleQ}>\n              <FontAwesomeIcon icon={faQuestionCircle} style={{ color: 'magenta', fontSize: '20px', float: 'left', position: 'relative', marginRight: '20px' }} />\n              {f.question}\n            </CardBody>\n            <CardBody style={cardBodyStyleA}>\n              <FontAwesomeIcon icon={faComment} style={{ color: '#288046', fontSize: '20px', float: 'left', position: 'relative', marginRight: '20px' }} />\n              {f.answer}\n            </CardBody>\n            {/* <Button style={likeButtonStyle}><FontAwesomeIcon icon={faThumbsUp} /></Button> */}\n            <div style={{ display: 'block' }}>\n              {f.tags.map(t => <Badge key={t} style={chooseTagColor(t)} >{t}</Badge>)}\n            </div>\n          </Card>\n        </div>)}\n      <div style={postButtonDivStyle}>\n        Have a question?<br />\n        <Link to='/forum/post'><Button style={postButtonStyle} block>Submit a Post</Button></Link>\n      </div>\n    </Container>\n  )\n}\nexport default ForumDisplayAll","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Container, Card, Button, CardHeader, CardBody, Badge } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faQuestionCircle, faComment } from '@fortawesome/free-solid-svg-icons';\n// import { initializeForumAnswered } from '../reducers/forumReducer'\n\nconst tagColorOptions = [\n  { tag: 'sex', backgroundColor: '#ff5c4d' },\n  { tag: 'dating', backgroundColor: '#288046' },\n  { tag: 'relationships', backgroundColor: '#ffa64d' },\n  { tag: 'lgbt', backgroundColor: '#ff4da6' },\n  { tag: 'friendship', backgroundColor: '#5050ff' },\n  { tag: 'depression', backgroundColor: '#343a40' },\n  { tag: 'anxiety', backgroundColor: '#5e320f' },\n  { tag: 'bipolar', backgroundColor: '#f347ff' },\n  { tag: 'career', backgroundColor: '#8e2bff' },\n  { tag: 'mental health', backgroundColor: '#1e45a8' },\n  { tag: 'bullying', backgroundColor: '#5e320f' },\n  { tag: 'family', backgroundColor: '#ffa64d' },\n  { tag: 'peer pressure', backgroundColor: '#288046' },\n  { tag: 'parenting', backgroundColor: '#6da870' },\n  { tag: 'other', backgroundColor: '#707571' },\n  { tag: 'illegal drugs', backgroundColor: '#40073d' },\n\n]\nconst chooseTagColor = (passed) => {\n  let color = tagColorOptions.find(t => t.tag === passed)\n  if (color) {\n    return {\n      backgroundColor: color.backgroundColor,\n      width: '90px',\n      verticalAlign: 'middle',\n      postition: 'relative'\n    }\n  } else {\n    return {\n      backgroundColor: 'magenta',\n      width: '80px'\n    }\n  }\n}\nconst cardHeaderStyle = {\n  fontFamily: 'Montserrat',\n  fontSize: '14px',\n  backgroundColor: '#343a40',\n  color: 'white',\n  marginTop: '10px',\n  paddingTop: '6px',\n  paddingBottom: '6px'\n}\nconst cardBodyStyleQ = {\n  fontSize: '14px',\n  fontFamily: 'Montserrat',\n  padding: '10px',\n  textAlign: 'left',\n  paddingLeft: '10px',\n  backgroundColor: '#b8ffbe' //super light green\n}\nconst cardBodyStyleA = {\n  fontSize: '14px',\n  fontFamily: 'Montserrat',\n  padding: '10px',\n  backgroundColor: '#f0e1df' //super light pink\n}\n\nconst smallStyle = {\n  float: 'right',\n  color: 'white'\n}\nconst postButtonDivStyle = {\n  marginTop: '50px',\n  marginBottom: '50px',\n  fontFamily: 'Montserrat',\n  fontSize: '30px'\n}\nconst postButtonStyle = {\n  borderColor: '#343a40',\n  borderWidth: '3px',\n  borderStyle: 'solid',\n  fontFamily: 'Montserrat',\n  backgroundColor: '#288046'\n}\n\nconst SingleTagDisplay = () => {\n  // const { activeUser, forumAnswered } = props\n  // const dispatch = useDispatch()\n\n  let tagged = useSelector(state => state.forum.answered.map(post => post.tags.includes(state.forum.tagFilter) ? post : null)).filter(t => t !== null)\n  console.log(tagged)\n\n  const chosenFilter = useSelector(state => state.forum.tagFilter)\n  console.log(chosenFilter)\n\n  return (\n    <Container>\n      {tagged.sort((a, b) => new Date(b.date) - new Date(a.date)).map(f =>\n        <div key={f._id}>\n          <Card >\n            <CardHeader style={cardHeaderStyle} tag=\"h5\">{f.title}\n              <small className=\"text-muted\" style={smallStyle}>asked on {f.date.slice(0, 10)}</small>\n            </CardHeader>\n            <CardBody style={cardBodyStyleQ}>\n              <FontAwesomeIcon icon={faQuestionCircle} style={{ color: 'magenta', fontSize: '20px', float: 'left', position: 'relative', marginRight: '20px' }} />\n              {f.question}\n            </CardBody>\n            <CardBody style={cardBodyStyleA}>\n              <FontAwesomeIcon icon={faComment} style={{ color: '#288046', fontSize: '20px', float: 'left', position: 'relative', marginRight: '20px' }} />\n              {f.answer}\n            </CardBody>\n            {/* <Button style={likeButtonStyle}><FontAwesomeIcon icon={faThumbsUp} /></Button> */}\n            <div style={{ display: 'block' }}>\n              {f.tags.map(t => <Badge key={t} style={chooseTagColor(t)} >{t}</Badge>)}\n            </div>\n          </Card>\n        </div>)}\n      <div style={postButtonDivStyle}>\n        Have a question?<br />\n        <Link to='/forum/post'><Button style={postButtonStyle} block>Submit a Post</Button></Link>\n      </div>\n    </Container>\n  )\n}\nexport default SingleTagDisplay","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Container, Card, CardTitle, CardBody } from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faQuestionCircle, faUserFriends, faSadCry, faBolt, faDizzy, faBusinessTime, faBrain, faBabyCarriage, faEye, faHome, faSyringe, faHeartBroken, faVenusMars, faTransgender, faCocktail, faAngry } from '@fortawesome/free-solid-svg-icons';\n// import { initializeForumAnswered } from '../reducers/forumReducer'\nimport { setTagFilter } from '../reducers/forumReducer'\nimport SingleTagDisplay from './SingleTagDisplay'\n\n\nconst tagOptions = [\n  { tag: 'sex', backgroundColor: '#ff5c4d', icon: faVenusMars },\n  { tag: 'dating', backgroundColor: '#288046', icon: faCocktail },\n  { tag: 'relationships', backgroundColor: '#ffa64d', icon: faHeartBroken },\n  { tag: 'lgbt', backgroundColor: '#ff4da6', icon: faTransgender },\n  { tag: 'friendship', backgroundColor: '#5050ff', icon: faUserFriends },\n  { tag: 'depression', backgroundColor: '#343a40', icon: faSadCry },\n  { tag: 'anxiety', backgroundColor: '#5e320f', icon: faBolt },\n  { tag: 'bipolar', backgroundColor: '#f347ff', icon: faDizzy },\n  { tag: 'career', backgroundColor: '#8e2bff', icon: faBusinessTime },\n  { tag: 'mental health', backgroundColor: '#1e45a8', icon: faBrain },\n  { tag: 'bullying', backgroundColor: '#5e320f', icon: faAngry },\n  { tag: 'family', backgroundColor: '#ffa64d', icon: faHome },\n  { tag: 'peer pressure', backgroundColor: '#288046', icon: faEye },\n  { tag: 'parenting', backgroundColor: '#6da870', icon: faBabyCarriage },\n  { tag: 'other', backgroundColor: '#707571', icon: faQuestionCircle },\n  { tag: 'illegal drugs', backgroundColor: '#40073d', icon: faSyringe },\n\n]\nconst chooseTagColor = (passed) => {\n  let color = tagOptions.find(t => t.tag === passed)\n  if (color) {\n    return {\n      backgroundColor: color.backgroundColor,\n      width: '80px',\n      height: '60px',\n      verticalAlign: 'middle',\n      postition: 'relative',\n      color: 'white',\n      fontSize: '40px',\n      padding: '10px'\n    }\n  } else {\n    return {\n      backgroundColor: 'magenta',\n      width: '100px'\n    }\n  }\n}\nconst chooseTagIcon = (passed) => {\n  let chosen = tagOptions.find(t => t.tag === passed)\n  if (chosen) {\n    return chosen.icon\n  } else {\n    return null\n  }\n}\nconst textStyle = {\n  color: 'black',\n  fontFamily: 'Montserrat',\n  fontSize: '16px',\n  textAlign: 'center'\n}\nconst divStyle = {\n  display: 'flex',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  marginTop: '40px'\n}\n\nconst ForumLandingPage = (props) => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const tag = useSelector(state => state.forum)\n  console.log(tag)\n\n  const { forumAnswered, activeUser } = props\n\n  const clickTag = (t) => {\n    dispatch(setTagFilter(t.tag))\n    history.push(`/forum/${t.tag}`)\n  }\n  return (\n    <Container style={divStyle}>\n      {tagOptions.map(t =>\n        <div key={t.tag} style={{ flexDirection: 'row' }} >\n          <Card body>\n            <CardTitle style={textStyle}>{t.tag}\n              <CardBody>\n                <span onClick={() => clickTag(t)}>\n                  <FontAwesomeIcon\n                    style={chooseTagColor(t.tag)}\n                    icon={chooseTagIcon(t.tag)}\n                  >{t.tag}\n                  </FontAwesomeIcon>\n                </span>\n              </CardBody>\n            </CardTitle>\n          </Card>\n        </div>\n      )}\n      {/* <SingleTagDisplay activeUser={activeUser} forumAnswered={forumAnswered} /> */}\n    </Container >\n  )\n}\nexport default ForumLandingPage","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport Recaptcha from 'react-recaptcha'\nimport { Formik } from 'formik';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelopeSquare } from '@fortawesome/free-solid-svg-icons';\nimport { faFacebookSquare } from '@fortawesome/free-brands-svg-icons'\nimport { Container, Form, Label, Input, FormGroup, Button } from 'reactstrap'\nimport contactService from '../services/contactService'\nimport { toast } from 'react-toastify';\n\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Montserrat',\n  fontVariant: 'small-caps'\n}\nconst formDivStyle = {\n  display: 'block',\n  textAlign: 'center',\n  marginTop: '50px',\n  fontFamily: 'Montserrat',\n}\nconst formStyle = {\n  width: '90%',\n  display: 'inline-block'\n}\nconst labelStyle = {\n  float: 'left',\n  marginBottom: '0px',\n  padding: '0px',\n  fontFamily: 'Montserrat',\n  fontVariant: 'small-caps'\n}\nconst contactButtonStyle = {\n  float: 'center',\n  width: '200px',\n  marginBottom: '20px',\n  fontFamily: 'Montserrat',\n  backgroundColor: '#288046'\n}\n\nconst ContactForm = () => {\n  const [isVerified, setIsVerified] = useState(false)\n  const history = useHistory()\n  const recaptchaLoaded = () => {\n    console.log('captcha loaded successfully')\n  }\n  const verifyCallback = (response) => {\n    if (response) {\n      setIsVerified(true);\n    }\n  }\n  return (\n    <div>\n      <Formik\n        initialValues={{ name: '', email: '', LINE: '', message: '' }}\n        onSubmit={\n          async (values, { setSubmitting, resetForm }) => {\n            if (!values.email) {\n              toast.warn('Email required')\n            }\n            else if (!values.message) {\n              toast.warn('Message required')\n            }\n            else if (\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n            ) {\n              toast.warn('Invalid email address')\n            }\n            else if (!isVerified) {\n              toast.warn('Please verify that you are a human')\n            } else {\n              await contactService.sendContact(values)\n              toast.success('Request sent')\n              setSubmitting(false)\n              resetForm({})\n              history.push('/forum')\n            }\n          }\n        }\n      >\n        {({\n          values,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n        }) => (\n            <Container style={formDivStyle}>\n              <p style={{\n                fontFamily: 'Montserrat'\n              }}> We understand if you don't want to post on the forum just yet.  Instead, you can use this form to contact Fern privately, or add her on social media.</p>\n              <div id='NavBarText'>\n                <a href=\"mailto:furbynilu@gmail.com\"> <FontAwesomeIcon id='fa-contact-form' icon={faEnvelopeSquare} />\n                </a>\n                <a href=\"https://www.facebook.com/NiluAcounselor\"> <FontAwesomeIcon id='fa-contact-form' icon={faFacebookSquare} /></a>\n              </div>\n              <br />\n              <h3 style={textStyle}>Enter your information: </h3>\n              <Form style={formStyle} onSubmit={handleSubmit} className='form-ui'>\n                <FormGroup style={{ marginBottom: '0' }}>\n                  <Label style={labelStyle} for='name'>Name</Label>\n                  <Input\n                    type=\"Name\"\n                    name=\"name\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.name}\n                  /><br />\n                  <Label style={labelStyle} for='email'>Email</Label>\n                  <Input\n                    placeholder='You@example.com'\n                    type=\"Email\"\n                    name=\"email\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.email}\n                  /><br />\n                  <Label style={labelStyle} for='Line'>LINE</Label>\n                  <Input\n                    placeholder='Line ID'\n                    type=\"Line\"\n                    name=\"LINE\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.LINE}\n                  /><br />\n                  <Label style={labelStyle} for='message'>Message</Label>\n                  <Input\n                    placeholder='I have a question about...'\n                    type=\"Message\"\n                    name=\"message\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.message}\n                  /><br />\n                </FormGroup>\n                <Recaptcha sitekey='6LcL060ZAAAAABmkdF8vTezZgafAVQo1WoGgGNDT' render='explicit' onloadCallback={recaptchaLoaded} verifyCallback={verifyCallback} />\n                <Button style={contactButtonStyle} type='submit' >Send</Button><br />\n              </Form>\n            </Container>\n          )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default ContactForm;","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\nimport loginService from '../services/loginService'\nimport forumService from '../services/forumService'\nimport { setUser } from '../reducers/activeUserReducer'\nimport { Form, Label, FormGroup, Button, Input } from 'reactstrap'\nimport { toast } from 'react-toastify'\n\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Montserrat',\n  fontVariant: 'small-caps'\n}\nconst formDivStyle = {\n  fontFamily: 'Montserrat',\n  fontVariant: 'small-caps',\n  display: 'block',\n  textAlign: 'center'\n}\nconst formStyle = {\n  width: '70%',\n  display: 'inline-block'\n}\nconst labelStyle = {\n  float: 'left',\n  marginBottom: '0px',\n  padding: '0px',\n  fontFamily: 'Montserrat'\n}\nconst loginButtonStyle = {\n  float: 'center',\n  width: '200px',\n  backgroundColor: '#28804b',\n  fontFamily: 'Montserrat',\n  color: 'white'\n}\nconst iconStyle = {\n  float: 'center'\n}\n\nconst AdminLoginForm = (props) => {\n  const { setLoggedIn } = props\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const handleChangeUser = (event) => {\n    setUsername(event.target.value)\n  }\n  const handleChangePass = (event) => {\n    setPassword(event.target.value)\n  }\n  const submitLogin = async event => {\n    event.preventDefault()\n    if (!username || !password) {\n      toast.warn('You must enter a username and password')\n    }\n    else {\n      try {\n        const admin =\n          await loginService.adminLogin({ username, password })\n        window.localStorage.setItem(\n          'loggedForumUser', JSON.stringify(admin)\n        )\n        forumService.setToken(admin.token)\n        dispatch(setUser(admin))\n        setLoggedIn(true)\n        setUsername('')\n        setPassword('')\n        history.push('/admin/dashboard')\n      }\n      catch (error) {\n        console.log(error.message)\n      }\n    }\n  }\n  return (\n    <div className='container' id='admin-login-form'>\n      <div>\n        <h2 style={textStyle}><FontAwesomeIcon icon={faLock} style={iconStyle} />{' '}Admin{' '}</h2>\n      </div>\n      <div id='form-div' style={formDivStyle}>\n        <Form style={formStyle} onSubmit={submitLogin}>\n          <FormGroup>\n            <Label style={labelStyle}>Username:</Label>\n            <Input onChange={handleChangeUser} value={username}></Input><br />\n            <Label style={labelStyle}>Password:</Label> <Input id='password' type=\"password\" onChange={handleChangePass} value={password}></Input><br />\n            <Button color='none' style={loginButtonStyle} id='admin-submit-login' type=\"submit\">Enter</Button>\n          </FormGroup>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default AdminLoginForm","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Table, Container, Button } from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelopeSquare } from '@fortawesome/free-solid-svg-icons';\nimport { initializeContacts, setContactHidden } from '../reducers/contactReducer'\n\nconst buttonStyle = {\n  fontFamily: 'Montserrat',\n  width: '50px',\n  paddingRight: '3px',\n  paddingLeft: '3px',\n  fontSize: '10px',\n  backgroundColor: '#bf3d3d'\n}\nconst mailIconStyle = {\n  fontSize: '40px',\n  backgroundColor: 'white',\n  color: '#343a40'\n}\n\nconst AdminContactsDashboard = () => {\n  const dispatch = useDispatch()\n  const contact = useSelector(state => state.contact)\n  // const [toggle, setToggle] = useState(false)\n\n  const setHidden = (c) => {\n    dispatch(setContactHidden(c))\n  }\n\n  useEffect(() => {\n    dispatch(initializeContacts())\n  }, [dispatch])\n\n  return (\n    <Container>\n      <Table size='sm' hover responsive>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>LINE</th>\n            <th>Email</th>\n            <th>Date</th>\n            <th>Message</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            contact.map(c => c.hidden === false ?\n              <tr key={c._id}>\n                <td>{c.name}</td>\n                <td>{c.LINE}</td>\n                <td><a href={`mailto:${c.email}`}> <FontAwesomeIcon id='fa-contact-form-admin' icon={faEnvelopeSquare} style={mailIconStyle} />\n                </a></td>\n                <td>{c.date.slice(0, 10)}</td>\n                <td>{c.message}</td>\n                <td><Button style={buttonStyle} onClick={() => setHidden(c)} size='sm'>Remove</Button></td>\n              </tr>\n              : null)\n          }\n        </tbody>\n      </Table>\n    </Container>\n  )\n}\nexport default AdminContactsDashboard","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Table, Button, Container } from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelopeSquare } from '@fortawesome/free-solid-svg-icons';\nimport { initializeUsers } from '../reducers/userInfoForAdminReducer'\n\nconst buttonStyle = {\n  fontFamily: 'Montserrat'\n}\nconst mailIconStyle = {\n  fontSize: '40px',\n  backgroundColor: 'white',\n  color: '#343a40'\n}\nconst headingStyle = {\n  fontFamily: 'Montserrat'\n}\nconst contentStyle = {\n  fontFamily: 'Montserrat'\n}\n\nconst AdminUsersDashboard = () => {\n  const dispatch = useDispatch()\n  const users = useSelector(state => state.userInfoForAdmin)\n  const [questionToggle, setQuestionToggle] = useState(false)\n\n  useEffect(() => {\n    dispatch(initializeUsers())\n  }, [dispatch])\n\n  return (\n    <Container>\n      <Table size='sm' hover responsive>\n        <thead>\n          <tr>\n            <th style={headingStyle}>Name</th>\n            <th style={headingStyle}>Username</th>\n            <th style={headingStyle}>Email</th>\n            <th style={headingStyle}>DOB(Y-M-D)</th>\n            <th style={headingStyle}>Questions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            users.map(c =>\n              <tr key={c.id}>\n                <td style={contentStyle}>{c.name}</td>\n                <td style={contentStyle}>{c.username}</td>\n                <td><a href={`mailto:${c.email}`}> <FontAwesomeIcon id='fa-contact-form-admin' icon={faEnvelopeSquare} style={mailIconStyle} />\n                </a></td>\n                <td style={contentStyle}>{c.dateOfBirth.slice(0, 10)}</td>\n                <td><Button style={buttonStyle} size='sm' disabled onClick={() => setQuestionToggle(!questionToggle)}>Questions</Button></td>\n              </tr>)\n          }\n        </tbody>\n      </Table>\n    </Container>\n  )\n}\nexport default AdminUsersDashboard","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Container, Button, Label, Input } from 'reactstrap'\nimport { answerQuestion } from '../reducers/forumReducer'\nimport { toast } from 'react-toastify'\n\nconst labelStyle = {\n  fontFamily: 'Montserrat',\n  fontVariant: 'small-caps',\n  fontWeight: 400,\n  fontSize: '1.5rem',\n  marginBottom: '0px',\n  marginTop: '30px'\n}\nconst buttonStyle = {\n  fontFamily: 'Montserrat',\n  backgroundColor: '#288046',\n  marginTop: '15px',\n  marginBottom: '15px'\n}\n\n\nconst AdminForumAnswer = (props) => {\n  const { setAnswering, answering } = props\n  const [answer, setAnswer] = useState('')\n  const dispatch = useDispatch()\n\n  const handleContentChange = (event) => {\n    setAnswer(event.target.value)\n  }\n  const handleEditorSubmit = async (event) => {\n    event.preventDefault()\n    if (!answer) {\n      toast.warn('You must have an answer')\n    } else {\n      try {\n        const postToAnswer = {\n          ...answering, answer: answer, isAnswered: true\n        }\n        dispatch(answerQuestion(postToAnswer))\n        setAnswer('')\n        setAnswering('')\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  }\n  return (\n    <div id='forum-response-div'>\n      <Container>\n        <Label style={labelStyle}>Question:</Label>\n        <p style={{ fontFamily: 'Montserrat' }}>Reminder: This forum is anonymous.</p>\n        {(!answering.question) ? <h3 style={{ color: 'red', fontFamily: 'Montserrat' }}>You must first select a post</h3> :\n          <div style={{ borderColor: 'red', borderStyle: 'solid', padding: '10px', borderWidth: '1px' }}><p style={{ fontFamily: 'Montserrat' }}><em>You are answering the following question:</em></p>{answering.question}</div>}\n        <Input\n          style={{ fontFamily: 'Montserrat', marginTop: '15px' }}\n          type='textarea'\n          onChange={handleContentChange}\n          value={answer}\n          onSubmit={handleEditorSubmit}\n        />\n        <Button style={buttonStyle} onClick={handleEditorSubmit}>Submit Answer</Button>\n      </Container>\n    </div>\n  )\n}\nexport default AdminForumAnswer","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Table, Container, Button } from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelopeSquare } from '@fortawesome/free-solid-svg-icons';\nimport { initializeForumPending } from '../reducers/forumReducer'\nimport AdminForumAnswer from './AdminForumAnswer'\n\n\nconst buttonStyle = {\n  fontFamily: 'Montserrat',\n  backgroundColor: '#5d90c4',\n  width: '50px',\n  paddingRight: '5px',\n  paddingLeft: '5px',\n  fontSize: '10px'\n}\nconst mailIconStyle = {\n  fontSize: '40px',\n  backgroundColor: 'white',\n  color: '#343a40'\n}\nconst AdminForumDashboard = () => {\n  const dispatch = useDispatch()\n  const [answering, setAnswering] = useState({})\n  const forum = useSelector(state => state.forum)\n\n  useEffect(() => {\n    dispatch(initializeForumPending())\n  }, [dispatch])\n\n  return (\n    <Container>\n      <Table size='sm' hover responsive>\n        <thead>\n          <tr>\n            <th>Email</th>\n            <th>Date</th>\n            <th>Question</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            forum.map(c => c.isAnswered === false ?\n              <tr key={c._id}>\n                <td style={{ fontFamily: 'Montserrat' }}><a href={`mailto:${c.user.email}`}> <FontAwesomeIcon id='fa-contact-form-admin' icon={faEnvelopeSquare} style={mailIconStyle} /></a></td>\n                <td style={{ fontFamily: 'Montserrat' }}>{c.date.slice(0, 10)}</td>\n                <td style={{ fontFamily: 'Montserrat' }}>{c.question}</td>\n                <td><Button style={buttonStyle} onClick={() => setAnswering(c)}>Answer</Button></td>\n              </tr>\n              : null)\n          }\n        </tbody>\n      </Table>\n      <AdminForumAnswer answering={answering} setAnswering={setAnswering} />\n    </Container>\n  )\n}\nexport default AdminForumDashboard","import React from 'react'\n\nconst NoPage = () => {\n\n  const textStyle = {\n    fontFamily: 'Montserrat',\n    fontWeight: '700',\n    textAlign: 'center',\n    marginTop: '300px'\n  }\n  return (\n    <div style={textStyle}>\n      <h1>\n        Sorry, but this page doesn't exist...\n      </h1>\n    </div>\n  )\n}\nexport default NoPage","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { setUser } from './reducers/activeUserReducer'\nimport { initializeForumAnswered } from './reducers/forumReducer'\nimport forumService from './services/forumService'\nimport MyNavbar from './components/MyNavbar';\nimport About from './components/About';\nimport LoginForm from './components/LoginForm'\nimport ForumPostMain from './components/ForumPostMain';\nimport ForumDisplayAll from './components/ForumDisplayAll'\nimport ForumLandingPage from './components/ForumLandingPage'\nimport ContactForm from './components/ContactForm';\nimport AdminLoginForm from './components/AdminLoginForm';\nimport AdminContactsDashboard from './components/AdminContactsDashboard'\nimport AdminUsersDashboard from './components/AdminUsersDashboard'\nimport AdminForumDashboard from './components/AdminForumDashboard'\nimport NoPage from './components/NoPage'\nimport { Button, UncontrolledCollapse, Container } from 'reactstrap';\nimport SingleTagDisplay from './components/SingleTagDisplay';\n\n//import { initializeQuestions } from './reducers/forumReducer';\n\n\nconst App = () => {\n  const [loggedIn, setLoggedIn] = useState(false)\n  // const forum = useSelector(state => state.forum)\n  const activeUser = useSelector(state => state.activeUser)\n  const dispatch = useDispatch()\n  const forumAnswered = useSelector(state => state.forum.answered)\n\n  // const dispatch = useDispatch()\n  // useEffect(() => {\n  //   dispatch(initializeQuestions())\n  // }, [dispatch])\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedForumUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(setUser(user))\n      setLoggedIn(true)\n      forumService.setToken(user.token)\n    }\n  }, [dispatch])\n\n\n  useEffect(() => {\n    dispatch(initializeForumAnswered())\n  }, [dispatch])\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <MyNavbar activeUser={activeUser} setLoggedIn={setLoggedIn} loggedIn={loggedIn} />\n        <ToastContainer\n          position=\"top-center\"\n          autoClose={3000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/contact\">\n            <ContactForm />\n          </Route>\n          <Route exact path=\"/forum/:tag\">\n            <SingleTagDisplay activeUser={activeUser} forumAnswered={forumAnswered} />\n          </Route>\n          <Route exact path=\"/forum\">\n            <ForumLandingPage activeUser={activeUser} forumAnswered={forumAnswered} />\n          </Route>\n          <Route exact path=\"/forum/post\">\n            <ForumPostMain activeUser={activeUser} />\n          </Route>\n          <Route path=\"/forum/all\">\n            <ForumDisplayAll activeUser={activeUser} forumAnswered={forumAnswered} />\n          </Route>\n          <Route path=\"/login\">\n            <LoginForm setLoggedIn={setLoggedIn} />\n          </Route>\n          <Route path='/admin/dashboard'>\n            {!activeUser || (activeUser.username !== 'Fern-Admin' && activeUser.username !== 'Richard-Admin') ?\n              <NoPage /> :\n              <Container>\n                <Button color='secondary' id='pendingToggler' style={{ margin: '0.5rem', position: 'relative', fontFamily: 'Montserrat' }}>Show Pending\n                </Button>\n                <Button color='secondary' id='contactsToggler' style={{ margin: '0.5rem', position: 'relative', fontFamily: 'Montserrat' }}>Show Contacts</Button>\n                <Button color='secondary' id='usersToggler' style={{ margin: '0.5rem', position: 'relative', fontFamily: 'Montserrat' }}>Show Users</Button>\n                <UncontrolledCollapse toggler=\"#pendingToggler\">\n                  <AdminForumDashboard />\n                </UncontrolledCollapse>\n                <UncontrolledCollapse toggler=\"#contactsToggler\">\n                  <AdminContactsDashboard />\n                </UncontrolledCollapse>\n                <UncontrolledCollapse toggler=\"#usersToggler\">\n                  <AdminUsersDashboard />\n                </UncontrolledCollapse>\n              </Container>\n            }\n          </Route>\n          <Route path=\"/admin\">\n            <AdminLoginForm setLoggedIn={setLoggedIn} />\n          </Route>\n        </Switch>\n      </div>\n    </Router >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { store } from './store'\nimport { persistor } from './store'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.css'\nimport App from './App';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>\n  ,\n  document.getElementById('root')\n);","module.exports = __webpack_public_path__ + \"static/media/fern-logo-350.0eb8aaf4.png\";"],"sourceRoot":""}