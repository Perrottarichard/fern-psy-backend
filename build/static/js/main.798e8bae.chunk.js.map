{"version":3,"sources":["services/forumService.js","reducers/forumReducer.js","reducers/activeUserReducer.js","services/contactService.js","reducers/contactReducer.js","services/userService.js","reducers/userInfoForAdminReducer.js","store.js","components/Logout.js","components/MyNavbar.js","components/About.js","services/loginService.js","components/SpinningLoader.js","components/RegisterForm.js","components/LoginForm.js","components/ForumPostMain.js","components/ForumDisplayMain.js","components/ContactForm.js","components/AdminLoginForm.js","components/AdminContactsDashboard.js","components/AdminUsersDashboard.js","components/AdminForumAnswer.js","components/AdminForumDashboard.js","components/NoPage.js","App.js","index.js","fern-logo-350.png"],"names":["baseUrl","token","getPending","a","axios","get","response","data","getAnswered","create","newObject","config","headers","Authorization","post","update","put","_id","setToken","newToken","remove","question","delete","id","like","toUpdate","answerQuestion","answer","dispatch","forumService","type","toast","success","addQuestion","newQuestion","forumReducer","state","action","questionToChange","find","q","changedQuestion","likes","map","answerId","objectToModify","s","changedToAnswered","isAnswered","filter","setUser","activeUserReducer","sendContact","message","getAll","hideContact","contactToHide","contactReducer","c","registerUser","user","getAllUsers","userInfoForAdminReducer","reducer","combineReducers","forum","activeUser","contact","userInfoForAdmin","store","createStore","composeWithDevTools","applyMiddleware","thunk","Logout","props","setLoggedIn","history","useHistory","useDispatch","Button","onClick","window","localStorage","clear","info","push","outline","color","size","MyNavbar","useState","isOpen","setIsOpen","loggedIn","Navbar","dark","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","className","NavItem","NavLink","tag","Link","to","username","NavbarText","icon","faUser","About","Container","fluid","style","marginBottom","src","Fern","alt","ListGroup","flush","ListGroupItem","userlogin","adminLogin","admin","SpinningLoader","Spinner","width","height","textStyle","textAlign","fontFamily","registerButtonStyle","display","float","formDivStyle","labelStyle","padding","genderSelectStyle","marginRight","RegisterForm","modal","setModal","loading","setLoading","isVerified","setIsVerified","name","setName","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","selectedGender","setSelectedGender","dateOfBirth","setDateOfBirth","toggle","variations","submitRegister","event","preventDefault","includes","v","toLowerCase","warn","length","test","userService","console","log","error","Modal","autoFocus","modalTransition","timeout","ModalBody","Form","onSubmit","FormGroup","Label","Input","onChange","target","value","options","label","sitekey","render","onloadCallback","verifyCallback","ModalFooter","formStyle","loginButtonStyle","backgroundColor","LoginForm","submitLogin","loginService","setItem","JSON","stringify","fontVariant","fontWeight","fontSize","marginTop","buttonStyle","tagOptions","ForumPostMain","setQuestion","title","setTitle","selectedTags","setSelectedTags","animatedTags","makeAnimated","handleEditorSubmit","postToAdd","tags","t","placeholder","closeMenuOnSelect","components","defaultValue","isMulti","tagColorOptions","chooseTagColor","passed","verticalAlign","postition","cardHeaderStyle","paddingTop","paddingBottom","cardBodyStyle","cardTitleStyle","cardTextStyle","smallStyle","likeButtonStyle","lineHeight","paddingRight","borderRadius","ForumDisplayMain","useSelector","useEffect","answered","f","key","Card","CardHeader","date","slice","CardBody","CardTitle","CardText","faThumbsUp","Badge","pill","contactButtonStyle","ContactForm","recaptchaLoaded","initialValues","LINE","values","setSubmitting","resetForm","contactService","handleChange","handleBlur","handleSubmit","isSubmitting","faEnvelopeSquare","faFacebookSquare","for","onBlur","iconStyle","AdminLoginForm","faLock","AdminContactsDashboard","setHidden","hiddenContact","hidden","setContactHidden","Table","striped","AdminUsersDashboard","users","questionToggle","setQuestionToggle","allUsers","AdminForumAnswer","setAnswering","answering","setAnswer","postToAnswer","borderColor","borderStyle","borderWidth","AdminForumDashboard","questions","NoPage","App","loggedUserJSON","getItem","parse","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","path","exact","margin","UncontrolledCollapse","toggler","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.798e8bae.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/forum'\n\nlet token = null\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getPending = async () => {\n  const response = await axios.get(`${baseUrl}/pending`)\n  return response.data\n}\nconst getAnswered = async () => {\n  const response = await axios.get(`${baseUrl}/answered`)\n  return response.data\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (newObject) => {\n  const response = axios.put(`${baseUrl}/${newObject._id}`, newObject)\n  return response.data\n}\n\nconst remove = async question => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.delete(`${baseUrl}/${question.id}`, config)\n  return response.data\n}\n\nconst like = async (toUpdate) => {\n  const id = toUpdate.id\n  const response = await axios.put(`${baseUrl}/${id}`, toUpdate)\n  return response.data\n}\n\nexport default { getPending, getAnswered, create, update, setToken, remove, like }","import forumService from '../services/forumService'\nimport { toast } from 'react-toastify'\n\nconst forumReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'NEW_QUESTION':\n      return state\n    case 'INIT_FORUM_PENDING':\n      return action.data\n    case 'INIT_FORUM_ANSWERED':\n      return action.data\n    case 'LIKE':\n      const id = action.data.id\n      const questionToChange = state.find(q => q.id === id)\n      const changedQuestion = { ...questionToChange, likes: questionToChange.likes + 1 }\n      return state.map(q => q.id === id ? changedQuestion : q)\n    case 'POST_ANSWER':\n      const answerId = action.data._id\n      const objectToModify = state.find(s => s._id === answerId)\n      const changedToAnswered = { ...objectToModify, isAnswered: true, answer: action.data.answer }\n      return state.map(s => s._id === answerId ? changedToAnswered : s)\n    case 'DELETE_QUESTION':\n      return state.filter(q => q.id !== action.data.id)\n    default: return state\n  }\n}\nexport const upLike = (question) => {\n  return async dispatch => {\n    const updatedObject = { ...question, likes: question.likes + 1 }\n    await forumService.like(updatedObject)\n    dispatch({\n      type: 'LIKE',\n      data: updatedObject\n    })\n    toast.success('You like a post!')\n  }\n}\nexport const answerQuestion = (answer) => {\n  return async dispatch => {\n    await forumService.update(answer)\n    dispatch({\n      type: 'POST_ANSWER',\n      data: answer\n    })\n    toast.success('You answered a question!')\n  }\n}\nexport const addQuestion = data => {\n  return async dispatch => {\n    const newQuestion = await forumService.create(data)\n    dispatch({\n      type: 'NEW_QUESTION',\n      data: newQuestion\n    })\n    toast.success('You submitted a question!')\n  }\n}\nexport const deleteQuestion = data => {\n  return async dispatch => {\n    await forumService.remove(data)\n    dispatch({\n      type: 'DELETE_QUESTION',\n      data\n    })\n    toast.success('Question deleted')\n  }\n}\nexport const initializeForumPending = () => {\n  return async dispatch => {\n    const questions = await forumService.getPending()\n    dispatch({\n      type: 'INIT_FORUM_PENDING',\n      data: questions\n    })\n  }\n}\nexport const initializeForumAnswered = () => {\n  return async dispatch => {\n    const answered = await forumService.getAnswered()\n    dispatch({\n      type: 'INIT_FORUM_ANSWERED',\n      data: answered\n    })\n  }\n}\nexport default forumReducer","\nconst activeUserReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.data\n    case 'CLEAR_USER':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const setUser = data => {\n  return {\n    type: 'SET_USER',\n    data\n  }\n}\nexport const clearUser = () => {\n  return {\n    type: 'CLEAR_USER',\n    data: null\n  }\n}\n\nexport default activeUserReducer","import axios from 'axios'\nconst baseUrl = '/api/contact'\n\nconst sendContact = async message => {\n  const response = await axios.post(baseUrl, message)\n  return response.data\n}\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\nconst hideContact = async contactToHide => {\n  const id = contactToHide._id\n  const response = await axios.put(`${baseUrl}/${id}`, contactToHide)\n  return response.data\n}\nexport default { sendContact, getAll, hideContact }","import contactService from '../services/contactService'\nimport { toast } from 'react-toastify'\n\nconst contactReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_CONTACTS':\n      return action.data\n    case 'SET_CONTACT_HIDDEN':\n      return state.filter(c => c._id !== action.data._id)\n    default:\n      return state\n  }\n}\n\nexport const initializeContacts = () => {\n  return async dispatch => {\n    const contact = await contactService.getAll()\n    dispatch({\n      type: 'INIT_CONTACTS',\n      data: contact\n    })\n  }\n}\nexport const setContactHidden = (contact) => {\n  return async dispatch => {\n    const hiddenContact = { ...contact, hidden: true }\n    await contactService.hideContact(hiddenContact)\n    dispatch({\n      type: 'SET_CONTACT_HIDDEN',\n      data: hiddenContact\n    })\n    toast.success('Contact hidden. Contact the IT department to restore')\n  }\n}\n\nexport default contactReducer","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst registerUser = async user => {\n  const response = await axios.post(`${baseUrl}/register`, user)\n  return response.data\n}\nconst getAllUsers = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\nexport default { registerUser, getAllUsers }","import userService from '../services/userService'\n\nconst userInfoForAdminReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_ALL_USERS':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const allUsers = await userService.getAllUsers()\n    dispatch({\n      type: 'INIT_ALL_USERS',\n      data: allUsers\n    })\n  }\n}\nexport default userInfoForAdminReducer","\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport forumReducer from './reducers/forumReducer'\nimport activeUserReducer from './reducers/activeUserReducer'\nimport contactReducer from './reducers/contactReducer'\nimport userInfoForAdminReducer from './reducers/userInfoForAdminReducer'\n\n\nconst reducer = combineReducers({\n  forum: forumReducer,\n  activeUser: activeUserReducer,\n  contact: contactReducer,\n  userInfoForAdmin: userInfoForAdminReducer\n})\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Button } from 'reactstrap'\nimport { clearUser } from '../reducers/activeUserReducer'\nimport { toast } from 'react-toastify'\n\nconst Logout = (props) => {\n  const { setLoggedIn } = props\n  const history = useHistory()\n\n  const dispatch = useDispatch()\n  const logout = () => {\n    window.localStorage.clear()\n    setLoggedIn(false)\n    toast.info('Logged out')\n    dispatch(clearUser())\n    history.push('/login')\n  }\n  return (\n    <div id='nav-logout-button'>\n      <Button onClick={logout} outline color='secondary' size='sm'>Logout</Button>\n    </div>\n  )\n}\nexport default Logout","import React, { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport Logout from './Logout'\nimport { Link } from 'react-router-dom';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarText,\n  Button\n} from 'reactstrap';\n\nconst MyNavbar = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const { activeUser, setLoggedIn, loggedIn } = props\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color='dark' id=\"navbar\" dark expand='md' >\n        <NavbarBrand id='navbrand' href=\"/\">Fern's Counseling</NavbarBrand>\n        <NavbarToggler id=\"dropdownmenu\" onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink tag={Link} id=\"NavLink\" to=\"/forum\">Forum</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} id=\"NavLink\" to=\"/about\">About</NavLink>\n            </NavItem>\n            <NavItem>\n              {\n                (!activeUser || activeUser.username !== \"Fern-Admin\")\n                  ?\n                  <NavLink tag={Link} id=\"NavLink\" to=\"/contact\">Contact Fern</NavLink>\n                  :\n                  <NavLink tag={Link} id=\"NavLink\" to=\"/admin/dashboard\">Dashboard</NavLink>\n              }\n            </NavItem>\n            {\n              (!activeUser || !loggedIn)\n                ?\n                <NavItem>\n                  <NavLink tag={Link} id=\"NavLink\" to=\"/admin\">Admin</NavLink>\n                </NavItem>\n                :\n                null\n            }\n          </Nav>\n          {\n            (!activeUser || !loggedIn)\n              ?\n              <div id='nav-login-button'>\n                <Link to=\"/login\"><Button outline color='secondary' size='sm'>Login</Button></Link>\n              </div>\n              :\n              null\n          }\n          {\n            (activeUser && loggedIn)\n              ?\n              <div>\n                <NavbarText id='NavBarText'>\n                  <FontAwesomeIcon id='fa-user-icon' icon={faUser} /><br />{activeUser.username}\n                </NavbarText>\n                <Logout setLoggedIn={setLoggedIn} />\n              </div>\n              :\n              null\n          }\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\nexport default MyNavbar;","import React from 'react';\nimport { Container, ListGroup, ListGroupItem } from 'reactstrap';\nimport Fern from '../fern-logo-350.png'\nimport '../about.css';\n\nfunction About() {\n  return (\n    <Container id='about' className=\"themed-container\" fluid={true}>\n      <div id='heading'>\n        <h1 id='name'>Nilubon Sukawanich</h1>\n        <h4 id='title'>Counselor</h4>\n      </div>\n      <div style={{ marginBottom: '80px' }}>\n        <img src={Fern} alt=\"fern\" />\n      </div>\n      <hr />\n      <ListGroup flush >\n        <div id='about-me'>\n          <h5>Education:</h5>\n        </div>\n        <ListGroupItem id='list'>\n          มหาวิทยาลัยเชียงใหม่\n          วิทยาศาสตร์มหาบัณฑิต สาขาจิตวิทยาการปรึกษา (2557 - 2559)\n          <br />\n          Chiangmai University\n          Master of Science in Counseling Psychology (2014 - 2016)\n        </ListGroupItem>\n        <ListGroupItem id='list'>\n          มหาวิทยาลัยเชียงใหม่\n          วิทยาศาสตร์บัณฑิต สาขาจิตวิทยา (2544 - 2547)\n          <br />\n          Chiangmai University\n          Bachelor of Science in Counseling Psychology (2001 - 2004)\n        </ListGroupItem>\n      </ListGroup>\n      {/* <img src={Fern} alt=\"me\" /> */}\n    </Container>\n\n  );\n}\n\nexport default About;","import axios from 'axios'\nconst baseUrl = '/api/login'\nconst adminUrl = '/api/admin'\n\nconst userlogin = async user => {\n  const response = await axios.post(baseUrl, user)\n  return response.data\n}\nconst adminLogin = async admin => {\n  const response = await axios.post(adminUrl, admin)\n  return response.data\n}\nexport default { userlogin, adminLogin }","import React from 'react'\nimport { Spinner } from 'reactstrap'\n\nconst SpinningLoader = () => {\n  return (\n    <div>\n      Loading...\n      <Spinner type=\"grow\" color=\"primary\" style={{ width: '5rem', height: '5rem' }} />\n    </div>\n  )\n}\nexport default SpinningLoader","import React, { useState } from 'react'\nimport Recaptcha from 'react-recaptcha'\nimport { useDispatch } from 'react-redux'\nimport { Form, Label, FormGroup, Button, Input, Modal, ModalBody, ModalFooter } from 'reactstrap'\nimport Select from 'react-select'\nimport SpinningLoader from './SpinningLoader'\nimport userService from '../services/userService'\nimport { toast } from 'react-toastify'\n\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Montserrat'\n}\nconst registerButtonStyle = {\n  display: 'inline-block',\n  fontFamily: 'Montserrat',\n  float: 'center',\n  width: '100px',\n}\nconst formDivStyle = {\n  display: 'block',\n  textAlign: 'center',\n  fontFamily: 'Montserrat'\n}\nconst labelStyle = {\n  float: 'left',\n  marginBottom: '0px',\n  padding: '0px',\n  fontFamily: 'Montserrat'\n}\nconst genderSelectStyle = {\n  marginRight: '20px',\n  float: 'left',\n  fontFamily: 'Montserrat'\n}\n\nconst RegisterForm = () => {\n\n  const [modal, setModal] = useState(false);\n  const [loading, setLoading] = useState(false)\n\n  const [isVerified, setIsVerified] = useState(false)\n\n  const [name, setName] = useState('')\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [selectedGender, setSelectedGender] = useState('')\n  const [dateOfBirth, setDateOfBirth] = useState('')\n  const dispatch = useDispatch()\n\n  const toggle = () => setModal(!modal);\n\n  const genderOptions = [\n    { value: 'Male', label: 'Male' },\n    { value: 'Female', label: 'Female' },\n    { value: 'Other', label: 'Other' }\n  ]\n\n  const handleChangeName = (event) => {\n    setName(event.target.value)\n  }\n  const handleChangeUsername = (event) => {\n    setUsername(event.target.value)\n  }\n  const handleChangeEmail = (event) => {\n    setEmail(event.target.value)\n  }\n  const handleChangePassword = (event) => {\n    setPassword(event.target.value)\n  }\n  const handleChangeConfirmPassword = (event) => {\n    setConfirmPassword(event.target.value)\n  }\n  const handleChangeGender = (selectedGender) => {\n    setSelectedGender(selectedGender)\n  }\n  const handleChangeDateOfBirth = (event) => {\n    setDateOfBirth(event.target.value)\n  }\n  const recaptchaLoaded = () => {\n    console.log('captcha loaded successfully')\n  }\n  const verifyCallback = (response) => {\n    if (response) {\n      setIsVerified(true);\n    }\n  }\n  const variations = ['fern', 'Fern', 'admin', 'Admin', 'administrator', 'Administrator', 'nilubon', 'Nilubon', 'Fern-Admin', 'Fern-admin', 'fern-admin', 'fern-Admin', 'Fern Admin', 'fern Admin', 'Fern admin', 'fern admin', 'FernAdmin', 'fernAdmin', 'fern_admin', 'Fern_Admin']\n\n  const submitRegister = async event => {\n    event.preventDefault()\n    if (variations.includes(username) || variations.map(v => v.toLowerCase).includes(username)) {\n      toast.warn('Sorry, that username is restricted')\n    }\n    else if (!name || !username || !selectedGender || !dateOfBirth || !password) {\n      toast.warn('You must fill all fields')\n    }\n    else if (password.length < 5 || username.length < 5) {\n      toast.warn('Your username and password must be at least 5 characters long')\n    }\n    else if (password !== confirmPassword) {\n      toast.warn('Your passwords are not the same. Try again.')\n    }\n    else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\n      toast.warn('Your email address is not valid')\n    }\n    else if (!isVerified) {\n      toast.warn('Please verify that you are a human')\n    }\n\n    else {\n      //close modal\n      toggle()\n      try {\n        setLoading(true)\n        await userService.registerUser({ name, username, password, email, selectedGender, dateOfBirth })\n        //dispatch\n        setLoading(false)\n        setUsername('')\n        setPassword('')\n        setConfirmPassword('')\n        setName('')\n        setSelectedGender('')\n        setEmail('')\n        setDateOfBirth('')\n      }\n      catch (error) {\n        console.log(error)\n        toast.error('Something went wrong...')\n        setLoading(false)\n      }\n    }\n  }\n\n  return (\n    <div className='container' id='register-form'>\n      {\n        (loading)\n          ?\n          <div>\n            <SpinningLoader />\n          </div>\n          :\n          <div style={formDivStyle}>\n            <Button style={registerButtonStyle} color='secondary' onClick={toggle}>{'Sign up'}</Button>\n            <Modal autoFocus={true} isOpen={modal} toggle={toggle} modalTransition={{ timeout: 300 }} >\n              <ModalBody>\n                <h2 style={textStyle}>Register</h2>\n                <Form onSubmit={submitRegister} >\n                  <FormGroup>\n                    <Label style={labelStyle}>Name:</Label>\n                    <Input onChange={handleChangeName} value={name}></Input><br />\n                    <Label style={labelStyle}>Username:</Label>\n                    <Input onChange={handleChangeUsername} value={username}></Input><br />\n                    <Label style={labelStyle}>Password:</Label> <Input id='password' type=\"password\" onChange={handleChangePassword} value={password}></Input><br />\n                    <Label style={labelStyle}>Confirm Password:</Label>\n                    <Input onChange={handleChangeConfirmPassword} type='password' value={confirmPassword}></Input><br />\n                    <Label style={labelStyle}>Email:</Label> <Input id='email' type=\"text\" onChange={handleChangeEmail} value={email}></Input><br />\n                    <Label style={genderSelectStyle}>Gender:</Label><Select options={genderOptions} value={selectedGender} onChange={handleChangeGender}></Select><br />\n                    <Label style={labelStyle}>Date of Birth:</Label> <Input id='dateOfBirth' type=\"date\" onChange={handleChangeDateOfBirth} value={dateOfBirth}></Input><br />\n                  </FormGroup>\n                </Form>\n              </ModalBody>\n              <Recaptcha sitekey='6LcL060ZAAAAABmkdF8vTezZgafAVQo1WoGgGNDT' render='explicit' onloadCallback={recaptchaLoaded} verifyCallback={verifyCallback} />\n              <ModalFooter>\n                <Button type='submit' color='secondary' onClick={submitRegister}>Sign Up</Button>\n                <Button onClick={toggle}>Cancel</Button>\n              </ModalFooter>\n            </Modal></div>\n      }\n    </div >\n  )\n}\n\nexport default RegisterForm","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { toast } from \"react-toastify\"\nimport { setUser } from '../reducers/activeUserReducer'\nimport loginService from '../services/loginService'\nimport forumService from '../services/forumService'\n\nimport { Form, Label, FormGroup, Button, Input } from 'reactstrap'\nimport RegisterForm from './RegisterForm'\n\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Montserrat',\n  color: 'black'\n}\nconst formDivStyle = {\n  display: 'block',\n  textAlign: 'center'\n}\nconst formStyle = {\n  width: '70%',\n  display: 'inline-block'\n}\nconst labelStyle = {\n  float: 'left',\n  marginBottom: '0px',\n  padding: '0px',\n  fontFamily: 'Montserrat',\n  color: 'white'\n}\nconst loginButtonStyle = {\n  float: 'center',\n  width: '200px',\n  backgroundColor: '#288046',\n  fontFamily: 'Montserrat'\n}\n\nconst LoginForm = (props) => {\n  const { setLoggedIn } = props\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const handleChangeUser = (event) => {\n    setUsername(event.target.value)\n  }\n  const handleChangePass = (event) => {\n    setPassword(event.target.value)\n  }\n  const submitLogin = async event => {\n    event.preventDefault()\n    if (!username || !password) {\n      toast.warn('You must enter a username and password')\n    }\n    else {\n      try {\n        const user =\n          await loginService.userlogin({ username, password })\n        window.localStorage.setItem(\n          'loggedForumUser', JSON.stringify(user)\n        )\n        forumService.setToken(user.token)\n        dispatch(setUser(user))\n        toast.info(`Welcome back ${user.username}`)\n        setLoggedIn(true)\n        setUsername('')\n        setPassword('')\n        history.push('/forum')\n      }\n      catch (error) {\n        console.log(error.message)\n\n        if (error.message.includes('401')) {\n          toast.error('Check your username and password again')\n        } else {\n          toast.error('Something went wrong...')\n        }\n      }\n    }\n  }\n  return (\n    <div className='container' id='login-form'>\n      <h2 style={textStyle}>Login</h2>\n      <div id='form-div' style={formDivStyle}>\n        <Form style={formStyle} onSubmit={submitLogin}>\n          <FormGroup>\n            <Label style={labelStyle}>Username:</Label>\n            <Input onChange={handleChangeUser} value={username}></Input><br />\n            <Label style={labelStyle}>Password:</Label> <Input id='password' type=\"password\" onChange={handleChangePass} value={password}></Input><br />\n            <Button style={loginButtonStyle} id='submit-login' type=\"submit\">Enter</Button>\n          </FormGroup>\n        </Form>\n      </div>\n      <br />\n      <hr />\n      <div id='no-account-div'>\n        <p style={textStyle}>Don't have an account? </p>\n        <RegisterForm />\n      </div>\n    </div>\n  )\n}\n\nexport default LoginForm","/* eslint-disable no-multi-str */\nimport React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Container, Button, Input, Label } from 'reactstrap'\nimport Select from 'react-select'\nimport makeAnimated from 'react-select/animated'\nimport { addQuestion } from '../reducers/forumReducer'\nimport { toast } from 'react-toastify'\n\nconst labelStyle = {\n  fontFamily: 'Montserrat',\n  fontVariant: 'small-caps',\n  fontWeight: 400,\n  fontSize: '1.5rem',\n  marginBottom: '0px',\n  marginTop: '30px'\n}\nconst buttonStyle = {\n  marginTop: '20px',\n  width: '200px',\n  backgroundColor: '#288046',\n  fontFamily: 'Montserrat',\n}\n\nconst tagOptions = [\n  { value: 'sex', label: 'Sex' },\n  { value: 'dating', label: 'Dating' },\n  { value: 'illegal drugs', label: 'Illegal Drugs' },\n  { value: 'friendship', label: 'Friendship' },\n  { value: 'lgbt', label: 'LGBT' },\n  { value: 'depression', label: 'Depression' },\n  { value: 'anxiety', label: 'Anxiety' },\n  { value: 'bipolar', label: 'Bipolar' },\n  { value: 'relationships', label: 'Relationships' },\n  { value: 'career', label: 'Career' },\n  { value: 'mentalHealth', label: 'Mental Health' },\n  { value: 'bullying', label: 'Bullying' },\n  { value: 'family', label: 'Family' },\n  { value: 'peerPressure', label: 'Peer Pressure' },\n  { value: 'parenting', label: 'Parenting' },\n  { value: 'other', label: 'Other' }\n]\nconst ForumPostMain = (props) => {\n  const { activeUser } = props\n  const [question, setQuestion] = useState('')\n  const [title, setTitle] = useState('')\n  const [selectedTags, setSelectedTags] = useState([])\n  const animatedTags = makeAnimated()\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const handleTitleChange = (event) => {\n    setTitle(event.target.value)\n  }\n  const handleContentChange = (event) => {\n    setQuestion(event.target.value)\n  }\n  const handleTagChange = (selectedTags) => {\n    setSelectedTags(selectedTags)\n  }\n\n  const handleEditorSubmit = async (event) => {\n    event.preventDefault()\n    if (!title || !question || !selectedTags) {\n      toast.warn('Please make sure you have a title, a question, and some tags')\n    } else if (activeUser.username === 'Fern-Admin' || activeUser.username === 'Richard-Admin') {\n      toast.warn('Why are you trying to ask yourself a question?')\n    } else {\n      const postToAdd = {\n        title: title,\n        question: question,\n        answer: '',\n        isAnswered: false,\n        tags: selectedTags.map(t => t.value),\n        likes: 0\n      }\n      try {\n        dispatch(addQuestion(postToAdd))\n        setTitle('')\n        setQuestion('')\n        setSelectedTags([])\n        history.push('/forum')\n      } catch (error) {\n        console.log(error)\n      }\n\n    }\n  }\n  return (\n    <Container>\n      <div id='forum-title-div'>\n        <Label style={labelStyle}>Title:</Label>\n        <p style={{ fontFamily: 'Montserrat' }}>Give your post an interesting title.</p>\n        <Input\n          placeholder='My Awesome Title!'\n          onChange={handleTitleChange}\n          value={title}\n          style={{ marginBottom: '20px', fontFamily: 'Montserrat' }}\n        />\n      </div>\n\n      <div id='forum-question-div'>\n        <Label style={labelStyle}>Question:</Label>\n        <p style={{ fontFamily: 'Montserrat' }}>Reminder: This forum is anonymous. Although you must have an account to post, your name and username will NOT show on the forum, so feel free to ask anything.</p>\n        <Input\n          type='textarea'\n          placeholder='I have a question about...'\n          onChange={handleContentChange}\n          value={question}\n          onSubmit={handleEditorSubmit}\n          style={{ fontFamily: 'Montserrat' }}\n        />\n        <Label style={labelStyle}>Tags:</Label>\n        <p style={{ fontFamily: 'Montserrat' }}>Select some tags to help other people know what your question is about!</p>\n        <Select\n          options={tagOptions}\n          onChange={handleTagChange}\n          closeMenuOnSelect={false}\n          components={animatedTags}\n          style={{ fontFamily: 'Montserrat' }}\n          defaultValue={[]}\n          isMulti>\n        </Select>\n        <div style={{ display: 'block', textAlign: 'center' }}>\n          <Button style={buttonStyle} onClick={handleEditorSubmit}>Ask Fern!</Button>\n        </div>\n      </div>\n\n    </Container>\n  )\n}\nexport default ForumPostMain","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons';\nimport { initializeForumAnswered } from '../reducers/forumReducer'\nimport {\n  Container, Card, Button, CardHeader, CardFooter, CardBody,\n  CardTitle, CardText, Badge\n} from 'reactstrap';\n\nconst tagColorOptions = [\n  { tag: 'sex', backgroundColor: '#343a40' },\n  { tag: 'dating', backgroundColor: '#288046' },\n  { tag: 'relationships', backgroundColor: '#ffa64d' },\n  { tag: 'lgbt', backgroundColor: '#ff4da6' },\n  { tag: 'friendship', backgroundColor: '#5050ff' },\n  { tag: 'depression', backgroundColor: '#ff5c4d' },\n  { tag: 'anxiety', backgroundColor: '#a6ff4d' },\n  { tag: 'bipolar', backgroundColor: '#f347ff' },\n  { tag: 'career', backgroundColor: '#8e2bff' },\n  { tag: 'mentalHealth', backgroundColor: '#1e45a8' },\n  { tag: 'bullying', backgroundColor: '#5e320f' },\n  { tag: 'family', backgroundColor: '#ffa64d' },\n  { tag: 'peerPressure', backgroundColor: '#288046' },\n  { tag: 'parenting', backgroundColor: '#6da870' },\n  { tag: 'other', backgroundColor: '#707571' },\n  { tag: 'illegal drugs', backgroundColor: '#40073d' },\n\n]\nconst chooseTagColor = (passed) => {\n  let color = tagColorOptions.find(t => t.tag === passed)\n  if (color) {\n    return {\n      backgroundColor: color.backgroundColor,\n      width: '80px',\n      verticalAlign: 'middle',\n      postition: 'relative'\n    }\n  } else {\n    return {\n      backgroundColor: 'magenta',\n      width: '80px'\n    }\n  }\n}\nconst cardHeaderStyle = {\n  fontFamily: 'Montserrat',\n  fontSize: '14px',\n  backgroundColor: '#343a40',\n  color: 'white',\n  marginTop: '10px',\n  paddingTop: '6px',\n  paddingBottom: '6px'\n}\nconst cardBodyStyle = {\n  fontSize: '14px',\n  fontFamily: 'Montserrat',\n  padding: '10px'\n}\nconst cardTitleStyle = {\n  fontFamily: 'Montserrat'\n}\nconst cardTextStyle = {\n  fontFamily: 'Montserrat'\n}\nconst cardFooterStyle = {\n  fontFamily: 'Montserrat'\n}\nconst smallStyle = {\n  float: 'right'\n}\nconst likeButtonStyle = {\n  backgroundColor: '#4da6ff',\n  height: '28px',\n  width: '35px',\n  lineHeight: '5px',\n  paddingRight: '25px',\n  borderRadius: '20px'\n}\n// const tagBadgeStyle = {\n//   backgroundColor: '',\n//   width: '100px'\n// }\nconst ForumDisplayMain = () => {\n\n  const dispatch = useDispatch()\n  const forum = useSelector(state => state.forum)\n\n  useEffect(() => {\n    dispatch(initializeForumAnswered())\n  }, [dispatch])\n\n  return (\n    <Container>\n      {forum.map(f =>\n        <div key={f._id}>\n          <Card >\n            <CardHeader style={cardHeaderStyle} tag=\"h5\">{f.title}\n              <small className=\"text-muted\" style={smallStyle}>{f.date.slice(0, 10)}</small>\n            </CardHeader>\n            <CardBody style={cardBodyStyle}>\n              <CardTitle style={cardTitleStyle}>{f.question}</CardTitle>\n              <CardText style={cardTextStyle}>{f.answer}\n              </CardText>\n              <Button style={likeButtonStyle}><FontAwesomeIcon icon={faThumbsUp} /></Button>\n            </CardBody>\n            <div style={{ display: 'block' }}>\n              {f.tags.map(t => <Badge style={chooseTagColor(t)} pill>{t}</Badge>)}\n            </div>\n          </Card>\n        </div>)}\n      Have a question?<br />\n      <Link to='/forum/post'><Button style={{ fontFamily: 'Montserrat' }}>Submit a Post</Button></Link>\n    </Container>\n  )\n}\nexport default ForumDisplayMain","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport Recaptcha from 'react-recaptcha'\nimport { Formik } from 'formik';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelopeSquare } from '@fortawesome/free-solid-svg-icons';\nimport { faFacebookSquare } from '@fortawesome/free-brands-svg-icons'\nimport { Container, Form, Label, Input, FormGroup, Button } from 'reactstrap'\nimport contactService from '../services/contactService'\nimport { toast } from 'react-toastify';\n\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Montserrat',\n  fontVariant: 'small-caps'\n}\nconst formDivStyle = {\n  display: 'block',\n  textAlign: 'center',\n  marginTop: '50px',\n  fontFamily: 'Montserrat',\n}\nconst formStyle = {\n  width: '90%',\n  display: 'inline-block'\n}\nconst labelStyle = {\n  float: 'left',\n  marginBottom: '0px',\n  padding: '0px',\n  fontFamily: 'Montserrat',\n  fontVariant: 'small-caps'\n}\nconst contactButtonStyle = {\n  float: 'center',\n  width: '200px',\n  marginBottom: '20px',\n  fontFamily: 'Montserrat',\n  backgroundColor: '#288046'\n}\n\nconst ContactForm = () => {\n  const [isVerified, setIsVerified] = useState(false)\n  const history = useHistory()\n  const recaptchaLoaded = () => {\n    console.log('captcha loaded successfully')\n  }\n  const verifyCallback = (response) => {\n    if (response) {\n      setIsVerified(true);\n    }\n  }\n  return (\n    <div>\n      <Formik\n        initialValues={{ name: '', email: '', LINE: '', message: '' }}\n        onSubmit={\n          async (values, { setSubmitting, resetForm }) => {\n            if (!values.email) {\n              toast.warn('Email required')\n            }\n            else if (!values.message) {\n              toast.warn('Message required')\n            }\n            else if (\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n            ) {\n              toast.warn('Invalid email address')\n            }\n            else if (!isVerified) {\n              toast.warn('Please verify that you are a human')\n            } else {\n              await contactService.sendContact(values)\n              toast.success('Request sent')\n              setSubmitting(false)\n              resetForm({})\n              history.push('/forum')\n            }\n          }\n        }\n      >\n        {({\n          values,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n        }) => (\n            <Container style={formDivStyle}>\n              <p style={{\n                fontFamily: 'Montserrat'\n              }}> We understand if you don't want to post on the forum just yet.  Instead, you can use this form to contact Fern privately, or add her on social media.</p>\n              <div id='NavBarText'>\n                <a href=\"mailto:furbynilu@gmail.com\"> <FontAwesomeIcon id='fa-contact-form' icon={faEnvelopeSquare} />\n                </a>\n                <a href=\"https://www.facebook.com/NiluAcounselor\"> <FontAwesomeIcon id='fa-contact-form' icon={faFacebookSquare} /></a>\n              </div>\n              <br />\n              <h3 style={textStyle}>Enter your information: </h3>\n              <Form style={formStyle} onSubmit={handleSubmit} className='form-ui'>\n                <FormGroup style={{ marginBottom: '0' }}>\n                  <Label style={labelStyle} for='name'>Name</Label>\n                  <Input\n                    type=\"Name\"\n                    name=\"name\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.name}\n                  /><br />\n                  <Label style={labelStyle} for='email'>Email</Label>\n                  <Input\n                    placeholder='You@example.com'\n                    type=\"Email\"\n                    name=\"email\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.email}\n                  /><br />\n                  <Label style={labelStyle} for='Line'>LINE</Label>\n                  <Input\n                    placeholder='Line ID'\n                    type=\"Line\"\n                    name=\"LINE\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.LINE}\n                  /><br />\n                  <Label style={labelStyle} for='message'>Message</Label>\n                  <Input\n                    placeholder='I have a question about...'\n                    type=\"Message\"\n                    name=\"message\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.message}\n                  /><br />\n                </FormGroup>\n                <Recaptcha sitekey='6LcL060ZAAAAABmkdF8vTezZgafAVQo1WoGgGNDT' render='explicit' onloadCallback={recaptchaLoaded} verifyCallback={verifyCallback} />\n                <Button style={contactButtonStyle} type='submit' >Send</Button><br />\n              </Form>\n            </Container>\n          )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default ContactForm;","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\nimport loginService from '../services/loginService'\nimport forumService from '../services/forumService'\nimport { setUser } from '../reducers/activeUserReducer'\nimport { Form, Label, FormGroup, Button, Input } from 'reactstrap'\nimport { toast } from 'react-toastify'\n\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Montserrat',\n  fontVariant: 'small-caps'\n}\nconst formDivStyle = {\n  fontFamily: 'Montserrat',\n  fontVariant: 'small-caps',\n  display: 'block',\n  textAlign: 'center'\n}\nconst formStyle = {\n  width: '70%',\n  display: 'inline-block'\n}\nconst labelStyle = {\n  float: 'left',\n  marginBottom: '0px',\n  padding: '0px',\n  fontFamily: 'Montserrat'\n}\nconst loginButtonStyle = {\n  float: 'center',\n  width: '200px',\n  backgroundColor: '#28804b',\n  fontFamily: 'Montserrat',\n}\nconst iconStyle = {\n  float: 'center'\n}\n\nconst AdminLoginForm = (props) => {\n  const { setLoggedIn } = props\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const handleChangeUser = (event) => {\n    setUsername(event.target.value)\n  }\n  const handleChangePass = (event) => {\n    setPassword(event.target.value)\n  }\n  const submitLogin = async event => {\n    event.preventDefault()\n    if (!username || !password) {\n      toast.warn('You must enter a username and password')\n    }\n    else {\n      try {\n        const admin =\n          await loginService.adminLogin({ username, password })\n        window.localStorage.setItem(\n          'loggedForumUser', JSON.stringify(admin)\n        )\n        forumService.setToken(admin.token)\n        dispatch(setUser(admin))\n        setLoggedIn(true)\n        setUsername('')\n        setPassword('')\n        history.push('/admin/dashboard')\n      }\n      catch (error) {\n        console.log(error.message)\n      }\n    }\n  }\n  return (\n    <div className='container' id='admin-login-form'>\n      <div>\n        <h2 style={textStyle}><FontAwesomeIcon icon={faLock} style={iconStyle} />{' '}Admin{' '}</h2>\n      </div>\n      <div id='form-div' style={formDivStyle}>\n        <Form style={formStyle} onSubmit={submitLogin}>\n          <FormGroup>\n            <Label style={labelStyle}>Username:</Label>\n            <Input onChange={handleChangeUser} value={username}></Input><br />\n            <Label style={labelStyle}>Password:</Label> <Input id='password' type=\"password\" onChange={handleChangePass} value={password}></Input><br />\n            <Button color='none' style={loginButtonStyle} id='admin-submit-login' type=\"submit\">Enter</Button>\n          </FormGroup>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default AdminLoginForm","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Table, Container, Button } from 'reactstrap'\nimport { initializeContacts, setContactHidden } from '../reducers/contactReducer'\n\nconst buttonStyle = {\n  fontFamily: 'Montserrat'\n}\n\nconst AdminContactsDashboard = () => {\n  const dispatch = useDispatch()\n  const contact = useSelector(state => state.contact)\n  // const [toggle, setToggle] = useState(false)\n\n  const setHidden = (c) => {\n    dispatch(setContactHidden(c))\n  }\n\n  useEffect(() => {\n    dispatch(initializeContacts())\n  }, [dispatch])\n\n  return (\n    <Container>\n      <Table striped>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>LINE</th>\n            <th>Email</th>\n            <th>Date</th>\n            <th>Message</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            contact.map(c => c.hidden === false ?\n              <tr key={c._id}>\n                <td>{c.name}</td>\n                <td>{c.LINE}</td>\n                <td>{c.email}</td>\n                <td>{c.date.slice(0, 10)}</td>\n                <td>{c.message}</td>\n                <td><Button style={buttonStyle} onClick={() => setHidden(c)} size='sm'>Remove</Button></td>\n              </tr>\n              : null)\n          }\n        </tbody>\n      </Table>\n    </Container>\n  )\n}\nexport default AdminContactsDashboard","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Table, Button, Container } from 'reactstrap'\nimport { initializeUsers } from '../reducers/userInfoForAdminReducer'\n\nconst buttonStyle = {\n  fontFamily: 'Montserrat'\n}\n\nconst AdminUsersDashboard = () => {\n  const dispatch = useDispatch()\n  const users = useSelector(state => state.userInfoForAdmin)\n  const [questionToggle, setQuestionToggle] = useState(false)\n\n  useEffect(() => {\n    dispatch(initializeUsers())\n  }, [dispatch])\n\n  return (\n    <Container>\n      <Table striped>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Username</th>\n            <th>Email</th>\n            <th>DOB(yyyy-mm-dd)</th>\n            <th>Questions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            users.map(c =>\n              <tr key={c.id}>\n                <td>{c.name}</td>\n                <td>{c.username}</td>\n                <td>{c.email}</td>\n                <td>{c.dateOfBirth.slice(0, 10)}</td>\n                <td><Button style={buttonStyle} size='sm' onClick={() => setQuestionToggle(!questionToggle)}>Questions</Button></td>\n              </tr>)\n          }\n        </tbody>\n      </Table>\n    </Container>\n  )\n}\nexport default AdminUsersDashboard","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Container, Button, Label, Input } from 'reactstrap'\nimport { answerQuestion } from '../reducers/forumReducer'\nimport { toast } from 'react-toastify'\n\nconst labelStyle = {\n  fontFamily: 'Montserrat',\n  fontVariant: 'small-caps',\n  fontWeight: 400,\n  fontSize: '1.5rem',\n  marginBottom: '0px',\n  marginTop: '30px'\n}\nconst buttonStyle = {\n  fontFamily: 'Montserrat',\n  backgroundColor: '#288046',\n  marginTop: '15px',\n  marginBottom: '15px'\n}\n\nconst AdminForumAnswer = (props) => {\n  const { setAnswering, answering } = props\n  const [answer, setAnswer] = useState('')\n  const dispatch = useDispatch()\n\n  const handleContentChange = (event) => {\n    setAnswer(event.target.value)\n  }\n  const handleEditorSubmit = async (event) => {\n    event.preventDefault()\n    if (!answer) {\n      toast.warn('You must have an answer')\n    } else {\n      try {\n        const postToAnswer = {\n          ...answering, answer: answer, isAnswered: true\n        }\n        dispatch(answerQuestion(postToAnswer))\n        setAnswer('')\n        setAnswering('')\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  }\n  return (\n    <div id='forum-response-div'>\n      <Container>\n        <Label style={labelStyle}>Question:</Label>\n        <p style={{ fontFamily: 'Montserrat' }}>Reminder: This forum is anonymous.</p>\n        {(!answering.question) ? <h3 style={{ color: 'red', fontFamily: 'Montserrat' }}>You must first select a post</h3> :\n          <div style={{ borderColor: 'red', borderStyle: 'solid', padding: '10px', borderWidth: '1px' }}><p style={{ fontFamily: 'Montserrat' }}><em>You are answering the following question:</em></p>{answering.question}</div>}\n        <Input\n          style={{ fontFamily: 'Montserrat', marginTop: '15px' }}\n          type='textarea'\n          onChange={handleContentChange}\n          value={answer}\n          onSubmit={handleEditorSubmit}\n        />\n        <Button style={buttonStyle} onClick={handleEditorSubmit}>Submit Answer</Button>\n      </Container>\n    </div>\n  )\n}\nexport default AdminForumAnswer","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Table, Container, Button } from 'reactstrap'\nimport { initializeForumPending } from '../reducers/forumReducer'\nimport AdminForumAnswer from './AdminForumAnswer'\n\n\nconst buttonStyle = {\n  fontFamily: 'Montserrat',\n  backgroundColor: 'rgb(187, 97, 157)'\n}\nconst AdminForumDashboard = () => {\n  const dispatch = useDispatch()\n  const [answering, setAnswering] = useState({})\n  const forum = useSelector(state => state.forum)\n\n  useEffect(() => {\n    dispatch(initializeForumPending())\n  }, [dispatch])\n\n  return (\n    <Container>\n      <Table striped>\n        <thead>\n          <tr>\n            <th>Email</th>\n            <th>Date</th>\n            <th>Question</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            forum.map(c => c.isAnswered === false ?\n              <tr key={c._id}>\n                <td style={{ fontFamily: 'Montserrat' }}>{c.user.email}</td>\n                <td style={{ fontFamily: 'Montserrat' }}>{c.date.slice(0, 10)}</td>\n                <td style={{ fontFamily: 'Montserrat' }}>{c.question}</td>\n                <td><Button style={buttonStyle} onClick={() => setAnswering(c)}>Answer</Button></td>\n              </tr>\n              : null)\n          }\n        </tbody>\n      </Table>\n      <AdminForumAnswer answering={answering} setAnswering={setAnswering} />\n    </Container>\n  )\n}\nexport default AdminForumDashboard","import React from 'react'\n\nconst NoPage = () => {\n\n  const textStyle = {\n    fontFamily: 'Montserrat',\n    fontWeight: '700',\n    textAlign: 'center',\n    marginTop: '300px'\n  }\n  return (\n    <div style={textStyle}>\n      <h1>\n        Sorry, but this page doesn't exist...\n      </h1>\n    </div>\n  )\n}\nexport default NoPage","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { setUser } from './reducers/activeUserReducer'\nimport forumService from './services/forumService'\nimport MyNavbar from './components/MyNavbar';\nimport About from './components/About';\nimport LoginForm from './components/LoginForm'\nimport ForumPostMain from './components/ForumPostMain';\nimport ForumDisplayMain from './components/ForumDisplayMain'\nimport ContactForm from './components/ContactForm';\nimport AdminLoginForm from './components/AdminLoginForm';\nimport AdminContactsDashboard from './components/AdminContactsDashboard'\nimport AdminUsersDashboard from './components/AdminUsersDashboard'\nimport AdminForumDashboard from './components/AdminForumDashboard'\nimport NoPage from './components/NoPage'\nimport { Button, UncontrolledCollapse } from 'reactstrap';\n\n//import { initializeQuestions } from './reducers/forumReducer';\n\n\nconst App = () => {\n  const [loggedIn, setLoggedIn] = useState(false)\n  // const forum = useSelector(state => state.forum)\n  const activeUser = useSelector(state => state.activeUser)\n  const dispatch = useDispatch()\n\n  // const dispatch = useDispatch()\n  // useEffect(() => {\n  //   dispatch(initializeQuestions())\n  // }, [dispatch])\n  console.log(activeUser.username)\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedForumUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(setUser(user))\n      setLoggedIn(true)\n      forumService.setToken(user.token)\n    }\n  }, [dispatch])\n  return (\n    <Router>\n      <div className=\"App\">\n        <MyNavbar activeUser={activeUser} setLoggedIn={setLoggedIn} loggedIn={loggedIn} />\n        <ToastContainer\n          position=\"top-center\"\n          autoClose={3000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/contact\">\n            <ContactForm />\n          </Route>\n          <Route exact path=\"/forum/post\">\n            <ForumPostMain activeUser={activeUser} />\n          </Route>\n          <Route path=\"/forum\">\n            <ForumDisplayMain activeUser={activeUser} />\n          </Route>\n          <Route path=\"/login\">\n            <LoginForm setLoggedIn={setLoggedIn} />\n          </Route>\n          <Route path='/admin/dashboard'>\n            {!activeUser || (!activeUser.username === 'Fern-Admin' || !activeUser.username === 'Richard-Admin') ?\n              <NoPage /> :\n              <div>\n                <Button color='secondary' id='pendingToggler' style={{ margin: '0.5rem', position: 'relative', fontFamily: 'Montserrat' }}>Show Pending\n                </Button>\n                <Button color='secondary' id='contactsToggler' style={{ margin: '0.5rem', position: 'relative', fontFamily: 'Montserrat' }}>Show Contacts</Button>\n                <Button color='secondary' id='usersToggler' style={{ margin: '0.5rem', position: 'relative', fontFamily: 'Montserrat' }}>Show Users</Button>\n                <UncontrolledCollapse toggler=\"#pendingToggler\">\n                  <AdminForumDashboard />\n                </UncontrolledCollapse>\n                <UncontrolledCollapse toggler=\"#contactsToggler\">\n                  <AdminContactsDashboard />\n                </UncontrolledCollapse>\n                <UncontrolledCollapse toggler=\"#usersToggler\">\n                  <AdminUsersDashboard />\n                </UncontrolledCollapse>\n              </div>\n            }\n          </Route>\n          <Route path=\"/admin\">\n            <AdminLoginForm setLoggedIn={setLoggedIn} />\n          </Route>\n        </Switch>\n      </div>\n    </Router >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.css'\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);","module.exports = __webpack_public_path__ + \"static/media/fern-logo-350.0eb8aaf4.png\";"],"sourceRoot":""}