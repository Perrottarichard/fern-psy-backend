{"version":3,"sources":["services/forumService.js","reducers/forumReducer.js","reducers/notificationReducer.js","reducers/userReducer.js","store.js","components/Navbar.js","components/About.js","services/loginService.js","components/SpinningLoader.js","services/userService.js","components/RegisterForm.js","components/LoginForm.js","components/ForumMain.js","components/ContactForm.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","blog","put","id","setToken","newToken","remove","question","delete","like","toUpdate","forumReducer","state","action","type","concat","console","log","questionToChange","find","q","changedQuestion","likes","map","filter","notificationReducer","message","setUser","userReducer","reducer","combineReducers","forum","notifications","user","store","createStore","composeWithDevTools","applyMiddleware","thunk","MyNavbar","props","useState","isOpen","setIsOpen","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","tag","Link","to","NavbarText","icon","faEnvelopeSquare","faFacebookSquare","About","Container","fluid","ListGroup","flush","ListGroupItem","login","SpinningLoader","Spinner","style","width","height","registerUser","RegisterForm","modal","setModal","toggle","loading","setLoading","name","setName","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","gender","setGender","dateOfBirth","setDateOfBirth","dispatch","useDispatch","submitRegister","event","preventDefault","setTimeout","Error","userService","window","localStorage","setItem","JSON","stringify","forumService","Button","Modal","autoFocus","modalTransition","timeout","ModalBody","Form","onSubmit","FormGroup","Label","Input","onChange","target","value","ModalFooter","LoginForm","setLoggedIn","submitLogin","loginService","ForumMain","divStyle","marginTop","marginBottom","ContactForm","initialValues","LINE","validate","values","errors","test","setSubmitting","alert","touched","handleChange","handleBlur","handleSubmit","isSubmitting","for","placeholder","onBlur","Notification","notification","useSelector","Alert","variant","App","useEffect","loggedUserJSON","getItem","parse","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4783744e.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/forum'\n\nlet token = null\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (blog, newObject) => {\n  const response = axios.put(`${baseUrl}/${blog.id}`, newObject)\n  return response.data\n}\n\nconst remove = async question => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.delete(`${baseUrl}/${question.id}`, config)\n  return response.data\n}\n\nconst like = async (toUpdate) => {\n  const id = toUpdate.id\n  const response = await axios.put(`${baseUrl}/${id}`, toUpdate)\n  return response.data\n}\n\nexport default { getAll, create, update, setToken, remove, like }","import forumService from '../services/forumService'\n\nconst forumReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'NEW_QUESTION':\n      return state.concat(action.data)\n    case 'INIT_QUESTIONS':\n      console.log(action.data)\n      return action.data\n    case 'LIKE':\n      const id = action.data.id\n      const questionToChange = state.find(q => q.id === id)\n      const changedQuestion = { ...questionToChange, likes: questionToChange.likes + 1 }\n      return state.map(q => q.id === id ? changedQuestion : q)\n    case 'DELETE_QUESTION':\n      return state.filter(q => q.id !== action.data.id)\n    default: return state\n  }\n}\nexport const upLike = (question) => {\n  return async dispatch => {\n    const updatedObject = { ...question, likes: question.likes + 1 }\n    await forumService.like(updatedObject)\n    dispatch({\n      type: 'LIKE',\n      data: updatedObject\n    })\n  }\n}\nexport const addQuestion = data => {\n  return async dispatch => {\n    const newQuestion = await forumService.create(data)\n    dispatch({\n      type: 'NEW_QUESTION',\n      data: newQuestion\n    })\n  }\n}\nexport const deleteQuestion = data => {\n  return async dispatch => {\n    await forumService.remove(data)\n    dispatch({\n      type: 'DELETE_QUESTION',\n      data\n    })\n  }\n}\nexport const initializeQuestions = () => {\n  return async dispatch => {\n    const questions = await forumService.getAll()\n    dispatch({\n      type: 'INIT_QUESTIONS',\n      data: questions\n    })\n  }\n}\nexport default forumReducer","const nada = ''\nconst notificationReducer = (state = nada, action) => {\n  switch (action.type) {\n    case 'LIKE_QUESTION':\n      return action.message\n    case 'CREATE_QUESTION':\n      return action.message\n    case 'DELETE_QUESTION':\n      return action.message\n    case 'GOOD_LOGIN':\n      return action.message\n    case 'GOOD_REGISTER':\n      return action.message\n    case 'BAD_LOGIN':\n      return action.message\n    case 'BAD_REGISTER':\n      return action.message\n    case 'RESET':\n      return nada\n    default:\n      return state\n  }\n}\nexport const voteMessage = () => {\n  return {\n    type: 'LIKE_QUESTION',\n    message: 'You liked a question!'\n  }\n}\nexport const createMessage = () => {\n  return {\n    type: 'CREATE_QUESTION',\n    message: `Congratulations! You added a new question to the forum.`\n  }\n}\nexport const reset = () => {\n  return {\n    type: 'RESET',\n    message: nada\n  }\n}\nexport const deleteMessage = () => {\n  return {\n    type: 'DELETE_QUESTION',\n    message: `You deleted a question`\n  }\n}\nexport const goodLogin = () => {\n  return {\n    type: 'GOOD_LOGIN',\n    message: `Welcome back!`\n  }\n}\nexport const goodRegister = () => {\n  return {\n    type: 'GOOD_REGISTER',\n    message: `Successfully registered!`\n  }\n}\nexport const badLogin = () => {\n  return {\n    type: 'BAD_LOGIN',\n    message: `Sorry. Please try again`\n  }\n}\nexport const badRegister = () => {\n  return {\n    type: 'BAD_REGISTER',\n    message: `Sorry. Please try again`\n  }\n}\n\nexport default notificationReducer","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.data\n    case 'CLEAR_USER':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const setUser = data => {\n  console.log(data)\n  return {\n    type: 'SET_USER',\n    data\n  }\n}\nexport const clearUser = () => {\n  return {\n    type: 'CLEAR_USER',\n    data: null\n  }\n}\nexport default userReducer","\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport forumReducer from './reducers/forumReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport userReducer from './reducers/userReducer'\n\n\nconst reducer = combineReducers({\n  forum: forumReducer,\n  notifications: notificationReducer,\n  user: userReducer,\n})\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFacebookSquare } from '@fortawesome/free-brands-svg-icons'\nimport { faEnvelopeSquare } from '@fortawesome/free-solid-svg-icons';\n\nimport { Link } from 'react-router-dom';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarText\n} from 'reactstrap';\n\nconst MyNavbar = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    //<Router>\n    <div>\n      <Navbar id=\"navbar\" color=\"dark\" dark expand=\"md\">\n        <NavbarBrand id='navbrand' href=\"/\">Fern's Counseling</NavbarBrand>\n        <NavbarToggler id=\"dropdownmenu\" onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink tag={Link} id=\"NavLink\" to=\"/forum\">Forum</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} id=\"NavLink\" to=\"/about\">About</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} id=\"NavLink\" to=\"/contact\">Contact</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} id=\"NavLink\" to=\"/login\">Login</NavLink>\n            </NavItem>\n          </Nav>\n          <NavbarText id='NavBarText'>\n            <a href=\"mailto:furbynilu@gmail.com\"> <FontAwesomeIcon id='fa' icon={faEnvelopeSquare} />\n            </a>\n            <a href=\"https://www.facebook.com/NiluAcounselor\"> <FontAwesomeIcon id='fa' icon={faFacebookSquare} /></a>\n          </NavbarText>\n        </Collapse>\n      </Navbar>\n    </div>\n    //</Router>\n  );\n}\nexport default MyNavbar;","import React from 'react';\nimport { Container, ListGroup, ListGroupItem } from 'reactstrap';\n// import Fern from '../components/fernQR.jpg'\nimport '../about.css';\n\nfunction About() {\n  return (\n    <Container id='about' className=\"themed-container\" fluid={true}>\n      <div id='heading'>\n        <h1 id='name'>Nilubon Sukawanich</h1>\n        <h4 id='title'>Counselor</h4>\n      </div>\n      {/* <img src={Fern} alt=\"me\" /> */}\n      <ListGroup flush >\n        <div id='about-me'>\n          <h5>Education:</h5>\n        </div>\n        <ListGroupItem id='list'>\n          มหาวิทยาลัยเชียงใหม่\n          วิทยาศาสตร์มหาบัณฑิต สาขาจิตวิทยาการปรึกษา (2557 - 2559)\n          <br />\n          Chiangmai University\n          Master of Science in Counseling Psychology (2014 - 2016)\n        </ListGroupItem>\n        <ListGroupItem id='list'>\n          มหาวิทยาลัยเชียงใหม่\n          วิทยาศาสตร์บัณฑิต สาขาจิตวิทยา (2544 - 2547)\n          <br />\n          Chiangmai University\n          Bachelor of Science in Counseling Psychology (2001 - 2004)\n        </ListGroupItem>\n      </ListGroup>\n      {/* <img src={Fern} alt=\"me\" /> */}\n    </Container>\n\n  );\n}\n\nexport default About;","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async user => {\n  const response = await axios.post(baseUrl, user)\n  return response.data\n}\nexport default { login }","import React from 'react'\nimport { Spinner } from 'reactstrap'\n\nconst SpinningLoader = () => {\n  return (\n    <div>\n      <Spinner style={{ width: '3rem', height: '3rem' }} />{' '}\n    </div>\n  )\n}\nexport default SpinningLoader","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst registerUser = async user => {\n  const response = await axios.post(`${baseUrl}/register`, user)\n  return response.data\n}\nexport default { registerUser }","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport SpinningLoader from './SpinningLoader'\nimport { reset, goodRegister, badRegister } from '../reducers/notificationReducer'\nimport userService from '../services/userService'\nimport forumService from '../services/forumService'\nimport { setUser } from '../reducers/userReducer'\nimport { Form, Label, FormGroup, Button, Input, Modal, ModalBody, ModalFooter } from 'reactstrap'\n\nconst RegisterForm = (props) => {\n\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n\n  const [loading, setLoading] = useState(false)\n\n  const [name, setName] = useState('')\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [gender, setGender] = useState('')\n  const [dateOfBirth, setDateOfBirth] = useState('')\n\n  const dispatch = useDispatch()\n\n  const handleChangeName = (event) => {\n    setName(event.target.value)\n  }\n  const handleChangeUsername = (event) => {\n    setUsername(event.target.value)\n  }\n  const handleChangeEmail = (event) => {\n    setEmail(event.target.value)\n  }\n  const handleChangePassword = (event) => {\n    setPassword(event.target.value)\n  }\n  const handleChangeConfirmPassword = (event) => {\n    setConfirmPassword(event.target.value)\n  }\n  const handleChangeGender = (event) => {\n    setGender(event.target.value)\n  }\n  const handleChangeDateOfBirth = (event) => {\n    setDateOfBirth(event.target.value)\n  }\n  const submitRegister = async event => {\n    event.preventDefault()\n    setLoading(true)\n    toggle()\n    if (password !== confirmPassword) {\n      dispatch(badRegister())\n      setTimeout(() => {\n        dispatch(reset())\n      }, 3000);\n      throw new Error('passwords are not the same')\n    }\n    try {\n      const user =\n        await userService.registerUser({ name, username, password, email, gender, dateOfBirth })\n      window.localStorage.setItem(\n        'loggedForumUser', JSON.stringify(user)\n      )\n      forumService.setToken(user.token)\n      dispatch(setUser(user))\n      setLoading(false)\n      dispatch(goodRegister())\n      setTimeout(() => {\n        dispatch(reset())\n      }, 5000)\n      setUsername('')\n      setPassword('')\n      setConfirmPassword('')\n      setName('')\n      setGender('')\n      setEmail('')\n      setDateOfBirth('')\n      console.log(user)\n    }\n    catch (error) {\n      console.log(error)\n      setLoading(false)\n      dispatch(badRegister())\n      setTimeout(() => {\n        dispatch(reset())\n      }, 3000)\n    }\n  }\n  return (\n    <div className='container'>\n      {(loading) ? <SpinningLoader /> :\n        <div>\n          <Button color=\"primary\" onClick={toggle}>{'Sign up'}</Button>\n          <Modal autoFocus={true} isOpen={modal} toggle={toggle} modalTransition={{ timeout: 300 }} >\n            <ModalBody>\n              <h2>Register</h2>\n              <Form onSubmit={submitRegister}>\n                <FormGroup>\n                  <Label>Name:</Label>\n                  <Input onChange={handleChangeName} value={name}></Input>\n                  <Label>Username:</Label>\n                  <Input onChange={handleChangeUsername} value={username}></Input>\n                  <Label>Password:</Label> <Input id='password' type=\"password\" onChange={handleChangePassword} value={password}></Input>\n                  <Label>Confirm Password:</Label>\n                  <Input onChange={handleChangeConfirmPassword} type='password' value={confirmPassword}></Input>\n                  <Label>Gender:</Label> <Input id='gender' type=\"text\" onChange={handleChangeGender} value={gender}></Input>\n                  <Label>Email:</Label> <Input id='email' type=\"text\" onChange={handleChangeEmail} value={email}></Input>\n                  <Label>Date of Birth:</Label> <Input id='dateOfBirth' type=\"date\" onChange={handleChangeDateOfBirth} value={dateOfBirth}></Input>\n                </FormGroup>\n              </Form>\n            </ModalBody>\n            <ModalFooter>\n              <Button color='success' type='submit' onClick={submitRegister}>Sign Up!</Button>\n              <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n            </ModalFooter>\n          </Modal></div>}\n    </div >\n  )\n}\n\nexport default RegisterForm","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { badLogin, goodLogin, reset } from '../reducers/notificationReducer'\nimport loginService from '../services/loginService'\nimport forumService from '../services/forumService'\nimport { setUser } from '../reducers/userReducer'\nimport { Form, Label, FormGroup, Button, Input } from 'reactstrap'\nimport RegisterForm from './RegisterForm'\n\nconst LoginForm = (props) => {\n  const { setLoggedIn } = props\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n\n  const handleChangeUser = (event) => {\n    setUsername(event.target.value)\n  }\n  const handleChangePass = (event) => {\n    setPassword(event.target.value)\n  }\n  const submitLogin = async event => {\n    event.preventDefault()\n    try {\n      const user =\n        await loginService.login({ username, password })\n      window.localStorage.setItem(\n        'loggedForumUser', JSON.stringify(user)\n      )\n      forumService.setToken(user.token)\n      dispatch(setUser(user))\n      setLoggedIn(true)\n      dispatch(goodLogin())\n      setTimeout(() => {\n        dispatch(reset())\n      }, 1000)\n      setUsername('')\n      setPassword('')\n      console.log(user)\n    }\n    catch (error) {\n      dispatch(badLogin())\n      setTimeout(() => {\n        dispatch(reset())\n      }, 3000)\n    }\n  }\n  return (\n    <div className='container'>\n      <h2>Login</h2>\n      <Form onSubmit={submitLogin}>\n        <FormGroup>\n          <Label>Username:</Label>\n          <Input onChange={handleChangeUser} value={username}></Input>\n          <Label>Password:</Label> <Input id='password' type=\"password\" onChange={handleChangePass} value={password}></Input>\n          <Button id='submit-login' type=\"submit\">Login</Button>\n          <hr />\n        </FormGroup>\n      </Form>\n      <p>Don't have an account? </p>\n      <RegisterForm />\n    </div>\n  )\n}\n\nexport default LoginForm","import React from 'react'\n\n\nconst ForumMain = () => {\n  return (\n    <div>\n      THE FORUM WILL GO HERE\n    </div>\n  )\n}\nexport default ForumMain","import React from 'react';\nimport { Formik } from 'formik';\nimport { Container, Form, Label, Input, FormGroup } from 'reactstrap'\n\nconst divStyle = {\n  marginTop: '40px',\n  marginBottom: '20px'\n};\n\nconst ContactForm = () => (\n  <div>\n    <Formik\n      initialValues={{ name: '', email: '', LINE: '', message: '' }}\n      validate={values => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        }\n        if (!values.message) {\n          errors.message = 'Required'\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        ) {\n          errors.email = 'Invalid email address';\n        }\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        console.log('submit clicked do something')\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        /* and other goodies */\n      }) => (\n          <Container style={divStyle}>\n            <h5>Enter your information: </h5> {/*Thai*/}\n            <Form onSubmit={handleSubmit} className='form-ui'>\n              <FormGroup>\n                <Label for='name'>Name</Label>\n                <Input\n                  placeholder='Jane'\n                  type=\"Name\"\n                  name=\"name\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.name}\n                />\n                <Label for='email'>Email</Label>\n                <Input\n                  placeholder='Jane@example.com'\n                  type=\"Email\"\n                  name=\"email\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.email}\n                />\n                {errors.email && touched.email && errors.email}\n                <Label for='Line'>LINE</Label>\n                <Input\n                  placeholder='Line ID'\n                  type=\"Line\"\n                  name=\"LINE\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.LINE}\n                />\n                <Label for='message'>Message</Label> {/*Thai*/}\n                <Input\n                  placeholder='I have a question about...' //Thai\n                  type=\"Message\"\n                  name=\"message\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.message}\n                />\n                {errors.message && touched.message && errors.message}\n              </FormGroup>\n            </Form>\n          </Container>\n        )}\n    </Formik>\n  </div>\n);\n\nexport default ContactForm;","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Alert } from 'reactstrap'\n\nconst Notification = () => {\n  const notification = useSelector(state => state.notifications)\n  return (\n    <div>\n      {notification !== '' ?\n        <Alert variant='success'>\n          {notification}\n        </Alert>\n        : null}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport MyNavbar from './components/Navbar';\nimport About from './components/About';\nimport LoginForm from './components/LoginForm'\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport ForumMain from './components/ForumMain';\nimport ContactForm from './components/ContactForm';\nimport Notification from './components/Notification'\nimport forumService from './services/forumService'\nimport { setUser } from './reducers/userReducer'\nimport { initializeQuestions } from './reducers/forumReducer';\n\n\nconst App = () => {\n  const [loggedIn, setLoggedIn] = useState(false)\n  const forum = useSelector(state => state.forum)\n  const user = useSelector(state => state.user)\n  const dispatch = useDispatch()\n\n  // const dispatch = useDispatch()\n  // useEffect(() => {\n  //   dispatch(initializeQuestions())\n  // }, [dispatch])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedForumUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(setUser(user))\n      setLoggedIn(true)\n      forumService.setToken(user.token)\n    }\n  }, [dispatch])\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <MyNavbar />\n        <Notification />\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/contact\">\n            <ContactForm />\n          </Route>\n          <Route path=\"/forum\">\n            <ForumMain />\n          </Route>\n          <Route path=\"/login\">\n            <LoginForm />\n          </Route>\n          <Route path=\"api/admin\" />\n        </Switch>\n\n      </div>\n    </Router >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.css'\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);"],"sourceRoot":""}