{"version":3,"sources":["services/forumService.js","reducers/forumReducer.js","reducers/notificationReducer.js","reducers/userReducer.js","store.js","components/Logout.js","components/MyNavbar.js","components/About.js","services/loginService.js","components/SpinningLoader.js","services/userService.js","components/RegisterForm.js","components/LoginForm.js","components/ForumMain.js","services/contactService.js","components/ContactForm.js","components/Notification.js","components/AdminLoginForm.js","components/AdminDashboard.js","components/NoPage.js","App.js","index.js"],"names":["baseUrl","token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","question","put","id","setToken","newToken","remove","delete","like","toUpdate","forumReducer","state","action","type","concat","console","log","questionToChange","find","q","changedQuestion","likes","map","filter","goodLogin","message","badLogin","notificationReducer","setUser","userReducer","reducer","combineReducers","forum","notifications","user","store","createStore","composeWithDevTools","applyMiddleware","thunk","Logout","props","setLoggedIn","history","useHistory","dispatch","useDispatch","Button","onClick","window","localStorage","clear","setTimeout","push","outline","color","size","MyNavbar","useState","isOpen","setIsOpen","loggedIn","Navbar","dark","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","className","NavItem","NavLink","tag","Link","to","NavbarText","icon","faUser","username","About","Container","fluid","ListGroup","flush","ListGroupItem","login","adminLogin","admin","SpinningLoader","Spinner","style","width","height","registerUser","textStyle","textAlign","fontFamily","registerButtonStyle","display","formDivStyle","labelStyle","float","marginBottom","padding","genderSelectStyle","marginRight","RegisterForm","modal","setModal","toggle","isVerified","setIsVerified","loading","setLoading","name","setName","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","selectedGender","setSelectedGender","dateOfBirth","setDateOfBirth","variations","submitRegister","event","preventDefault","includes","v","toLowerCase","alert","length","test","userService","Modal","autoFocus","modalTransition","timeout","ModalBody","Form","onSubmit","FormGroup","Label","Input","onChange","target","value","options","label","sitekey","render","onloadCallback","verifyCallback","ModalFooter","formStyle","loginButtonStyle","LoginForm","submitLogin","loginService","setItem","JSON","stringify","forumService","ForumMain","sendMessage","marginTop","contactButtonStyle","ContactForm","recaptchaLoaded","initialValues","LINE","validate","values","errors","setSubmitting","resetForm","contactService","touched","handleChange","handleBlur","handleSubmit","isSubmitting","faEnvelopeSquare","faFacebookSquare","for","onBlur","placeholder","Notification","notification","useSelector","UncontrolledAlert","variant","AdminLoginForm","AdminDashboard","NoPage","fontWeight","App","useEffect","loggedUserJSON","getItem","parse","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a2a78f05.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/forum'\n\nlet token = null\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (question, newObject) => {\n  const response = axios.put(`${baseUrl}/${question.id}`, newObject)\n  return response.data\n}\n\nconst remove = async question => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.delete(`${baseUrl}/${question.id}`, config)\n  return response.data\n}\n\nconst like = async (toUpdate) => {\n  const id = toUpdate.id\n  const response = await axios.put(`${baseUrl}/${id}`, toUpdate)\n  return response.data\n}\n\nexport default { getAll, create, update, setToken, remove, like }","import forumService from '../services/forumService'\n\nconst forumReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'NEW_QUESTION':\n      return state.concat(action.data)\n    case 'INIT_QUESTIONS':\n      console.log(action.data)\n      return action.data\n    case 'LIKE':\n      const id = action.data.id\n      const questionToChange = state.find(q => q.id === id)\n      const changedQuestion = { ...questionToChange, likes: questionToChange.likes + 1 }\n      return state.map(q => q.id === id ? changedQuestion : q)\n    case 'DELETE_QUESTION':\n      return state.filter(q => q.id !== action.data.id)\n    default: return state\n  }\n}\nexport const upLike = (question) => {\n  return async dispatch => {\n    const updatedObject = { ...question, likes: question.likes + 1 }\n    await forumService.like(updatedObject)\n    dispatch({\n      type: 'LIKE',\n      data: updatedObject\n    })\n  }\n}\nexport const addQuestion = data => {\n  return async dispatch => {\n    const newQuestion = await forumService.create(data)\n    dispatch({\n      type: 'NEW_QUESTION',\n      data: newQuestion\n    })\n  }\n}\nexport const deleteQuestion = data => {\n  return async dispatch => {\n    await forumService.remove(data)\n    dispatch({\n      type: 'DELETE_QUESTION',\n      data\n    })\n  }\n}\nexport const initializeQuestions = () => {\n  return async dispatch => {\n    const questions = await forumService.getAll()\n    dispatch({\n      type: 'INIT_QUESTIONS',\n      data: questions\n    })\n  }\n}\nexport default forumReducer","const nada = ''\nconst notificationReducer = (state = nada, action) => {\n  switch (action.type) {\n    case 'LIKE_QUESTION':\n      return action.message\n    case 'CREATE_QUESTION':\n      return action.message\n    case 'DELETE_QUESTION':\n      return action.message\n    case 'GOOD_LOGIN':\n      return action.message\n    case 'GOOD_REGISTER':\n      return action.message\n    case 'BAD_LOGIN':\n      return action.message\n    case 'BAD_REGISTER':\n      return action.message\n    case 'LOGOUT':\n      return action.message\n    case 'RESET':\n      return nada\n    default:\n      return state\n  }\n}\nexport const voteMessage = () => {\n  return {\n    type: 'LIKE_QUESTION',\n    message: 'You liked a question!'\n  }\n}\nexport const createMessage = () => {\n  return {\n    type: 'CREATE_QUESTION',\n    message: `Congratulations! You added a new question to the forum.`\n  }\n}\nexport const reset = () => {\n  return {\n    type: 'RESET',\n    message: nada\n  }\n}\nexport const deleteMessage = () => {\n  return {\n    type: 'DELETE_QUESTION',\n    message: `You deleted a question`\n  }\n}\nexport const goodLogin = (message) => {\n  return {\n    type: 'GOOD_LOGIN',\n    message: message\n  }\n}\nexport const goodRegister = () => {\n  return {\n    type: 'GOOD_REGISTER',\n    message: `Successfully registered! You can now log in.`\n  }\n}\nexport const badLogin = (message) => {\n  return {\n    type: 'BAD_LOGIN',\n    message: message\n  }\n}\nexport const badRegister = (message) => {\n  return {\n    type: 'BAD_REGISTER',\n    message: message\n  }\n}\nexport const logoutNotify = () => {\n  return {\n    type: 'LOGOUT',\n    message: 'You have logged out'\n  }\n}\n\nexport default notificationReducer","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.data\n    case 'CLEAR_USER':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const setUser = data => {\n  console.log(data)\n  return {\n    type: 'SET_USER',\n    data\n  }\n}\nexport const clearUser = () => {\n  return {\n    type: 'CLEAR_USER',\n    data: null\n  }\n}\nexport default userReducer","\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport forumReducer from './reducers/forumReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport userReducer from './reducers/userReducer'\n\n\nconst reducer = combineReducers({\n  forum: forumReducer,\n  notifications: notificationReducer,\n  user: userReducer,\n})\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { clearUser } from '../reducers/userReducer'\nimport { logoutNotify, reset } from '../reducers/notificationReducer'\nimport { Button } from 'reactstrap'\n\nconst Logout = (props) => {\n  const { setLoggedIn } = props\n  const history = useHistory()\n\n  const dispatch = useDispatch()\n  const logout = () => {\n    window.localStorage.clear()\n    setLoggedIn(false)\n    dispatch(clearUser())\n    dispatch(logoutNotify())\n    setTimeout(() => {\n      dispatch(reset())\n    }, 3000);\n    history.push('/')\n\n  }\n  return (\n    <div id='nav-logout-button'>\n      <Button onClick={logout} outline color='secondary' size='sm'>Logout</Button>\n    </div>\n  )\n}\nexport default Logout","import React, { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport Logout from './Logout'\nimport { Link } from 'react-router-dom';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarText,\n  Button\n} from 'reactstrap';\n\nconst MyNavbar = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const { user, setLoggedIn, loggedIn } = props\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    //<Router>\n    <div>\n      <Navbar id=\"navbar\" color=\"dark\" dark expand=\"md\">\n        <NavbarBrand id='navbrand' href=\"/\">Fern's Counseling</NavbarBrand>\n        <NavbarToggler id=\"dropdownmenu\" onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink tag={Link} id=\"NavLink\" to=\"/forum\">Forum</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} id=\"NavLink\" to=\"/about\">About</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} id=\"NavLink\" to=\"/contact\">Contact Fern</NavLink>\n            </NavItem>\n            {!user || !loggedIn ?\n              <NavItem>\n                <NavLink tag={Link} id=\"NavLink\" to=\"/admin\">Admin</NavLink>\n              </NavItem>\n              : null}\n          </Nav>\n          {(!user || !loggedIn) ?\n            <div id='nav-login-button'>\n              <Link to=\"/login\"><Button outline color='primary'>Login</Button></Link>\n            </div>\n            :\n            null}\n\n          {(user && loggedIn) ?\n            <div>\n              <NavbarText id='NavBarText'>\n                <FontAwesomeIcon id='fa' icon={faUser} /><br />{user.username}\n              </NavbarText>\n              <Logout setLoggedIn={setLoggedIn} />\n            </div>\n            : null}\n        </Collapse>\n      </Navbar>\n    </div>\n    //</Router>\n  );\n}\nexport default MyNavbar;","import React from 'react';\nimport { Container, ListGroup, ListGroupItem } from 'reactstrap';\n// import Fern from '../components/fernQR.jpg'\nimport '../about.css';\n\nfunction About() {\n  return (\n    <Container id='about' className=\"themed-container\" fluid={true}>\n      <div id='heading'>\n        <h1 id='name'>Nilubon Sukawanich</h1>\n        <h4 id='title'>Counselor</h4>\n      </div>\n      {/* <img src={Fern} alt=\"me\" /> */}\n      <ListGroup flush >\n        <div id='about-me'>\n          <h5>Education:</h5>\n        </div>\n        <ListGroupItem id='list'>\n          มหาวิทยาลัยเชียงใหม่\n          วิทยาศาสตร์มหาบัณฑิต สาขาจิตวิทยาการปรึกษา (2557 - 2559)\n          <br />\n          Chiangmai University\n          Master of Science in Counseling Psychology (2014 - 2016)\n        </ListGroupItem>\n        <ListGroupItem id='list'>\n          มหาวิทยาลัยเชียงใหม่\n          วิทยาศาสตร์บัณฑิต สาขาจิตวิทยา (2544 - 2547)\n          <br />\n          Chiangmai University\n          Bachelor of Science in Counseling Psychology (2001 - 2004)\n        </ListGroupItem>\n      </ListGroup>\n      {/* <img src={Fern} alt=\"me\" /> */}\n    </Container>\n\n  );\n}\n\nexport default About;","import axios from 'axios'\nconst baseUrl = '/api/login'\nconst adminUrl = '/api/admin'\n\nconst login = async user => {\n  const response = await axios.post(baseUrl, user)\n  return response.data\n}\nconst adminLogin = async admin => {\n  const response = await axios.post(adminUrl, admin)\n  return response.data\n}\nexport default { login, adminLogin }","import React from 'react'\nimport { Spinner } from 'reactstrap'\n\nconst SpinningLoader = () => {\n  return (\n    <div>\n      Loading...\n      <Spinner type=\"grow\" color=\"primary\" style={{ width: '5rem', height: '5rem' }} />\n    </div>\n  )\n}\nexport default SpinningLoader","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst registerUser = async user => {\n  const response = await axios.post(`${baseUrl}/register`, user)\n  return response.data\n}\nexport default { registerUser }","import React, { useState } from 'react'\nimport Recaptcha from 'react-recaptcha'\nimport { useDispatch } from 'react-redux'\nimport SpinningLoader from './SpinningLoader'\nimport Select from 'react-select'\nimport { goodRegister, badRegister } from '../reducers/notificationReducer'\nimport userService from '../services/userService'\nimport { Form, Label, FormGroup, Button, Input, Modal, ModalBody, ModalFooter } from 'reactstrap'\n\n//align sign up button\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Poppins'\n}\nconst registerButtonStyle = {\n  display: 'inline-block',\n  width: '100px'\n}\nconst formDivStyle = {\n  display: 'block',\n  textAlign: 'center'\n}\nconst labelStyle = {\n  float: 'left',\n  marginBottom: '0px',\n  padding: '0px',\n  fontFamily: 'Poppins'\n}\nconst genderSelectStyle = {\n  marginRight: '20px',\n  float: 'left',\n  fontFamily: 'Poppins'\n}\n\nconst RegisterForm = () => {\n\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n\n  //captcha value\n  const [isVerified, setIsVerified] = useState(false)\n\n  const [loading, setLoading] = useState(false)\n\n  const [name, setName] = useState('')\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [selectedGender, setSelectedGender] = useState('')\n  const [dateOfBirth, setDateOfBirth] = useState('')\n\n  const dispatch = useDispatch()\n\n  const genderOptions = [\n    { value: 'Male', label: 'Male' },\n    { value: 'Female', label: 'Female' },\n    { value: 'Other', label: 'Other' }\n  ]\n\n  const handleChangeName = (event) => {\n    setName(event.target.value)\n  }\n  const handleChangeUsername = (event) => {\n    setUsername(event.target.value)\n  }\n  const handleChangeEmail = (event) => {\n    setEmail(event.target.value)\n  }\n  const handleChangePassword = (event) => {\n    setPassword(event.target.value)\n  }\n  const handleChangeConfirmPassword = (event) => {\n    setConfirmPassword(event.target.value)\n  }\n  const handleChangeGender = (selectedGender) => {\n    setSelectedGender(selectedGender)\n  }\n  const handleChangeDateOfBirth = (event) => {\n    setDateOfBirth(event.target.value)\n  }\n  const recaptchaLoaded = () => {\n    console.log('captcha loaded successfully')\n  }\n  const verifyCallback = (response) => {\n    if (response) {\n      setIsVerified(true);\n    }\n  }\n  const variations = ['fern', 'Fern', 'admin', 'Admin', 'administrator', 'Administrator', 'nilubon', 'Nilubon', 'Fern-Admin', 'Fern-admin', 'fern-admin', 'fern-Admin', 'Fern Admin', 'fern Admin', 'Fern admin', 'fern admin', 'FernAdmin', 'fernAdmin', 'fern_admin', 'Fern_Admin']\n\n  const submitRegister = async event => {\n    event.preventDefault()\n    if (variations.includes(username) || variations.map(v => v.toLowerCase).includes(username)) {\n      alert('Sorry, that username is restricted')\n    }\n    else if (!name || !username || !selectedGender || !dateOfBirth || !password) {\n      alert('You must fill all fields')\n    }\n    else if (password.length < 5 || username.length < 5) {\n      alert('Your username and password must be at least 5 characters long')\n    }\n    else if (password !== confirmPassword) {\n      alert('Your passwords are not the same. Try again.')\n    }\n    else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\n      alert('Your email address is not valid')\n    }\n    else if (!isVerified) {\n      alert('Please verify that you are a human')\n    }\n\n    else {\n      //close modal\n      toggle()\n      try {\n        setLoading(true)\n        await userService.registerUser({ name, username, password, email, selectedGender, dateOfBirth })\n        setLoading(false)\n        dispatch(goodRegister())\n        setUsername('')\n        setPassword('')\n        setConfirmPassword('')\n        setName('')\n        setSelectedGender('')\n        setEmail('')\n        setDateOfBirth('')\n      }\n      catch (error) {\n        console.log(error)\n        setLoading(false)\n        dispatch(badRegister('Something went wrong...'))\n      }\n    }\n  }\n\n  return (\n    <div className='container' id='register-form'>\n      {(loading) ?\n        <div>\n          <SpinningLoader />\n        </div> :\n        <div style={formDivStyle}>\n          <Button style={registerButtonStyle} color=\"primary\" onClick={toggle}>{'Sign up'}</Button>\n          <Modal autoFocus={true} isOpen={modal} toggle={toggle} modalTransition={{ timeout: 300 }} >\n            <ModalBody>\n              <h2 style={textStyle}>Register</h2>\n              <Form onSubmit={submitRegister} >\n\n                <FormGroup>\n                  <Label style={labelStyle}>Name:</Label>\n                  <Input onChange={handleChangeName} value={name}></Input><br />\n                  <Label style={labelStyle}>Username:</Label>\n                  <Input onChange={handleChangeUsername} value={username}></Input><br />\n                  <Label style={labelStyle}>Password:</Label> <Input id='password' type=\"password\" onChange={handleChangePassword} value={password}></Input><br />\n                  <Label style={labelStyle}>Confirm Password:</Label>\n                  <Input onChange={handleChangeConfirmPassword} type='password' value={confirmPassword}></Input><br />\n                  <Label style={labelStyle}>Email:</Label> <Input id='email' type=\"text\" onChange={handleChangeEmail} value={email}></Input><br />\n                  <Label style={genderSelectStyle}>Gender:</Label><Select options={genderOptions} value={selectedGender} onChange={handleChangeGender}></Select><br />\n                  <Label style={labelStyle}>Date of Birth:</Label> <Input id='dateOfBirth' type=\"date\" onChange={handleChangeDateOfBirth} value={dateOfBirth}></Input><br />\n                </FormGroup>\n              </Form>\n            </ModalBody>\n            <Recaptcha sitekey='6LcL060ZAAAAABmkdF8vTezZgafAVQo1WoGgGNDT' render='explicit' onloadCallback={recaptchaLoaded} verifyCallback={verifyCallback} />\n            <ModalFooter>\n              <Button color='primary' type='submit' onClick={submitRegister}>Sign Up</Button>\n              <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n            </ModalFooter>\n          </Modal></div>}\n    </div >\n  )\n}\n\nexport default RegisterForm","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { badLogin, goodLogin, reset } from '../reducers/notificationReducer'\nimport loginService from '../services/loginService'\nimport forumService from '../services/forumService'\nimport { setUser } from '../reducers/userReducer'\nimport { Form, Label, FormGroup, Button, Input } from 'reactstrap'\nimport RegisterForm from './RegisterForm'\n\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Poppins'\n}\nconst formDivStyle = {\n  display: 'block',\n  textAlign: 'center'\n}\nconst formStyle = {\n  width: '70%',\n  display: 'inline-block'\n}\nconst labelStyle = {\n  float: 'left',\n  marginBottom: '0px',\n  padding: '0px',\n  fontFamily: 'Poppins'\n}\nconst loginButtonStyle = {\n  float: 'center',\n  width: '100px'\n}\n\nconst LoginForm = (props) => {\n  const { setLoggedIn } = props\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const handleChangeUser = (event) => {\n    setUsername(event.target.value)\n  }\n  const handleChangePass = (event) => {\n    setPassword(event.target.value)\n  }\n  const submitLogin = async event => {\n    event.preventDefault()\n    if (!username || !password) {\n      alert('You must enter a username and password')\n    }\n    else {\n      try {\n        const user =\n          await loginService.login({ username, password })\n        window.localStorage.setItem(\n          'loggedForumUser', JSON.stringify(user)\n        )\n        forumService.setToken(user.token)\n        dispatch(setUser(user))\n        setLoggedIn(true)\n        dispatch(goodLogin(`Welcome back ${user.username}`))\n        setTimeout(() => {\n          dispatch(reset())\n        }, 3000)\n        setUsername('')\n        setPassword('')\n        history.push('/forum')\n      }\n      catch (error) {\n        console.log(error.message)\n        if (error.message.includes('401')) {\n          dispatch(badLogin('Make sure your username and password are correct...'))\n        } else {\n          dispatch(badLogin('Something went wrong...'))\n        }\n      }\n    }\n  }\n  return (\n    <div className='container' id='login-form'>\n      <h2 style={textStyle}>Login</h2>\n      <div id='form-div' style={formDivStyle}>\n        <Form style={formStyle} onSubmit={submitLogin}>\n          <FormGroup>\n            <Label style={labelStyle}>Username:</Label>\n            <Input onChange={handleChangeUser} value={username}></Input><br />\n            <Label style={labelStyle}>Password:</Label> <Input id='password' type=\"password\" onChange={handleChangePass} value={password}></Input><br />\n            <Button color='primary' style={loginButtonStyle} id='submit-login' type=\"submit\">Enter</Button>\n          </FormGroup>\n        </Form>\n      </div>\n      <br />\n      <hr />\n      <div id='no-account-div'>\n        <p style={textStyle}>Don't have an account? </p>\n        <RegisterForm />\n      </div>\n    </div>\n  )\n}\n\nexport default LoginForm","import React from 'react'\n\n\nconst ForumMain = () => {\n  return (\n    <div>\n      THE FORUM WILL GO HERE\n    </div>\n  )\n}\nexport default ForumMain","import axios from 'axios'\nconst baseUrl = '/api/contact'\n\nconst sendMessage = async message => {\n  const response = await axios.post(baseUrl, message)\n  console.log(response.data)\n  return response.data\n}\nexport default { sendMessage }","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport Recaptcha from 'react-recaptcha'\nimport contactService from '../services/contactService'\nimport { Formik } from 'formik';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelopeSquare } from '@fortawesome/free-solid-svg-icons';\nimport { faFacebookSquare } from '@fortawesome/free-brands-svg-icons'\nimport { Container, Form, Label, Input, FormGroup, Button } from 'reactstrap'\n\n\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Poppins'\n}\nconst formDivStyle = {\n  display: 'block',\n  textAlign: 'center',\n  marginTop: '50px'\n}\nconst formStyle = {\n  width: '90%',\n  display: 'inline-block'\n}\nconst labelStyle = {\n  float: 'left',\n  marginBottom: '0px',\n  padding: '0px',\n  fontFamily: 'Poppins'\n}\nconst contactButtonStyle = {\n  float: 'center',\n  width: '200px',\n  marginBottom: '20px'\n}\n\nconst ContactForm = () => {\n  const [isVerified, setIsVerified] = useState(false)\n  const history = useHistory()\n  const recaptchaLoaded = () => {\n    console.log('captcha loaded successfully')\n  }\n  const verifyCallback = (response) => {\n    if (response) {\n      setIsVerified(true);\n    }\n  }\n  return (\n    <div>\n      <Formik\n        initialValues={{ name: '', email: '', LINE: '', message: '' }}\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = 'Required';\n          }\n          if (!values.message) {\n            errors.message = 'Required'\n          } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          ) {\n            errors.email = 'Invalid email address';\n          }\n          return errors;\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n          if (!isVerified) {\n            alert('Please verify that you are a human')\n          } else {\n            const response = await contactService.sendMessage(values)\n            console.log(response.message)\n            setSubmitting(false)\n            resetForm({})\n            history.push('/forum')\n          }\n        }\n        }\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          /* and other goodies */\n        }) => (\n            <Container style={formDivStyle}>\n              <p style={{ fontFamily: 'Poppins' }}> We understand if you don't want to post on the forum just yet.  Instead, you can use this form to contact Fern privately, or add her on social media.</p>\n              <div id='NavBarText'>\n                <a href=\"mailto:furbynilu@gmail.com\"> <FontAwesomeIcon id='fa-contact-form' icon={faEnvelopeSquare} />\n                </a>\n                <a href=\"https://www.facebook.com/NiluAcounselor\"> <FontAwesomeIcon id='fa-contact-form' icon={faFacebookSquare} /></a>\n              </div>\n              <br />\n              <h3 style={textStyle}>Enter your information: </h3> {/*Thai*/}\n\n              <Form style={formStyle} onSubmit={handleSubmit} className='form-ui'>\n                <FormGroup style={{ marginBottom: '0' }}>\n                  <Label style={labelStyle} for='name'>Name</Label>\n                  <Input\n                    type=\"Name\"\n                    name=\"name\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.name}\n                  /><br />\n                  <Label style={labelStyle} for='email'>Email</Label>\n                  <Input\n                    placeholder='You@example.com'\n                    type=\"Email\"\n                    name=\"email\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.email}\n                  /><br />\n                  {errors.email && touched.email && errors.email}\n                  <Label style={labelStyle} for='Line'>LINE</Label>\n                  <Input\n                    placeholder='Line ID'\n                    type=\"Line\"\n                    name=\"LINE\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.LINE}\n                  /><br />\n                  <Label style={labelStyle} for='message'>Message</Label> {/*Thai*/}\n                  <Input\n                    placeholder='I have a question about...' //Thai\n                    type=\"Message\"\n                    name=\"message\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.message}\n                  /><br />\n                  {errors.message && touched.message && errors.message}\n                </FormGroup>\n                <Recaptcha sitekey='6LcL060ZAAAAABmkdF8vTezZgafAVQo1WoGgGNDT' render='explicit' onloadCallback={recaptchaLoaded} verifyCallback={verifyCallback} />\n                <Button style={contactButtonStyle} type='submit' color='primary'>Send</Button><br />\n              </Form>\n            </Container>\n          )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default ContactForm;","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { UncontrolledAlert } from 'reactstrap'\n\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Poppins'\n}\n\nconst Notification = () => {\n  const notification = useSelector(state => state.notifications)\n  return (\n    <div >\n      {notification !== '' ?\n        <UncontrolledAlert style={textStyle} variant='info'>\n          <h4>{notification}</h4>\n        </UncontrolledAlert>\n        : null}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { badLogin, goodLogin, reset } from '../reducers/notificationReducer'\nimport loginService from '../services/loginService'\nimport forumService from '../services/forumService'\nimport { setUser } from '../reducers/userReducer'\nimport { Form, Label, FormGroup, Button, Input } from 'reactstrap'\n\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Poppins'\n}\nconst formDivStyle = {\n  display: 'block',\n  textAlign: 'center'\n}\nconst formStyle = {\n  width: '70%',\n  display: 'inline-block'\n}\nconst labelStyle = {\n  float: 'left',\n  marginBottom: '0px',\n  padding: '0px',\n  fontFamily: 'Poppins'\n}\nconst loginButtonStyle = {\n  float: 'center',\n  width: '200px'\n}\n\nconst AdminLoginForm = (props) => {\n  const { setLoggedIn } = props\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const handleChangeUser = (event) => {\n    setUsername(event.target.value)\n  }\n  const handleChangePass = (event) => {\n    setPassword(event.target.value)\n  }\n  const submitLogin = async event => {\n    event.preventDefault()\n    if (!username || !password) {\n      alert('You must enter a username and password')\n    }\n    else {\n      try {\n        const admin =\n          await loginService.adminLogin({ username, password })\n        window.localStorage.setItem(\n          'loggedForumUser', JSON.stringify(admin)\n        )\n        forumService.setToken(admin.token)\n        dispatch(setUser(admin))\n        setLoggedIn(true)\n        dispatch(goodLogin(`Welcome back ${admin.username}`))\n        setTimeout(() => {\n          dispatch(reset())\n        }, 3000)\n        setUsername('')\n        setPassword('')\n        history.push('/admin/dashboard')\n      }\n      catch (error) {\n        console.log(error.message)\n        if (error.message.includes('401')) {\n          dispatch(badLogin('Are you sure you are the admin? Check your username and password again...'))\n        } else {\n          dispatch(badLogin('Something went wrong...'))\n        }\n      }\n    }\n  }\n  return (\n    <div className='container' id='admin-login-form'>\n      <h2 style={textStyle}>Admin Login</h2>\n      <div id='form-div' style={formDivStyle}>\n        <Form style={formStyle} onSubmit={submitLogin}>\n          <FormGroup>\n            <Label style={labelStyle}>Username:</Label>\n            <Input onChange={handleChangeUser} value={username}></Input><br />\n            <Label style={labelStyle}>Password:</Label> <Input id='password' type=\"password\" onChange={handleChangePass} value={password}></Input><br />\n            <Button color='none' style={loginButtonStyle} id='admin-submit-login' type=\"submit\">Enter</Button>\n          </FormGroup>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default AdminLoginForm","import React from 'react'\n\n\nconst AdminDashboard = () => {\n  return (\n    <div>\n      The Admin Dashboard will be here :)\n    </div>\n  )\n}\nexport default AdminDashboard","import React from 'react'\nimport { faAutoprefixer } from '@fortawesome/free-brands-svg-icons'\n\nconst NoPage = () => {\n\n  const textStyle = {\n    fontFamily: 'Poppins',\n    fontWeight: '700',\n    textAlign: 'center',\n    marginTop: '300px'\n  }\n  return (\n    <div style={textStyle}>\n      <h1>\n        Sorry, but this page doesn't exist...\n      </h1>\n    </div>\n  )\n}\nexport default NoPage","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport MyNavbar from './components/MyNavbar';\nimport About from './components/About';\nimport LoginForm from './components/LoginForm'\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport ForumMain from './components/ForumMain';\nimport ContactForm from './components/ContactForm';\nimport Notification from './components/Notification'\nimport forumService from './services/forumService'\nimport { setUser } from './reducers/userReducer'\nimport AdminLoginForm from './components/AdminLoginForm';\nimport AdminDashboard from './components/AdminDashboard'\nimport NoPage from './components/NoPage'\n//import { initializeQuestions } from './reducers/forumReducer';\n\n\nconst App = () => {\n  const [loggedIn, setLoggedIn] = useState(false)\n  const forum = useSelector(state => state.forum)\n  const user = useSelector(state => state.user)\n  const dispatch = useDispatch()\n  // const dispatch = useDispatch()\n  // useEffect(() => {\n  //   dispatch(initializeQuestions())\n  // }, [dispatch])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedForumUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(setUser(user))\n      setLoggedIn(true)\n      forumService.setToken(user.token)\n    }\n  }, [dispatch])\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <MyNavbar user={user} setLoggedIn={setLoggedIn} loggedIn={loggedIn} />\n        <Notification />\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/contact\">\n            <ContactForm />\n          </Route>\n          <Route path=\"/forum\">\n            <ForumMain />\n          </Route>\n          <Route path=\"/login\">\n            <LoginForm setLoggedIn={setLoggedIn} />\n          </Route>\n          <Route path='/admin/dashboard'>\n            {!user || user.username !== 'Fern-Admin' ?\n              <NoPage /> :\n              <AdminDashboard />}\n          </Route>\n          <Route path=\"/admin\">\n            <AdminLoginForm setLoggedIn={setLoggedIn} />\n          </Route>\n        </Switch>\n\n      </div>\n    </Router >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.css'\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);"],"sourceRoot":""}