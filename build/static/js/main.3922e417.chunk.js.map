{"version":3,"sources":["services/forumService.js","reducers/forumReducer.js","reducers/notificationReducer.js","reducers/activeUserReducer.js","services/contactService.js","reducers/contactReducer.js","services/userService.js","reducers/userInfoForAdminReducer.js","store.js","components/Logout.js","components/MyNavbar.js","components/About.js","services/loginService.js","components/SpinningLoader.js","components/RegisterForm.js","components/LoginForm.js","components/ForumMain.js","components/ContactForm.js","components/Notification.js","components/AdminLoginForm.js","components/AdminContactsDashboard.js","components/AdminUsersDashboard.js","components/NoPage.js","App.js","index.js"],"names":["baseUrl","token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","question","put","id","setToken","newToken","remove","delete","like","toUpdate","forumReducer","state","action","type","concat","console","log","questionToChange","find","q","changedQuestion","likes","map","filter","goodLogin","message","badLogin","notificationReducer","setUser","activeUserReducer","sendContact","hideContact","contactToHide","_id","contactReducer","c","registerUser","user","getAllUsers","userInfoForAdminReducer","reducer","combineReducers","forum","notifications","activeUser","contact","userInfoForAdmin","store","createStore","composeWithDevTools","applyMiddleware","thunk","Logout","props","setLoggedIn","history","useHistory","dispatch","useDispatch","Button","onClick","window","localStorage","clear","setTimeout","push","outline","color","size","MyNavbar","useState","isOpen","setIsOpen","loggedIn","Navbar","dark","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","className","NavItem","NavLink","tag","Link","to","username","NavbarText","icon","faUser","About","Container","fluid","ListGroup","flush","ListGroupItem","userlogin","adminLogin","admin","SpinningLoader","Spinner","style","width","height","textStyle","textAlign","fontFamily","registerButtonStyle","display","formDivStyle","labelStyle","float","marginBottom","padding","genderSelectStyle","marginRight","RegisterForm","modal","setModal","loading","setLoading","isVerified","setIsVerified","name","setName","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","selectedGender","setSelectedGender","dateOfBirth","setDateOfBirth","toggle","variations","submitRegister","event","preventDefault","includes","v","toLowerCase","alert","length","test","userService","Modal","autoFocus","modalTransition","timeout","ModalBody","Form","onSubmit","FormGroup","Label","Input","onChange","target","value","options","label","sitekey","render","onloadCallback","verifyCallback","ModalFooter","formStyle","loginButtonStyle","LoginForm","submitLogin","loginService","setItem","JSON","stringify","forumService","ForumMain","marginTop","contactButtonStyle","ContactForm","recaptchaLoaded","initialValues","LINE","validate","values","errors","setSubmitting","resetForm","contactService","touched","handleChange","handleBlur","handleSubmit","isSubmitting","faEnvelopeSquare","faFacebookSquare","for","onBlur","placeholder","Notification","notification","useSelector","UncontrolledAlert","variant","AdminLoginForm","AdminContactsDashboard","setHidden","hiddenContact","hidden","setContactHidden","useEffect","Table","striped","key","date","slice","AdminUsersDashboard","users","questionToggle","setQuestionToggle","allUsers","NoPage","fontWeight","App","loggedUserJSON","getItem","parse","path","margin","UncontrolledCollapse","toggler","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3922e417.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/forum'\n\nlet token = null\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (question, newObject) => {\n  const response = axios.put(`${baseUrl}/${question.id}`, newObject)\n  return response.data\n}\n\nconst remove = async question => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.delete(`${baseUrl}/${question.id}`, config)\n  return response.data\n}\n\nconst like = async (toUpdate) => {\n  const id = toUpdate.id\n  const response = await axios.put(`${baseUrl}/${id}`, toUpdate)\n  return response.data\n}\n\nexport default { getAll, create, update, setToken, remove, like }","import forumService from '../services/forumService'\n\nconst forumReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'NEW_QUESTION':\n      return state.concat(action.data)\n    case 'INIT_QUESTIONS':\n      console.log(action.data)\n      return action.data\n    case 'LIKE':\n      const id = action.data.id\n      const questionToChange = state.find(q => q.id === id)\n      const changedQuestion = { ...questionToChange, likes: questionToChange.likes + 1 }\n      return state.map(q => q.id === id ? changedQuestion : q)\n    case 'DELETE_QUESTION':\n      return state.filter(q => q.id !== action.data.id)\n    default: return state\n  }\n}\nexport const upLike = (question) => {\n  return async dispatch => {\n    const updatedObject = { ...question, likes: question.likes + 1 }\n    await forumService.like(updatedObject)\n    dispatch({\n      type: 'LIKE',\n      data: updatedObject\n    })\n  }\n}\nexport const addQuestion = data => {\n  return async dispatch => {\n    const newQuestion = await forumService.create(data)\n    dispatch({\n      type: 'NEW_QUESTION',\n      data: newQuestion\n    })\n  }\n}\nexport const deleteQuestion = data => {\n  return async dispatch => {\n    await forumService.remove(data)\n    dispatch({\n      type: 'DELETE_QUESTION',\n      data\n    })\n  }\n}\nexport const initializeQuestions = () => {\n  return async dispatch => {\n    const questions = await forumService.getAll()\n    dispatch({\n      type: 'INIT_QUESTIONS',\n      data: questions\n    })\n  }\n}\nexport default forumReducer","const nada = ''\nconst notificationReducer = (state = nada, action) => {\n  switch (action.type) {\n    case 'LIKE_QUESTION':\n      return action.message\n    case 'CREATE_QUESTION':\n      return action.message\n    case 'DELETE_QUESTION':\n      return action.message\n    case 'GOOD_LOGIN':\n      return action.message\n    case 'GOOD_REGISTER':\n      return action.message\n    case 'BAD_LOGIN':\n      return action.message\n    case 'BAD_REGISTER':\n      return action.message\n    case 'LOGOUT':\n      return action.message\n    case 'RESET':\n      return nada\n    default:\n      return state\n  }\n}\nexport const voteMessage = () => {\n  return {\n    type: 'LIKE_QUESTION',\n    message: 'You liked a question!'\n  }\n}\nexport const createMessage = () => {\n  return {\n    type: 'CREATE_QUESTION',\n    message: `Congratulations! You added a new question to the forum.`\n  }\n}\nexport const reset = () => {\n  return {\n    type: 'RESET',\n    message: nada\n  }\n}\nexport const deleteMessage = () => {\n  return {\n    type: 'DELETE_QUESTION',\n    message: `You deleted a question`\n  }\n}\nexport const goodLogin = (message) => {\n  return {\n    type: 'GOOD_LOGIN',\n    message: message\n  }\n}\nexport const goodRegister = () => {\n  return {\n    type: 'GOOD_REGISTER',\n    message: `Successfully registered! You can now log in.`\n  }\n}\nexport const badLogin = (message) => {\n  return {\n    type: 'BAD_LOGIN',\n    message: message\n  }\n}\nexport const badRegister = (message) => {\n  return {\n    type: 'BAD_REGISTER',\n    message: message\n  }\n}\nexport const logoutNotify = () => {\n  return {\n    type: 'LOGOUT',\n    message: 'You have logged out'\n  }\n}\n\nexport default notificationReducer","\nconst activeUserReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.data\n    case 'CLEAR_USER':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const setUser = data => {\n  console.log(data)\n  return {\n    type: 'SET_USER',\n    data\n  }\n}\nexport const clearUser = () => {\n  return {\n    type: 'CLEAR_USER',\n    data: null\n  }\n}\n\nexport default activeUserReducer","import axios from 'axios'\nconst baseUrl = '/api/contact'\n\nconst sendContact = async message => {\n  const response = await axios.post(baseUrl, message)\n  return response.data\n}\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\nconst hideContact = async contactToHide => {\n  const id = contactToHide._id\n  const response = await axios.put(`${baseUrl}/${id}`, contactToHide)\n  return response.data\n}\nexport default { sendContact, getAll, hideContact }","import contactService from '../services/contactService'\n\nconst contactReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_CONTACTS':\n      return action.data\n    case 'SET_CONTACT_HIDDEN':\n      return state.filter(c => c._id !== action.data._id)\n    default:\n      return state\n  }\n}\n\nexport const initializeContacts = () => {\n  return async dispatch => {\n    const contact = await contactService.getAll()\n    dispatch({\n      type: 'INIT_CONTACTS',\n      data: contact\n    })\n  }\n}\nexport const setContactHidden = (contact) => {\n  return async dispatch => {\n    const hiddenContact = { ...contact, hidden: true }\n    await contactService.hideContact(hiddenContact)\n    dispatch({\n      type: 'SET_CONTACT_HIDDEN',\n      data: hiddenContact\n    })\n  }\n}\n\nexport default contactReducer","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst registerUser = async user => {\n  const response = await axios.post(`${baseUrl}/register`, user)\n  return response.data\n}\nconst getAllUsers = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\nexport default { registerUser, getAllUsers }","import userService from '../services/userService'\n\nconst userInfoForAdminReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_ALL_USERS':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const allUsers = await userService.getAllUsers()\n    dispatch({\n      type: 'INIT_ALL_USERS',\n      data: allUsers\n    })\n  }\n}\nexport default userInfoForAdminReducer","\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport forumReducer from './reducers/forumReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport activeUserReducer from './reducers/activeUserReducer'\nimport contactReducer from './reducers/contactReducer'\nimport userInfoForAdminReducer from './reducers/userInfoForAdminReducer'\n\n\nconst reducer = combineReducers({\n  forum: forumReducer,\n  notifications: notificationReducer,\n  activeUser: activeUserReducer,\n  contact: contactReducer,\n  userInfoForAdmin: userInfoForAdminReducer\n})\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Button } from 'reactstrap'\nimport { clearUser } from '../reducers/activeUserReducer'\nimport { logoutNotify, reset } from '../reducers/notificationReducer'\n\nconst Logout = (props) => {\n  const { setLoggedIn } = props\n  const history = useHistory()\n\n  const dispatch = useDispatch()\n  const logout = () => {\n    window.localStorage.clear()\n    setLoggedIn(false)\n    dispatch(clearUser())\n    dispatch(logoutNotify())\n    setTimeout(() => {\n      dispatch(reset())\n    }, 3000);\n    history.push('/')\n\n  }\n  return (\n    <div id='nav-logout-button'>\n      <Button onClick={logout} outline color='secondary' size='sm'>Logout</Button>\n    </div>\n  )\n}\nexport default Logout","import React, { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport Logout from './Logout'\nimport { Link } from 'react-router-dom';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarText,\n  Button\n} from 'reactstrap';\n\nconst MyNavbar = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const { activeUser, setLoggedIn, loggedIn } = props\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar id=\"navbar\" color=\"dark\" dark expand=\"md\">\n        <NavbarBrand id='navbrand' href=\"/\">Fern's Counseling</NavbarBrand>\n        <NavbarToggler id=\"dropdownmenu\" onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink tag={Link} id=\"NavLink\" to=\"/forum\">Forum</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} id=\"NavLink\" to=\"/about\">About</NavLink>\n            </NavItem>\n            <NavItem>\n              {\n                (!activeUser || activeUser.username !== \"Fern-Admin\")\n                  ?\n                  <NavLink tag={Link} id=\"NavLink\" to=\"/contact\">Contact Fern</NavLink>\n                  :\n                  <NavLink tag={Link} id=\"NavLink\" to=\"/admin/dashboard\">Dashboard</NavLink>\n              }\n            </NavItem>\n            {\n              (!activeUser || !loggedIn)\n                ?\n                <NavItem>\n                  <NavLink tag={Link} id=\"NavLink\" to=\"/admin\">Admin</NavLink>\n                </NavItem>\n                :\n                null\n            }\n          </Nav>\n          {\n            (!activeUser || !loggedIn)\n              ?\n              <div id='nav-login-button'>\n                <Link to=\"/login\"><Button outline color='primary'>Login</Button></Link>\n              </div>\n              :\n              null\n          }\n          {\n            (activeUser && loggedIn)\n              ?\n              <div>\n                <NavbarText id='NavBarText'>\n                  <FontAwesomeIcon id='fa' icon={faUser} /><br />{activeUser.username}\n                </NavbarText>\n                <Logout setLoggedIn={setLoggedIn} />\n              </div>\n              :\n              null\n          }\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\nexport default MyNavbar;","import React from 'react';\nimport { Container, ListGroup, ListGroupItem } from 'reactstrap';\n// import Fern from '../components/fernQR.jpg'\nimport '../about.css';\n\nfunction About() {\n  return (\n    <Container id='about' className=\"themed-container\" fluid={true}>\n      <div id='heading'>\n        <h1 id='name'>Nilubon Sukawanich</h1>\n        <h4 id='title'>Counselor</h4>\n      </div>\n      {/* <img src={Fern} alt=\"me\" /> */}\n      <ListGroup flush >\n        <div id='about-me'>\n          <h5>Education:</h5>\n        </div>\n        <ListGroupItem id='list'>\n          มหาวิทยาลัยเชียงใหม่\n          วิทยาศาสตร์มหาบัณฑิต สาขาจิตวิทยาการปรึกษา (2557 - 2559)\n          <br />\n          Chiangmai University\n          Master of Science in Counseling Psychology (2014 - 2016)\n        </ListGroupItem>\n        <ListGroupItem id='list'>\n          มหาวิทยาลัยเชียงใหม่\n          วิทยาศาสตร์บัณฑิต สาขาจิตวิทยา (2544 - 2547)\n          <br />\n          Chiangmai University\n          Bachelor of Science in Counseling Psychology (2001 - 2004)\n        </ListGroupItem>\n      </ListGroup>\n      {/* <img src={Fern} alt=\"me\" /> */}\n    </Container>\n\n  );\n}\n\nexport default About;","import axios from 'axios'\nconst baseUrl = '/api/login'\nconst adminUrl = '/api/admin'\n\nconst userlogin = async user => {\n  const response = await axios.post(baseUrl, user)\n  return response.data\n}\nconst adminLogin = async admin => {\n  const response = await axios.post(adminUrl, admin)\n  return response.data\n}\nexport default { userlogin, adminLogin }","import React from 'react'\nimport { Spinner } from 'reactstrap'\n\nconst SpinningLoader = () => {\n  return (\n    <div>\n      Loading...\n      <Spinner type=\"grow\" color=\"primary\" style={{ width: '5rem', height: '5rem' }} />\n    </div>\n  )\n}\nexport default SpinningLoader","import React, { useState } from 'react'\nimport Recaptcha from 'react-recaptcha'\nimport { useDispatch } from 'react-redux'\nimport { Form, Label, FormGroup, Button, Input, Modal, ModalBody, ModalFooter } from 'reactstrap'\nimport Select from 'react-select'\nimport SpinningLoader from './SpinningLoader'\nimport { goodRegister, badRegister } from '../reducers/notificationReducer'\nimport userService from '../services/userService'\n\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Poppins'\n}\nconst registerButtonStyle = {\n  display: 'inline-block',\n  width: '100px'\n}\nconst formDivStyle = {\n  display: 'block',\n  textAlign: 'center'\n}\nconst labelStyle = {\n  float: 'left',\n  marginBottom: '0px',\n  padding: '0px',\n  fontFamily: 'Poppins'\n}\nconst genderSelectStyle = {\n  marginRight: '20px',\n  float: 'left',\n  fontFamily: 'Poppins'\n}\n\nconst RegisterForm = () => {\n\n  const [modal, setModal] = useState(false);\n  const [loading, setLoading] = useState(false)\n\n  const [isVerified, setIsVerified] = useState(false)\n\n  const [name, setName] = useState('')\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [selectedGender, setSelectedGender] = useState('')\n  const [dateOfBirth, setDateOfBirth] = useState('')\n  const dispatch = useDispatch()\n\n  const toggle = () => setModal(!modal);\n\n  const genderOptions = [\n    { value: 'Male', label: 'Male' },\n    { value: 'Female', label: 'Female' },\n    { value: 'Other', label: 'Other' }\n  ]\n\n  const handleChangeName = (event) => {\n    setName(event.target.value)\n  }\n  const handleChangeUsername = (event) => {\n    setUsername(event.target.value)\n  }\n  const handleChangeEmail = (event) => {\n    setEmail(event.target.value)\n  }\n  const handleChangePassword = (event) => {\n    setPassword(event.target.value)\n  }\n  const handleChangeConfirmPassword = (event) => {\n    setConfirmPassword(event.target.value)\n  }\n  const handleChangeGender = (selectedGender) => {\n    setSelectedGender(selectedGender)\n  }\n  const handleChangeDateOfBirth = (event) => {\n    setDateOfBirth(event.target.value)\n  }\n  const recaptchaLoaded = () => {\n    console.log('captcha loaded successfully')\n  }\n  const verifyCallback = (response) => {\n    if (response) {\n      setIsVerified(true);\n    }\n  }\n  const variations = ['fern', 'Fern', 'admin', 'Admin', 'administrator', 'Administrator', 'nilubon', 'Nilubon', 'Fern-Admin', 'Fern-admin', 'fern-admin', 'fern-Admin', 'Fern Admin', 'fern Admin', 'Fern admin', 'fern admin', 'FernAdmin', 'fernAdmin', 'fern_admin', 'Fern_Admin']\n\n  const submitRegister = async event => {\n    event.preventDefault()\n    if (variations.includes(username) || variations.map(v => v.toLowerCase).includes(username)) {\n      alert('Sorry, that username is restricted')\n    }\n    else if (!name || !username || !selectedGender || !dateOfBirth || !password) {\n      alert('You must fill all fields')\n    }\n    else if (password.length < 5 || username.length < 5) {\n      alert('Your username and password must be at least 5 characters long')\n    }\n    else if (password !== confirmPassword) {\n      alert('Your passwords are not the same. Try again.')\n    }\n    else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\n      alert('Your email address is not valid')\n    }\n    else if (!isVerified) {\n      alert('Please verify that you are a human')\n    }\n\n    else {\n      //close modal\n      toggle()\n      try {\n        setLoading(true)\n        await userService.registerUser({ name, username, password, email, selectedGender, dateOfBirth })\n        setLoading(false)\n        dispatch(goodRegister())\n        setUsername('')\n        setPassword('')\n        setConfirmPassword('')\n        setName('')\n        setSelectedGender('')\n        setEmail('')\n        setDateOfBirth('')\n      }\n      catch (error) {\n        console.log(error)\n        setLoading(false)\n        dispatch(badRegister('Something went wrong...'))\n      }\n    }\n  }\n\n  return (\n    <div className='container' id='register-form'>\n      {\n        (loading)\n          ?\n          <div>\n            <SpinningLoader />\n          </div>\n          :\n          <div style={formDivStyle}>\n            <Button style={registerButtonStyle} color=\"primary\" onClick={toggle}>{'Sign up'}</Button>\n            <Modal autoFocus={true} isOpen={modal} toggle={toggle} modalTransition={{ timeout: 300 }} >\n              <ModalBody>\n                <h2 style={textStyle}>Register</h2>\n                <Form onSubmit={submitRegister} >\n                  <FormGroup>\n                    <Label style={labelStyle}>Name:</Label>\n                    <Input onChange={handleChangeName} value={name}></Input><br />\n                    <Label style={labelStyle}>Username:</Label>\n                    <Input onChange={handleChangeUsername} value={username}></Input><br />\n                    <Label style={labelStyle}>Password:</Label> <Input id='password' type=\"password\" onChange={handleChangePassword} value={password}></Input><br />\n                    <Label style={labelStyle}>Confirm Password:</Label>\n                    <Input onChange={handleChangeConfirmPassword} type='password' value={confirmPassword}></Input><br />\n                    <Label style={labelStyle}>Email:</Label> <Input id='email' type=\"text\" onChange={handleChangeEmail} value={email}></Input><br />\n                    <Label style={genderSelectStyle}>Gender:</Label><Select options={genderOptions} value={selectedGender} onChange={handleChangeGender}></Select><br />\n                    <Label style={labelStyle}>Date of Birth:</Label> <Input id='dateOfBirth' type=\"date\" onChange={handleChangeDateOfBirth} value={dateOfBirth}></Input><br />\n                  </FormGroup>\n                </Form>\n              </ModalBody>\n              <Recaptcha sitekey='6LcL060ZAAAAABmkdF8vTezZgafAVQo1WoGgGNDT' render='explicit' onloadCallback={recaptchaLoaded} verifyCallback={verifyCallback} />\n              <ModalFooter>\n                <Button color='primary' type='submit' onClick={submitRegister}>Sign Up</Button>\n                <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n              </ModalFooter>\n            </Modal></div>\n      }\n    </div >\n  )\n}\n\nexport default RegisterForm","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { badLogin, goodLogin, reset } from '../reducers/notificationReducer'\nimport { setUser } from '../reducers/activeUserReducer'\nimport loginService from '../services/loginService'\nimport forumService from '../services/forumService'\n\nimport { Form, Label, FormGroup, Button, Input } from 'reactstrap'\nimport RegisterForm from './RegisterForm'\n\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Poppins'\n}\nconst formDivStyle = {\n  display: 'block',\n  textAlign: 'center'\n}\nconst formStyle = {\n  width: '70%',\n  display: 'inline-block'\n}\nconst labelStyle = {\n  float: 'left',\n  marginBottom: '0px',\n  padding: '0px',\n  fontFamily: 'Poppins'\n}\nconst loginButtonStyle = {\n  float: 'center',\n  width: '100px'\n}\n\nconst LoginForm = (props) => {\n  const { setLoggedIn } = props\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const handleChangeUser = (event) => {\n    setUsername(event.target.value)\n  }\n  const handleChangePass = (event) => {\n    setPassword(event.target.value)\n  }\n  const submitLogin = async event => {\n    event.preventDefault()\n    if (!username || !password) {\n      alert('You must enter a username and password')\n    }\n    else {\n      try {\n        const user =\n          await loginService.userlogin({ username, password })\n        window.localStorage.setItem(\n          'loggedForumUser', JSON.stringify(user)\n        )\n        forumService.setToken(user.token)\n        dispatch(setUser(user))\n        setLoggedIn(true)\n        dispatch(goodLogin(`Welcome back ${user.username}`))\n        setTimeout(() => {\n          dispatch(reset())\n        }, 3000)\n        setUsername('')\n        setPassword('')\n        history.push('/forum')\n      }\n      catch (error) {\n        console.log(error.message)\n        if (error.message.includes('401')) {\n          dispatch(badLogin('Make sure your username and password are correct...'))\n        } else {\n          dispatch(badLogin('Something went wrong...'))\n        }\n      }\n    }\n  }\n  return (\n    <div className='container' id='login-form'>\n      <h2 style={textStyle}>Login</h2>\n      <div id='form-div' style={formDivStyle}>\n        <Form style={formStyle} onSubmit={submitLogin}>\n          <FormGroup>\n            <Label style={labelStyle}>Username:</Label>\n            <Input onChange={handleChangeUser} value={username}></Input><br />\n            <Label style={labelStyle}>Password:</Label> <Input id='password' type=\"password\" onChange={handleChangePass} value={password}></Input><br />\n            <Button color='primary' style={loginButtonStyle} id='submit-login' type=\"submit\">Enter</Button>\n          </FormGroup>\n        </Form>\n      </div>\n      <br />\n      <hr />\n      <div id='no-account-div'>\n        <p style={textStyle}>Don't have an account? </p>\n        <RegisterForm />\n      </div>\n    </div>\n  )\n}\n\nexport default LoginForm","import React from 'react'\nimport { Container } from 'reactstrap'\n\n\nconst ForumMain = () => {\n  return (\n    <Container>\n      THE FORUM WILL GO HERE\n    </Container>\n  )\n}\nexport default ForumMain","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport Recaptcha from 'react-recaptcha'\nimport { Formik } from 'formik';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelopeSquare } from '@fortawesome/free-solid-svg-icons';\nimport { faFacebookSquare } from '@fortawesome/free-brands-svg-icons'\nimport { Container, Form, Label, Input, FormGroup, Button } from 'reactstrap'\nimport contactService from '../services/contactService'\n\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Poppins'\n}\nconst formDivStyle = {\n  display: 'block',\n  textAlign: 'center',\n  marginTop: '50px'\n}\nconst formStyle = {\n  width: '90%',\n  display: 'inline-block'\n}\nconst labelStyle = {\n  float: 'left',\n  marginBottom: '0px',\n  padding: '0px',\n  fontFamily: 'Poppins'\n}\nconst contactButtonStyle = {\n  float: 'center',\n  width: '200px',\n  marginBottom: '20px'\n}\n\nconst ContactForm = () => {\n  const [isVerified, setIsVerified] = useState(false)\n  const history = useHistory()\n  const recaptchaLoaded = () => {\n    console.log('captcha loaded successfully')\n  }\n  const verifyCallback = (response) => {\n    if (response) {\n      setIsVerified(true);\n    }\n  }\n  return (\n    <div>\n      <Formik\n        initialValues={{ name: '', email: '', LINE: '', message: '' }}\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = 'Required';\n          }\n          if (!values.message) {\n            errors.message = 'Required'\n          } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          ) {\n            errors.email = 'Invalid email address';\n          }\n          return errors;\n        }}\n        onSubmit={\n          async (values, { setSubmitting, resetForm }) => {\n            if (!isVerified) {\n              alert('Please verify that you are a human')\n            } else {\n              const response = await contactService.sendContact(values)\n              console.log(response.message)\n              setSubmitting(false)\n              resetForm({})\n              history.push('/forum')\n            }\n          }\n        }\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          /* and other goodies */\n        }) => (\n            <Container style={formDivStyle}>\n              <p style={{ fontFamily: 'Poppins' }}> We understand if you don't want to post on the forum just yet.  Instead, you can use this form to contact Fern privately, or add her on social media.</p>\n              <div id='NavBarText'>\n                <a href=\"mailto:furbynilu@gmail.com\"> <FontAwesomeIcon id='fa-contact-form' icon={faEnvelopeSquare} />\n                </a>\n                <a href=\"https://www.facebook.com/NiluAcounselor\"> <FontAwesomeIcon id='fa-contact-form' icon={faFacebookSquare} /></a>\n              </div>\n              <br />\n              <h3 style={textStyle}>Enter your information: </h3>\n              <Form style={formStyle} onSubmit={handleSubmit} className='form-ui'>\n                <FormGroup style={{ marginBottom: '0' }}>\n                  <Label style={labelStyle} for='name'>Name</Label>\n                  <Input\n                    type=\"Name\"\n                    name=\"name\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.name}\n                  /><br />\n                  <Label style={labelStyle} for='email'>Email</Label>\n                  <Input\n                    placeholder='You@example.com'\n                    type=\"Email\"\n                    name=\"email\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.email}\n                  /><br />\n                  {errors.email && touched.email && errors.email}\n                  <Label style={labelStyle} for='Line'>LINE</Label>\n                  <Input\n                    placeholder='Line ID'\n                    type=\"Line\"\n                    name=\"LINE\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.LINE}\n                  /><br />\n                  <Label style={labelStyle} for='message'>Message</Label>\n                  <Input\n                    placeholder='I have a question about...'\n                    type=\"Message\"\n                    name=\"message\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.message}\n                  /><br />\n                  {errors.message && touched.message && errors.message}\n                </FormGroup>\n                <Recaptcha sitekey='6LcL060ZAAAAABmkdF8vTezZgafAVQo1WoGgGNDT' render='explicit' onloadCallback={recaptchaLoaded} verifyCallback={verifyCallback} />\n                <Button style={contactButtonStyle} type='submit' color='primary'>Send</Button><br />\n              </Form>\n            </Container>\n          )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default ContactForm;","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { UncontrolledAlert } from 'reactstrap'\n\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Poppins'\n}\n\nconst Notification = () => {\n  const notification = useSelector(state => state.notifications)\n  return (\n    <div >\n      {notification !== '' ?\n        <UncontrolledAlert style={textStyle} variant='info'>\n          <h4>{notification}</h4>\n        </UncontrolledAlert>\n        : null}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { badLogin, goodLogin, reset } from '../reducers/notificationReducer'\nimport loginService from '../services/loginService'\nimport forumService from '../services/forumService'\nimport { setUser } from '../reducers/activeUserReducer'\nimport { Form, Label, FormGroup, Button, Input } from 'reactstrap'\n\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Poppins'\n}\nconst formDivStyle = {\n  display: 'block',\n  textAlign: 'center'\n}\nconst formStyle = {\n  width: '70%',\n  display: 'inline-block'\n}\nconst labelStyle = {\n  float: 'left',\n  marginBottom: '0px',\n  padding: '0px',\n  fontFamily: 'Poppins'\n}\nconst loginButtonStyle = {\n  float: 'center',\n  width: '200px'\n}\n\nconst AdminLoginForm = (props) => {\n  const { setLoggedIn } = props\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const handleChangeUser = (event) => {\n    setUsername(event.target.value)\n  }\n  const handleChangePass = (event) => {\n    setPassword(event.target.value)\n  }\n  const submitLogin = async event => {\n    event.preventDefault()\n    if (!username || !password) {\n      alert('You must enter a username and password')\n    }\n    else {\n      try {\n        const admin =\n          await loginService.adminLogin({ username, password })\n        window.localStorage.setItem(\n          'loggedForumUser', JSON.stringify(admin)\n        )\n        forumService.setToken(admin.token)\n        dispatch(setUser(admin))\n        setLoggedIn(true)\n        dispatch(goodLogin(`Welcome back ${admin.username}`))\n        setTimeout(() => {\n          dispatch(reset())\n        }, 3000)\n        setUsername('')\n        setPassword('')\n        history.push('/admin/dashboard')\n      }\n      catch (error) {\n        console.log(error.message)\n        if (error.message.includes('401')) {\n          dispatch(badLogin('Are you sure you are the admin? Check your username and password again...'))\n        } else {\n          dispatch(badLogin('Something went wrong...'))\n        }\n      }\n    }\n  }\n  return (\n    <div className='container' id='admin-login-form'>\n      <h2 style={textStyle}>Admin Login</h2>\n      <div id='form-div' style={formDivStyle}>\n        <Form style={formStyle} onSubmit={submitLogin}>\n          <FormGroup>\n            <Label style={labelStyle}>Username:</Label>\n            <Input onChange={handleChangeUser} value={username}></Input><br />\n            <Label style={labelStyle}>Password:</Label> <Input id='password' type=\"password\" onChange={handleChangePass} value={password}></Input><br />\n            <Button color='none' style={loginButtonStyle} id='admin-submit-login' type=\"submit\">Enter</Button>\n          </FormGroup>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default AdminLoginForm","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Table, Container, Button } from 'reactstrap'\nimport { initializeContacts, setContactHidden } from '../reducers/contactReducer'\n\n// const buttonStyle = {\n//   marginTop: '20px'\n// }\nconst AdminContactsDashboard = () => {\n  const dispatch = useDispatch()\n  const contact = useSelector(state => state.contact)\n  // const [toggle, setToggle] = useState(false)\n\n  const setHidden = (c) => {\n    dispatch(setContactHidden(c))\n  }\n\n  useEffect(() => {\n    dispatch(initializeContacts())\n  }, [dispatch])\n\n  return (\n    <Container>\n      <Table striped>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>LINE</th>\n            <th>Email</th>\n            <th>Date</th>\n            <th>Message</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            contact.map(c => c.hidden === false ?\n              <tr key={c._id}>\n                <td>{c.name}</td>\n                <td>{c.LINE}</td>\n                <td>{c.email}</td>\n                <td>{c.date.slice(0, 10)}</td>\n                <td>{c.message}</td>\n                <td><Button onClick={() => setHidden(c)} size='sm'>Remove</Button></td>\n              </tr>\n              : null)\n          }\n        </tbody>\n      </Table>\n    </Container>\n  )\n}\nexport default AdminContactsDashboard","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Table, Button, Container } from 'reactstrap'\nimport { initializeUsers } from '../reducers/userInfoForAdminReducer'\n\n// const buttonStyle = {\n//   marginTop: '20px'\n// }\n\nconst AdminUsersDashboard = () => {\n  const dispatch = useDispatch()\n  const users = useSelector(state => state.userInfoForAdmin)\n  const [questionToggle, setQuestionToggle] = useState(false)\n\n  useEffect(() => {\n    dispatch(initializeUsers())\n  }, [dispatch])\n\n  return (\n    <Container>\n      <Table striped>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Username</th>\n            <th>Email</th>\n            <th>DOB(yyyy-mm-dd)</th>\n            <th>Questions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            users.map(c =>\n              <tr key={c.id}>\n                <td>{c.name}</td>\n                <td>{c.username}</td>\n                <td>{c.email}</td>\n                <td>{c.dateOfBirth.slice(0, 10)}</td>\n                <td><Button color='secondary' size='sm' onClick={() => setQuestionToggle(!questionToggle)}>Questions</Button></td>\n              </tr>)\n          }\n        </tbody>\n      </Table>\n    </Container>\n  )\n}\nexport default AdminUsersDashboard","import React from 'react'\n\nconst NoPage = () => {\n\n  const textStyle = {\n    fontFamily: 'Poppins',\n    fontWeight: '700',\n    textAlign: 'center',\n    marginTop: '300px'\n  }\n  return (\n    <div style={textStyle}>\n      <h1>\n        Sorry, but this page doesn't exist...\n      </h1>\n    </div>\n  )\n}\nexport default NoPage","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { setUser } from './reducers/activeUserReducer'\nimport forumService from './services/forumService'\nimport MyNavbar from './components/MyNavbar';\nimport About from './components/About';\nimport LoginForm from './components/LoginForm'\nimport ForumMain from './components/ForumMain';\nimport ContactForm from './components/ContactForm';\nimport Notification from './components/Notification'\nimport AdminLoginForm from './components/AdminLoginForm';\nimport AdminContactsDashboard from './components/AdminContactsDashboard'\nimport AdminUsersDashboard from './components/AdminUsersDashboard'\nimport NoPage from './components/NoPage'\nimport { Button, UncontrolledCollapse } from 'reactstrap';\n//import { initializeQuestions } from './reducers/forumReducer';\n\n\nconst App = () => {\n  const [loggedIn, setLoggedIn] = useState(false)\n  // const forum = useSelector(state => state.forum)\n  const activeUser = useSelector(state => state.activeUser)\n  const dispatch = useDispatch()\n\n  // const dispatch = useDispatch()\n  // useEffect(() => {\n  //   dispatch(initializeQuestions())\n  // }, [dispatch])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedForumUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(setUser(user))\n      setLoggedIn(true)\n      forumService.setToken(user.token)\n    }\n  }, [dispatch])\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <MyNavbar activeUser={activeUser} setLoggedIn={setLoggedIn} loggedIn={loggedIn} />\n        <Notification />\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/contact\">\n            <ContactForm />\n          </Route>\n          <Route path=\"/forum\">\n            <ForumMain />\n          </Route>\n          <Route path=\"/login\">\n            <LoginForm setLoggedIn={setLoggedIn} />\n          </Route>\n          <Route path='/admin/dashboard'>\n            {!activeUser || activeUser.username !== 'Fern-Admin' ?\n              <NoPage /> :\n              <div>\n                <Button color='secondary' id='contactsToggler' style={{ margin: '0.5rem' }}>Show Contacts</Button>\n                <UncontrolledCollapse toggler=\"#contactsToggler\">\n                  <AdminContactsDashboard />\n                </UncontrolledCollapse>\n                <Button color='secondary' id='usersToggler' style={{ margin: '0.5rem' }}>Show Users</Button>\n                <UncontrolledCollapse toggler=\"#usersToggler\">\n                  <AdminUsersDashboard />\n                </UncontrolledCollapse>\n              </div>\n            }\n          </Route>\n          <Route path=\"/admin\">\n            <AdminLoginForm setLoggedIn={setLoggedIn} />\n          </Route>\n        </Switch>\n      </div>\n    </Router >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.css'\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);"],"sourceRoot":""}