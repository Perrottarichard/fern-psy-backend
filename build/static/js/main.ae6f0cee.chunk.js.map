{"version":3,"sources":["services/forumService.js","reducers/forumReducer.js","reducers/notificationReducer.js","reducers/activeUserReducer.js","services/contactService.js","reducers/contactReducer.js","services/userService.js","reducers/userInfoForAdminReducer.js","store.js","components/Logout.js","components/MyNavbar.js","components/About.js","services/loginService.js","components/SpinningLoader.js","components/RegisterForm.js","components/LoginForm.js","components/ForumPostMain.js","components/ForumDisplayMain.js","components/ContactForm.js","components/Notification.js","components/AdminLoginForm.js","components/AdminContactsDashboard.js","components/AdminUsersDashboard.js","components/AdminForumAnswer.js","components/AdminForumDashboard.js","components/NoPage.js","App.js","index.js"],"names":["baseUrl","token","getPending","a","axios","get","response","data","getAnswered","create","newObject","config","headers","Authorization","post","update","put","_id","setToken","newToken","remove","question","delete","id","like","toUpdate","answerQuestion","answer","dispatch","forumService","type","addQuestion","newQuestion","forumReducer","state","action","concat","questionToChange","find","q","changedQuestion","likes","map","answerId","objectToModify","s","changedToAnswered","isAnswered","filter","goodLogin","message","badLogin","notificationReducer","setUser","activeUserReducer","sendContact","getAll","hideContact","contactToHide","contactReducer","c","registerUser","user","getAllUsers","userInfoForAdminReducer","reducer","combineReducers","forum","notifications","activeUser","contact","userInfoForAdmin","store","createStore","composeWithDevTools","applyMiddleware","thunk","Logout","props","setLoggedIn","history","useHistory","useDispatch","Button","onClick","window","localStorage","clear","setTimeout","push","outline","color","size","MyNavbar","useState","isOpen","setIsOpen","loggedIn","Navbar","dark","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","className","NavItem","NavLink","tag","Link","to","username","NavbarText","icon","faUser","About","Container","fluid","ListGroup","flush","ListGroupItem","userlogin","adminLogin","admin","SpinningLoader","Spinner","style","width","height","textStyle","textAlign","fontFamily","registerButtonStyle","display","formDivStyle","labelStyle","float","marginBottom","padding","genderSelectStyle","marginRight","RegisterForm","modal","setModal","loading","setLoading","isVerified","setIsVerified","name","setName","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","selectedGender","setSelectedGender","dateOfBirth","setDateOfBirth","toggle","variations","submitRegister","event","preventDefault","includes","v","toLowerCase","alert","length","test","userService","console","log","Modal","autoFocus","modalTransition","timeout","ModalBody","Form","onSubmit","FormGroup","Label","Input","onChange","target","value","options","label","sitekey","render","onloadCallback","verifyCallback","ModalFooter","formStyle","loginButtonStyle","LoginForm","submitLogin","loginService","setItem","JSON","stringify","fontWeight","fontSize","marginTop","buttonStyle","tagOptions","ForumPostMain","setQuestion","title","setTitle","selectedTags","setSelectedTags","animatedTags","makeAnimated","handleEditorSubmit","postToAdd","tags","t","placeholder","apiKey","initialValue","init","menubar","plugins","toolbar","onEditorChange","content","editor","closeMenuOnSelect","components","defaultValue","isMulti","ForumDisplayMain","useSelector","useEffect","answered","f","key","dangerouslySetInnerHTML","__html","contactButtonStyle","ContactForm","recaptchaLoaded","initialValues","LINE","validate","values","errors","setSubmitting","resetForm","contactService","touched","handleChange","handleBlur","handleSubmit","isSubmitting","faEnvelopeSquare","faFacebookSquare","for","onBlur","Notification","notification","UncontrolledAlert","variant","AdminLoginForm","AdminContactsDashboard","setHidden","hiddenContact","hidden","setContactHidden","Table","striped","date","slice","AdminUsersDashboard","users","questionToggle","setQuestionToggle","allUsers","AdminForumAnswer","setAnswer","postToAnswer","error","borderColor","borderStyle","borderWidth","AdminForumDashboard","answering","setAnswering","questions","NoPage","App","loggedUserJSON","getItem","parse","path","exact","margin","position","UncontrolledCollapse","toggler","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ae6f0cee.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/forum'\n\nlet token = null\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getPending = async () => {\n  const response = await axios.get(`${baseUrl}/pending`)\n  return response.data\n}\nconst getAnswered = async () => {\n  const response = await axios.get(`${baseUrl}/answered`)\n  return response.data\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (newObject) => {\n  const response = axios.put(`${baseUrl}/${newObject._id}`, newObject)\n  return response.data\n}\n\nconst remove = async question => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.delete(`${baseUrl}/${question.id}`, config)\n  return response.data\n}\n\nconst like = async (toUpdate) => {\n  const id = toUpdate.id\n  const response = await axios.put(`${baseUrl}/${id}`, toUpdate)\n  return response.data\n}\n\nexport default { getPending, getAnswered, create, update, setToken, remove, like }","import forumService from '../services/forumService'\n\nconst forumReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'NEW_QUESTION':\n      return state.concat(action.data)\n    case 'INIT_FORUM_PENDING':\n      return action.data\n    case 'INIT_FORUM_ANSWERED':\n      return action.data\n    case 'LIKE':\n      const id = action.data.id\n      const questionToChange = state.find(q => q.id === id)\n      const changedQuestion = { ...questionToChange, likes: questionToChange.likes + 1 }\n      return state.map(q => q.id === id ? changedQuestion : q)\n    case 'POST_ANSWER':\n      const answerId = action.data._id\n      const objectToModify = state.find(s => s._id === answerId)\n      const changedToAnswered = { ...objectToModify, isAnswered: true, answer: action.data.answer }\n      return state.map(s => s._id === answerId ? changedToAnswered : s)\n    case 'DELETE_QUESTION':\n      return state.filter(q => q.id !== action.data.id)\n    default: return state\n  }\n}\nexport const upLike = (question) => {\n  return async dispatch => {\n    const updatedObject = { ...question, likes: question.likes + 1 }\n    await forumService.like(updatedObject)\n    dispatch({\n      type: 'LIKE',\n      data: updatedObject\n    })\n  }\n}\nexport const answerQuestion = (answer) => {\n  return async dispatch => {\n    await forumService.update(answer)\n    dispatch({\n      type: 'POST_ANSWER',\n      data: answer\n    })\n  }\n}\nexport const addQuestion = data => {\n  return async dispatch => {\n    const newQuestion = await forumService.create(data)\n    dispatch({\n      type: 'NEW_QUESTION',\n      data: newQuestion\n    })\n  }\n}\nexport const deleteQuestion = data => {\n  return async dispatch => {\n    await forumService.remove(data)\n    dispatch({\n      type: 'DELETE_QUESTION',\n      data\n    })\n  }\n}\nexport const initializeForumPending = () => {\n  return async dispatch => {\n    const questions = await forumService.getPending()\n    dispatch({\n      type: 'INIT_FORUM_PENDING',\n      data: questions\n    })\n  }\n}\nexport const initializeForumAnswered = () => {\n  return async dispatch => {\n    const answered = await forumService.getAnswered()\n    dispatch({\n      type: 'INIT_FORUM_ANSWERED',\n      data: answered\n    })\n  }\n}\nexport default forumReducer","const nada = ''\nconst notificationReducer = (state = nada, action) => {\n  switch (action.type) {\n    case 'LIKE_QUESTION':\n      return action.message\n    case 'CREATE_QUESTION':\n      return action.message\n    case 'DELETE_QUESTION':\n      return action.message\n    case 'GOOD_LOGIN':\n      return action.message\n    case 'GOOD_REGISTER':\n      return action.message\n    case 'BAD_LOGIN':\n      return action.message\n    case 'BAD_REGISTER':\n      return action.message\n    case 'ANSWERED_NOTIFY':\n      return action.message\n    case 'FAIL':\n      return action.message\n    case 'LOGOUT':\n      return action.message\n    case 'RESET':\n      return nada\n    default:\n      return state\n  }\n}\nexport const voteMessage = () => {\n  return {\n    type: 'LIKE_QUESTION',\n    message: 'You liked a question!'\n  }\n}\nexport const createMessage = () => {\n  return {\n    type: 'CREATE_QUESTION',\n    message: `Congratulations! You added a new question to the forum.`\n  }\n}\nexport const reset = () => {\n  return {\n    type: 'RESET',\n    message: nada\n  }\n}\nexport const deleteMessage = () => {\n  return {\n    type: 'DELETE_QUESTION',\n    message: `You deleted a question`\n  }\n}\nexport const goodLogin = (message) => {\n  return {\n    type: 'GOOD_LOGIN',\n    message: message\n  }\n}\nexport const goodRegister = () => {\n  return {\n    type: 'GOOD_REGISTER',\n    message: `Successfully registered! You can now log in.`\n  }\n}\nexport const badLogin = (message) => {\n  return {\n    type: 'BAD_LOGIN',\n    message: message\n  }\n}\nexport const badRegister = (message) => {\n  return {\n    type: 'BAD_REGISTER',\n    message: message\n  }\n}\nexport const logoutNotify = () => {\n  return {\n    type: 'LOGOUT',\n    message: 'You have logged out'\n  }\n}\nexport const answeredQuestion = () => {\n  return {\n    type: 'ANSWERED_NOTIFY',\n    message: 'You answered a question'\n  }\n}\nexport const fail = () => {\n  return {\n    type: 'FAIL',\n    message: 'Something went wrong...'\n  }\n}\n\nexport default notificationReducer","\nconst activeUserReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.data\n    case 'CLEAR_USER':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const setUser = data => {\n  return {\n    type: 'SET_USER',\n    data\n  }\n}\nexport const clearUser = () => {\n  return {\n    type: 'CLEAR_USER',\n    data: null\n  }\n}\n\nexport default activeUserReducer","import axios from 'axios'\nconst baseUrl = '/api/contact'\n\nconst sendContact = async message => {\n  const response = await axios.post(baseUrl, message)\n  return response.data\n}\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\nconst hideContact = async contactToHide => {\n  const id = contactToHide._id\n  const response = await axios.put(`${baseUrl}/${id}`, contactToHide)\n  return response.data\n}\nexport default { sendContact, getAll, hideContact }","import contactService from '../services/contactService'\n\nconst contactReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_CONTACTS':\n      return action.data\n    case 'SET_CONTACT_HIDDEN':\n      return state.filter(c => c._id !== action.data._id)\n    default:\n      return state\n  }\n}\n\nexport const initializeContacts = () => {\n  return async dispatch => {\n    const contact = await contactService.getAll()\n    dispatch({\n      type: 'INIT_CONTACTS',\n      data: contact\n    })\n  }\n}\nexport const setContactHidden = (contact) => {\n  return async dispatch => {\n    const hiddenContact = { ...contact, hidden: true }\n    await contactService.hideContact(hiddenContact)\n    dispatch({\n      type: 'SET_CONTACT_HIDDEN',\n      data: hiddenContact\n    })\n  }\n}\n\nexport default contactReducer","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst registerUser = async user => {\n  const response = await axios.post(`${baseUrl}/register`, user)\n  return response.data\n}\nconst getAllUsers = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\nexport default { registerUser, getAllUsers }","import userService from '../services/userService'\n\nconst userInfoForAdminReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_ALL_USERS':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const allUsers = await userService.getAllUsers()\n    dispatch({\n      type: 'INIT_ALL_USERS',\n      data: allUsers\n    })\n  }\n}\nexport default userInfoForAdminReducer","\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport forumReducer from './reducers/forumReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport activeUserReducer from './reducers/activeUserReducer'\nimport contactReducer from './reducers/contactReducer'\nimport userInfoForAdminReducer from './reducers/userInfoForAdminReducer'\n\n\nconst reducer = combineReducers({\n  forum: forumReducer,\n  notifications: notificationReducer,\n  activeUser: activeUserReducer,\n  contact: contactReducer,\n  userInfoForAdmin: userInfoForAdminReducer\n})\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Button } from 'reactstrap'\nimport { clearUser } from '../reducers/activeUserReducer'\nimport { logoutNotify, reset } from '../reducers/notificationReducer'\n\nconst Logout = (props) => {\n  const { setLoggedIn } = props\n  const history = useHistory()\n\n  const dispatch = useDispatch()\n  const logout = () => {\n    window.localStorage.clear()\n    setLoggedIn(false)\n    dispatch(clearUser())\n    dispatch(logoutNotify())\n    setTimeout(() => {\n      dispatch(reset())\n    }, 3000);\n    history.push('/')\n\n  }\n  return (\n    <div id='nav-logout-button'>\n      <Button onClick={logout} outline color='secondary' size='sm'>Logout</Button>\n    </div>\n  )\n}\nexport default Logout","import React, { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport Logout from './Logout'\nimport { Link } from 'react-router-dom';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarText,\n  Button\n} from 'reactstrap';\n\nconst MyNavbar = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const { activeUser, setLoggedIn, loggedIn } = props\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar id=\"navbar\" color=\"dark\" dark expand=\"md\">\n        <NavbarBrand id='navbrand' href=\"/\">Fern's Counseling</NavbarBrand>\n        <NavbarToggler id=\"dropdownmenu\" onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink tag={Link} id=\"NavLink\" to=\"/forum\">Forum</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} id=\"NavLink\" to=\"/about\">About</NavLink>\n            </NavItem>\n            <NavItem>\n              {\n                (!activeUser || activeUser.username !== \"Fern-Admin\")\n                  ?\n                  <NavLink tag={Link} id=\"NavLink\" to=\"/contact\">Contact Fern</NavLink>\n                  :\n                  <NavLink tag={Link} id=\"NavLink\" to=\"/admin/dashboard\">Dashboard</NavLink>\n              }\n            </NavItem>\n            {\n              (!activeUser || !loggedIn)\n                ?\n                <NavItem>\n                  <NavLink tag={Link} id=\"NavLink\" to=\"/admin\">Admin</NavLink>\n                </NavItem>\n                :\n                null\n            }\n          </Nav>\n          {\n            (!activeUser || !loggedIn)\n              ?\n              <div id='nav-login-button'>\n                <Link to=\"/login\"><Button outline color='primary'>Login</Button></Link>\n              </div>\n              :\n              null\n          }\n          {\n            (activeUser && loggedIn)\n              ?\n              <div>\n                <NavbarText id='NavBarText'>\n                  <FontAwesomeIcon id='fa' icon={faUser} /><br />{activeUser.username}\n                </NavbarText>\n                <Logout setLoggedIn={setLoggedIn} />\n              </div>\n              :\n              null\n          }\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\nexport default MyNavbar;","import React from 'react';\nimport { Container, ListGroup, ListGroupItem } from 'reactstrap';\n// import Fern from '../components/fernQR.jpg'\nimport '../about.css';\n\nfunction About() {\n  return (\n    <Container id='about' className=\"themed-container\" fluid={true}>\n      <div id='heading'>\n        <h1 id='name'>Nilubon Sukawanich</h1>\n        <h4 id='title'>Counselor</h4>\n      </div>\n      {/* <img src={Fern} alt=\"me\" /> */}\n      <ListGroup flush >\n        <div id='about-me'>\n          <h5>Education:</h5>\n        </div>\n        <ListGroupItem id='list'>\n          มหาวิทยาลัยเชียงใหม่\n          วิทยาศาสตร์มหาบัณฑิต สาขาจิตวิทยาการปรึกษา (2557 - 2559)\n          <br />\n          Chiangmai University\n          Master of Science in Counseling Psychology (2014 - 2016)\n        </ListGroupItem>\n        <ListGroupItem id='list'>\n          มหาวิทยาลัยเชียงใหม่\n          วิทยาศาสตร์บัณฑิต สาขาจิตวิทยา (2544 - 2547)\n          <br />\n          Chiangmai University\n          Bachelor of Science in Counseling Psychology (2001 - 2004)\n        </ListGroupItem>\n      </ListGroup>\n      {/* <img src={Fern} alt=\"me\" /> */}\n    </Container>\n\n  );\n}\n\nexport default About;","import axios from 'axios'\nconst baseUrl = '/api/login'\nconst adminUrl = '/api/admin'\n\nconst userlogin = async user => {\n  const response = await axios.post(baseUrl, user)\n  return response.data\n}\nconst adminLogin = async admin => {\n  const response = await axios.post(adminUrl, admin)\n  return response.data\n}\nexport default { userlogin, adminLogin }","import React from 'react'\nimport { Spinner } from 'reactstrap'\n\nconst SpinningLoader = () => {\n  return (\n    <div>\n      Loading...\n      <Spinner type=\"grow\" color=\"primary\" style={{ width: '5rem', height: '5rem' }} />\n    </div>\n  )\n}\nexport default SpinningLoader","import React, { useState } from 'react'\nimport Recaptcha from 'react-recaptcha'\nimport { useDispatch } from 'react-redux'\nimport { Form, Label, FormGroup, Button, Input, Modal, ModalBody, ModalFooter } from 'reactstrap'\nimport Select from 'react-select'\nimport SpinningLoader from './SpinningLoader'\nimport { goodRegister, badRegister } from '../reducers/notificationReducer'\nimport userService from '../services/userService'\n\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Poppins'\n}\nconst registerButtonStyle = {\n  display: 'inline-block',\n  width: '100px'\n}\nconst formDivStyle = {\n  display: 'block',\n  textAlign: 'center'\n}\nconst labelStyle = {\n  float: 'left',\n  marginBottom: '0px',\n  padding: '0px',\n  fontFamily: 'Poppins'\n}\nconst genderSelectStyle = {\n  marginRight: '20px',\n  float: 'left',\n  fontFamily: 'Poppins'\n}\n\nconst RegisterForm = () => {\n\n  const [modal, setModal] = useState(false);\n  const [loading, setLoading] = useState(false)\n\n  const [isVerified, setIsVerified] = useState(false)\n\n  const [name, setName] = useState('')\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [selectedGender, setSelectedGender] = useState('')\n  const [dateOfBirth, setDateOfBirth] = useState('')\n  const dispatch = useDispatch()\n\n  const toggle = () => setModal(!modal);\n\n  const genderOptions = [\n    { value: 'Male', label: 'Male' },\n    { value: 'Female', label: 'Female' },\n    { value: 'Other', label: 'Other' }\n  ]\n\n  const handleChangeName = (event) => {\n    setName(event.target.value)\n  }\n  const handleChangeUsername = (event) => {\n    setUsername(event.target.value)\n  }\n  const handleChangeEmail = (event) => {\n    setEmail(event.target.value)\n  }\n  const handleChangePassword = (event) => {\n    setPassword(event.target.value)\n  }\n  const handleChangeConfirmPassword = (event) => {\n    setConfirmPassword(event.target.value)\n  }\n  const handleChangeGender = (selectedGender) => {\n    setSelectedGender(selectedGender)\n  }\n  const handleChangeDateOfBirth = (event) => {\n    setDateOfBirth(event.target.value)\n  }\n  const recaptchaLoaded = () => {\n    console.log('captcha loaded successfully')\n  }\n  const verifyCallback = (response) => {\n    if (response) {\n      setIsVerified(true);\n    }\n  }\n  const variations = ['fern', 'Fern', 'admin', 'Admin', 'administrator', 'Administrator', 'nilubon', 'Nilubon', 'Fern-Admin', 'Fern-admin', 'fern-admin', 'fern-Admin', 'Fern Admin', 'fern Admin', 'Fern admin', 'fern admin', 'FernAdmin', 'fernAdmin', 'fern_admin', 'Fern_Admin']\n\n  const submitRegister = async event => {\n    event.preventDefault()\n    if (variations.includes(username) || variations.map(v => v.toLowerCase).includes(username)) {\n      alert('Sorry, that username is restricted')\n    }\n    else if (!name || !username || !selectedGender || !dateOfBirth || !password) {\n      alert('You must fill all fields')\n    }\n    else if (password.length < 5 || username.length < 5) {\n      alert('Your username and password must be at least 5 characters long')\n    }\n    else if (password !== confirmPassword) {\n      alert('Your passwords are not the same. Try again.')\n    }\n    else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\n      alert('Your email address is not valid')\n    }\n    else if (!isVerified) {\n      alert('Please verify that you are a human')\n    }\n\n    else {\n      //close modal\n      toggle()\n      try {\n        setLoading(true)\n        await userService.registerUser({ name, username, password, email, selectedGender, dateOfBirth })\n        setLoading(false)\n        dispatch(goodRegister())\n        setUsername('')\n        setPassword('')\n        setConfirmPassword('')\n        setName('')\n        setSelectedGender('')\n        setEmail('')\n        setDateOfBirth('')\n      }\n      catch (error) {\n        console.log(error)\n        setLoading(false)\n        dispatch(badRegister('Something went wrong...'))\n      }\n    }\n  }\n\n  return (\n    <div className='container' id='register-form'>\n      {\n        (loading)\n          ?\n          <div>\n            <SpinningLoader />\n          </div>\n          :\n          <div style={formDivStyle}>\n            <Button style={registerButtonStyle} color=\"primary\" onClick={toggle}>{'Sign up'}</Button>\n            <Modal autoFocus={true} isOpen={modal} toggle={toggle} modalTransition={{ timeout: 300 }} >\n              <ModalBody>\n                <h2 style={textStyle}>Register</h2>\n                <Form onSubmit={submitRegister} >\n                  <FormGroup>\n                    <Label style={labelStyle}>Name:</Label>\n                    <Input onChange={handleChangeName} value={name}></Input><br />\n                    <Label style={labelStyle}>Username:</Label>\n                    <Input onChange={handleChangeUsername} value={username}></Input><br />\n                    <Label style={labelStyle}>Password:</Label> <Input id='password' type=\"password\" onChange={handleChangePassword} value={password}></Input><br />\n                    <Label style={labelStyle}>Confirm Password:</Label>\n                    <Input onChange={handleChangeConfirmPassword} type='password' value={confirmPassword}></Input><br />\n                    <Label style={labelStyle}>Email:</Label> <Input id='email' type=\"text\" onChange={handleChangeEmail} value={email}></Input><br />\n                    <Label style={genderSelectStyle}>Gender:</Label><Select options={genderOptions} value={selectedGender} onChange={handleChangeGender}></Select><br />\n                    <Label style={labelStyle}>Date of Birth:</Label> <Input id='dateOfBirth' type=\"date\" onChange={handleChangeDateOfBirth} value={dateOfBirth}></Input><br />\n                  </FormGroup>\n                </Form>\n              </ModalBody>\n              <Recaptcha sitekey='6LcL060ZAAAAABmkdF8vTezZgafAVQo1WoGgGNDT' render='explicit' onloadCallback={recaptchaLoaded} verifyCallback={verifyCallback} />\n              <ModalFooter>\n                <Button color='primary' type='submit' onClick={submitRegister}>Sign Up</Button>\n                <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n              </ModalFooter>\n            </Modal></div>\n      }\n    </div >\n  )\n}\n\nexport default RegisterForm","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { badLogin, goodLogin, reset } from '../reducers/notificationReducer'\nimport { setUser } from '../reducers/activeUserReducer'\nimport loginService from '../services/loginService'\nimport forumService from '../services/forumService'\n\nimport { Form, Label, FormGroup, Button, Input } from 'reactstrap'\nimport RegisterForm from './RegisterForm'\n\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Poppins'\n}\nconst formDivStyle = {\n  display: 'block',\n  textAlign: 'center'\n}\nconst formStyle = {\n  width: '70%',\n  display: 'inline-block'\n}\nconst labelStyle = {\n  float: 'left',\n  marginBottom: '0px',\n  padding: '0px',\n  fontFamily: 'Poppins'\n}\nconst loginButtonStyle = {\n  float: 'center',\n  width: '100px'\n}\n\nconst LoginForm = (props) => {\n  const { setLoggedIn } = props\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const handleChangeUser = (event) => {\n    setUsername(event.target.value)\n  }\n  const handleChangePass = (event) => {\n    setPassword(event.target.value)\n  }\n  const submitLogin = async event => {\n    event.preventDefault()\n    if (!username || !password) {\n      alert('You must enter a username and password')\n    }\n    else {\n      try {\n        const user =\n          await loginService.userlogin({ username, password })\n        window.localStorage.setItem(\n          'loggedForumUser', JSON.stringify(user)\n        )\n        forumService.setToken(user.token)\n        dispatch(setUser(user))\n        setLoggedIn(true)\n        dispatch(goodLogin(`Welcome back ${user.username}`))\n        setTimeout(() => {\n          dispatch(reset())\n        }, 3000)\n        setUsername('')\n        setPassword('')\n        history.push('/forum')\n      }\n      catch (error) {\n        console.log(error.message)\n        if (error.message.includes('401')) {\n          dispatch(badLogin('Make sure your username and password are correct...'))\n        } else {\n          dispatch(badLogin('Something went wrong...'))\n        }\n      }\n    }\n  }\n  return (\n    <div className='container' id='login-form'>\n      <h2 style={textStyle}>Login</h2>\n      <div id='form-div' style={formDivStyle}>\n        <Form style={formStyle} onSubmit={submitLogin}>\n          <FormGroup>\n            <Label style={labelStyle}>Username:</Label>\n            <Input onChange={handleChangeUser} value={username}></Input><br />\n            <Label style={labelStyle}>Password:</Label> <Input id='password' type=\"password\" onChange={handleChangePass} value={password}></Input><br />\n            <Button color='primary' style={loginButtonStyle} id='submit-login' type=\"submit\">Enter</Button>\n          </FormGroup>\n        </Form>\n      </div>\n      <br />\n      <hr />\n      <div id='no-account-div'>\n        <p style={textStyle}>Don't have an account? </p>\n        <RegisterForm />\n      </div>\n    </div>\n  )\n}\n\nexport default LoginForm","/* eslint-disable no-multi-str */\nimport React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Container, Button, Input, Label } from 'reactstrap'\nimport { Editor } from '@tinymce/tinymce-react'\nimport Select from 'react-select'\nimport makeAnimated from 'react-select/animated'\nimport { addQuestion } from '../reducers/forumReducer'\n\nconst labelStyle = {\n  fontFamily: 'Poppins',\n  fontWeight: 400,\n  fontSize: '1.5rem',\n  marginBottom: '0px',\n  marginTop: '30px'\n}\nconst buttonStyle = {\n  marginTop: '20px',\n  width: '200px',\n  float: 'center'\n}\n\nconst tagOptions = [\n  { value: 'sex', label: 'Sex' },\n  { value: 'dating', label: 'Dating' },\n  { value: 'illegal drugs', label: 'Illegal Drugs' },\n  { value: 'friendship', label: 'Friendship' },\n  { value: 'lgbt', label: 'LGBT' },\n  { value: 'depression', label: 'Depression' },\n  { value: 'anxiety', label: 'Anxiety' },\n  { value: 'bipolar', label: 'Bipolar' },\n  { value: 'relationships', label: 'Relationships' },\n  { value: 'career', label: 'Career' },\n  { value: 'mentalHealth', label: 'Mental Health' },\n  { value: 'bullying', label: 'Bullying' },\n  { value: 'family', label: 'Family' },\n  { value: 'peerPressure', label: 'Peer Pressure' },\n  { value: 'parenting', label: 'Parenting' },\n  { value: 'other', label: 'Other' }\n]\nconst ForumPostMain = (props) => {\n  // const { activeUser } = props\n  const [question, setQuestion] = useState('')\n  const [title, setTitle] = useState('')\n  const [selectedTags, setSelectedTags] = useState([])\n  const animatedTags = makeAnimated()\n  const dispatch = useDispatch()\n\n  const handleTitleChange = (event) => {\n    setTitle(event.target.value)\n  }\n  const handleContentChange = (content, editor) => {\n    setQuestion(content)\n  }\n  const handleTagChange = (selectedTags) => {\n    setSelectedTags(selectedTags)\n  }\n\n  const handleEditorSubmit = async (event) => {\n    event.preventDefault()\n    if (!title || !question || !selectedTags.length >= 2) {\n      alert('Please make sure you have a title, a question, and at least 2 tags')\n    }\n    const postToAdd = {\n      title: title,\n      question: question,\n      answer: '',\n      isAnswered: false,\n      tags: selectedTags.map(t => t.value),\n      likes: 0\n    }\n    dispatch(addQuestion(postToAdd))\n  }\n  return (\n    <Container>\n      <div id='forum-title-div'>\n        <Label style={labelStyle}>Title:</Label>\n        <p style={{ fontFamily: 'Poppins' }}>Give your post an interesting title.</p>\n        <Input\n          placeholder='My Awesome Title!'\n          onChange={handleTitleChange}\n          value={title}\n          style={{ marginBottom: '20px' }}\n        />\n      </div>\n\n      <div id='forum-question-div'>\n        <Label style={labelStyle}>Question:</Label>\n        <p style={{ fontFamily: 'Poppins' }}>Reminder: This forum is anonymous. Although you must have an account to post, your name and username will NOT show on the forum, so feel free to ask anything.</p>\n        <Editor\n          apiKey=\"1jdezn4w8yzylr4m873z9o7tlc1wl9b6xnlenejmp0dws97n\"\n          initialValue=\"\"\n          init={{\n            height: 200,\n            menubar: false,\n            plugins: [],\n            toolbar:\n              'fontselect fontsizeselect | bold italic underline| cut copy paste'\n          }}\n          onEditorChange={handleContentChange}\n          value={question}\n          onSubmit={handleEditorSubmit}\n        />\n        <Label style={labelStyle}>Tags:</Label>\n        <p style={{ fontFamily: 'Poppins' }}>Select some tags to help other people know what your question is about!</p>\n        <Select\n          options={tagOptions}\n          onChange={handleTagChange}\n          closeMenuOnSelect={false}\n          components={animatedTags}\n          defaultValue={[]}\n          isMulti>\n        </Select>\n        <Button style={buttonStyle} color='primary' onClick={handleEditorSubmit}>Ask Fern!</Button>\n      </div>\n\n    </Container>\n  )\n}\nexport default ForumPostMain","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { initializeForumAnswered } from '../reducers/forumReducer'\nimport { Container, Button } from 'reactstrap'\n\nconst ForumDisplayMain = () => {\n\n  const dispatch = useDispatch()\n  const forum = useSelector(state => state.forum)\n\n  useEffect(() => {\n    dispatch(initializeForumAnswered())\n  }, [dispatch])\n\n  return (\n    <Container>\n      <div>\n        <div>\n          {forum.map(f => <div key={f._id} dangerouslySetInnerHTML={{ __html: f.question }} />)}\n        </div>\n      Have a question?<br />\n        <Link to='/forum/post'><Button>Ask Fern</Button></Link>\n      </div>\n    </Container>\n  )\n}\nexport default ForumDisplayMain","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport Recaptcha from 'react-recaptcha'\nimport { Formik } from 'formik';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelopeSquare } from '@fortawesome/free-solid-svg-icons';\nimport { faFacebookSquare } from '@fortawesome/free-brands-svg-icons'\nimport { Container, Form, Label, Input, FormGroup, Button } from 'reactstrap'\nimport contactService from '../services/contactService'\n\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Poppins'\n}\nconst formDivStyle = {\n  display: 'block',\n  textAlign: 'center',\n  marginTop: '50px'\n}\nconst formStyle = {\n  width: '90%',\n  display: 'inline-block'\n}\nconst labelStyle = {\n  float: 'left',\n  marginBottom: '0px',\n  padding: '0px',\n  fontFamily: 'Poppins'\n}\nconst contactButtonStyle = {\n  float: 'center',\n  width: '200px',\n  marginBottom: '20px'\n}\n\nconst ContactForm = () => {\n  const [isVerified, setIsVerified] = useState(false)\n  const history = useHistory()\n  const recaptchaLoaded = () => {\n    console.log('captcha loaded successfully')\n  }\n  const verifyCallback = (response) => {\n    if (response) {\n      setIsVerified(true);\n    }\n  }\n  return (\n    <div>\n      <Formik\n        initialValues={{ name: '', email: '', LINE: '', message: '' }}\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = 'Required';\n          }\n          if (!values.message) {\n            errors.message = 'Required'\n          } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          ) {\n            errors.email = 'Invalid email address';\n          }\n          return errors;\n        }}\n        onSubmit={\n          async (values, { setSubmitting, resetForm }) => {\n            if (!isVerified) {\n              alert('Please verify that you are a human')\n            } else {\n              const response = await contactService.sendContact(values)\n              console.log(response.message)\n              setSubmitting(false)\n              resetForm({})\n              history.push('/forum')\n            }\n          }\n        }\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          /* and other goodies */\n        }) => (\n            <Container style={formDivStyle}>\n              <p style={{ fontFamily: 'Poppins' }}> We understand if you don't want to post on the forum just yet.  Instead, you can use this form to contact Fern privately, or add her on social media.</p>\n              <div id='NavBarText'>\n                <a href=\"mailto:furbynilu@gmail.com\"> <FontAwesomeIcon id='fa-contact-form' icon={faEnvelopeSquare} />\n                </a>\n                <a href=\"https://www.facebook.com/NiluAcounselor\"> <FontAwesomeIcon id='fa-contact-form' icon={faFacebookSquare} /></a>\n              </div>\n              <br />\n              <h3 style={textStyle}>Enter your information: </h3>\n              <Form style={formStyle} onSubmit={handleSubmit} className='form-ui'>\n                <FormGroup style={{ marginBottom: '0' }}>\n                  <Label style={labelStyle} for='name'>Name</Label>\n                  <Input\n                    type=\"Name\"\n                    name=\"name\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.name}\n                  /><br />\n                  <Label style={labelStyle} for='email'>Email</Label>\n                  <Input\n                    placeholder='You@example.com'\n                    type=\"Email\"\n                    name=\"email\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.email}\n                  /><br />\n                  {errors.email && touched.email && errors.email}\n                  <Label style={labelStyle} for='Line'>LINE</Label>\n                  <Input\n                    placeholder='Line ID'\n                    type=\"Line\"\n                    name=\"LINE\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.LINE}\n                  /><br />\n                  <Label style={labelStyle} for='message'>Message</Label>\n                  <Input\n                    placeholder='I have a question about...'\n                    type=\"Message\"\n                    name=\"message\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.message}\n                  /><br />\n                  {errors.message && touched.message && errors.message}\n                </FormGroup>\n                <Recaptcha sitekey='6LcL060ZAAAAABmkdF8vTezZgafAVQo1WoGgGNDT' render='explicit' onloadCallback={recaptchaLoaded} verifyCallback={verifyCallback} />\n                <Button style={contactButtonStyle} type='submit' color='primary'>Send</Button><br />\n              </Form>\n            </Container>\n          )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default ContactForm;","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { UncontrolledAlert } from 'reactstrap'\n\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Poppins'\n}\n\nconst Notification = () => {\n  const notification = useSelector(state => state.notifications)\n  return (\n    <div >\n      {notification !== '' ?\n        <UncontrolledAlert style={textStyle} variant='info'>\n          <h4>{notification}</h4>\n        </UncontrolledAlert>\n        : null}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { badLogin, goodLogin, reset } from '../reducers/notificationReducer'\nimport loginService from '../services/loginService'\nimport forumService from '../services/forumService'\nimport { setUser } from '../reducers/activeUserReducer'\nimport { Form, Label, FormGroup, Button, Input } from 'reactstrap'\n\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Poppins'\n}\nconst formDivStyle = {\n  display: 'block',\n  textAlign: 'center'\n}\nconst formStyle = {\n  width: '70%',\n  display: 'inline-block'\n}\nconst labelStyle = {\n  float: 'left',\n  marginBottom: '0px',\n  padding: '0px',\n  fontFamily: 'Poppins'\n}\nconst loginButtonStyle = {\n  float: 'center',\n  width: '200px'\n}\n\nconst AdminLoginForm = (props) => {\n  const { setLoggedIn } = props\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const handleChangeUser = (event) => {\n    setUsername(event.target.value)\n  }\n  const handleChangePass = (event) => {\n    setPassword(event.target.value)\n  }\n  const submitLogin = async event => {\n    event.preventDefault()\n    if (!username || !password) {\n      alert('You must enter a username and password')\n    }\n    else {\n      try {\n        const admin =\n          await loginService.adminLogin({ username, password })\n        window.localStorage.setItem(\n          'loggedForumUser', JSON.stringify(admin)\n        )\n        forumService.setToken(admin.token)\n        dispatch(setUser(admin))\n        setLoggedIn(true)\n        dispatch(goodLogin(`Welcome back ${admin.username}`))\n        setTimeout(() => {\n          dispatch(reset())\n        }, 3000)\n        setUsername('')\n        setPassword('')\n        history.push('/admin/dashboard')\n      }\n      catch (error) {\n        console.log(error.message)\n        if (error.message.includes('401')) {\n          dispatch(badLogin('Are you sure you are the admin? Check your username and password again...'))\n        } else {\n          dispatch(badLogin('Something went wrong...'))\n        }\n      }\n    }\n  }\n  return (\n    <div className='container' id='admin-login-form'>\n      <h2 style={textStyle}>Admin Login</h2>\n      <div id='form-div' style={formDivStyle}>\n        <Form style={formStyle} onSubmit={submitLogin}>\n          <FormGroup>\n            <Label style={labelStyle}>Username:</Label>\n            <Input onChange={handleChangeUser} value={username}></Input><br />\n            <Label style={labelStyle}>Password:</Label> <Input id='password' type=\"password\" onChange={handleChangePass} value={password}></Input><br />\n            <Button color='none' style={loginButtonStyle} id='admin-submit-login' type=\"submit\">Enter</Button>\n          </FormGroup>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default AdminLoginForm","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Table, Container, Button } from 'reactstrap'\nimport { initializeContacts, setContactHidden } from '../reducers/contactReducer'\n\n// const buttonStyle = {\n//   marginTop: '20px'\n// }\nconst AdminContactsDashboard = () => {\n  const dispatch = useDispatch()\n  const contact = useSelector(state => state.contact)\n  // const [toggle, setToggle] = useState(false)\n\n  const setHidden = (c) => {\n    dispatch(setContactHidden(c))\n  }\n\n  useEffect(() => {\n    dispatch(initializeContacts())\n  }, [dispatch])\n\n  return (\n    <Container>\n      <Table striped>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>LINE</th>\n            <th>Email</th>\n            <th>Date</th>\n            <th>Message</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            contact.map(c => c.hidden === false ?\n              <tr key={c._id}>\n                <td>{c.name}</td>\n                <td>{c.LINE}</td>\n                <td>{c.email}</td>\n                <td>{c.date.slice(0, 10)}</td>\n                <td>{c.message}</td>\n                <td><Button onClick={() => setHidden(c)} size='sm'>Remove</Button></td>\n              </tr>\n              : null)\n          }\n        </tbody>\n      </Table>\n    </Container>\n  )\n}\nexport default AdminContactsDashboard","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Table, Button, Container } from 'reactstrap'\nimport { initializeUsers } from '../reducers/userInfoForAdminReducer'\n\n// const buttonStyle = {\n//   marginTop: '20px'\n// }\n\nconst AdminUsersDashboard = () => {\n  const dispatch = useDispatch()\n  const users = useSelector(state => state.userInfoForAdmin)\n  const [questionToggle, setQuestionToggle] = useState(false)\n\n  useEffect(() => {\n    dispatch(initializeUsers())\n  }, [dispatch])\n\n  return (\n    <Container>\n      <Table striped>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Username</th>\n            <th>Email</th>\n            <th>DOB(yyyy-mm-dd)</th>\n            <th>Questions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            users.map(c =>\n              <tr key={c.id}>\n                <td>{c.name}</td>\n                <td>{c.username}</td>\n                <td>{c.email}</td>\n                <td>{c.dateOfBirth.slice(0, 10)}</td>\n                <td><Button color='secondary' size='sm' onClick={() => setQuestionToggle(!questionToggle)}>Questions</Button></td>\n              </tr>)\n          }\n        </tbody>\n      </Table>\n    </Container>\n  )\n}\nexport default AdminUsersDashboard","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Container, Button, Label } from 'reactstrap'\nimport { Editor } from '@tinymce/tinymce-react'\nimport { answerQuestion } from '../reducers/forumReducer'\nimport { answeredQuestion, fail } from '../reducers/notificationReducer'\n\nconst labelStyle = {\n  fontFamily: 'Poppins',\n  fontWeight: 400,\n  fontSize: '1.5rem',\n  marginBottom: '0px',\n  marginTop: '30px'\n}\nconst AdminForumAnswer = (props) => {\n  const { post } = props\n  const [answer, setAnswer] = useState('')\n  const dispatch = useDispatch()\n\n  const handleContentChange = (content, editor) => {\n    setAnswer(content)\n  }\n  const handleEditorSubmit = async (event) => {\n    event.preventDefault()\n    if (!answer) {\n      alert('You must have an answer')\n    } else {\n      try {\n        const postToAnswer = {\n          ...post, answer: answer, isAnswered: true\n        }\n        dispatch(answerQuestion(postToAnswer))\n        dispatch(answeredQuestion())\n        setAnswer('')\n      } catch (error) {\n        console.log(error)\n        dispatch(fail())\n      }\n    }\n  }\n  return (\n    <div id='forum-response-div'>\n      <Container>\n        <Label style={labelStyle}>Question:</Label>\n        <p style={{ fontFamily: 'Poppins' }}>Reminder: This forum is anonymous.</p>\n        {(!post.question) ? <h3 style={{ color: 'red' }}>You must first select a post</h3> :\n          <div style={{ borderColor: 'red', borderStyle: 'solid', padding: '10px', borderWidth: '1px' }}><p style={{ fontFamily: 'Poppins' }}>You are answering the following question:</p><div dangerouslySetInnerHTML={{ __html: post.question }} style={{ marginBottom: '10px' }} />{post._id}</div>}\n        <Editor\n          apiKey=\"1jdezn4w8yzylr4m873z9o7tlc1wl9b6xnlenejmp0dws97n\"\n          initialValue=\"\"\n          init={{\n            height: 200,\n            menubar: false,\n            plugins: [],\n            toolbar:\n              'fontselect fontsizeselect | bold italic underline| cut copy paste'\n          }}\n          onEditorChange={handleContentChange}\n          value={answer}\n          onSubmit={handleEditorSubmit}\n        />\n        <Button onClick={handleEditorSubmit}>Submit Answer</Button>\n      </Container>\n    </div>\n  )\n}\nexport default AdminForumAnswer","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Table, Container, Button } from 'reactstrap'\nimport { initializeForumPending } from '../reducers/forumReducer'\nimport AdminForumAnswer from './AdminForumAnswer'\n\nconst AdminForumDashboard = () => {\n  const dispatch = useDispatch()\n  const [answering, setAnswering] = useState({})\n  const forum = useSelector(state => state.forum)\n\n  useEffect(() => {\n    dispatch(initializeForumPending())\n  }, [dispatch])\n\n  const postToChange = (post) => {\n    setAnswering(post)\n  }\n  return (\n    <Container>\n      <Table striped>\n        <thead>\n          <tr>\n            <th>Email</th>\n            <th>Date</th>\n            <th>Question</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            forum.map(c => c.isAnswered === false ?\n              <tr key={c._id}>\n                <td>{c.user.email}</td>\n                <td>{c.date.slice(0, 10)}</td>\n                <td><div dangerouslySetInnerHTML={{ __html: c.question }} /></td>\n                <td><Button onClick={() => postToChange(c)}>Answer</Button></td>\n              </tr>\n              : null)\n          }\n        </tbody>\n      </Table>\n      <AdminForumAnswer post={answering} />\n    </Container>\n  )\n}\nexport default AdminForumDashboard","import React from 'react'\n\nconst NoPage = () => {\n\n  const textStyle = {\n    fontFamily: 'Poppins',\n    fontWeight: '700',\n    textAlign: 'center',\n    marginTop: '300px'\n  }\n  return (\n    <div style={textStyle}>\n      <h1>\n        Sorry, but this page doesn't exist...\n      </h1>\n    </div>\n  )\n}\nexport default NoPage","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { setUser } from './reducers/activeUserReducer'\nimport forumService from './services/forumService'\nimport MyNavbar from './components/MyNavbar';\nimport About from './components/About';\nimport LoginForm from './components/LoginForm'\nimport ForumPostMain from './components/ForumPostMain';\nimport ForumDisplayMain from './components/ForumDisplayMain'\nimport ContactForm from './components/ContactForm';\nimport Notification from './components/Notification'\nimport AdminLoginForm from './components/AdminLoginForm';\nimport AdminContactsDashboard from './components/AdminContactsDashboard'\nimport AdminUsersDashboard from './components/AdminUsersDashboard'\nimport AdminForumDashboard from './components/AdminForumDashboard'\nimport NoPage from './components/NoPage'\nimport { Button, UncontrolledCollapse } from 'reactstrap';\n//import { initializeQuestions } from './reducers/forumReducer';\n\n\nconst App = () => {\n  const [loggedIn, setLoggedIn] = useState(false)\n  // const forum = useSelector(state => state.forum)\n  const activeUser = useSelector(state => state.activeUser)\n  const dispatch = useDispatch()\n\n  // const dispatch = useDispatch()\n  // useEffect(() => {\n  //   dispatch(initializeQuestions())\n  // }, [dispatch])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedForumUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(setUser(user))\n      setLoggedIn(true)\n      forumService.setToken(user.token)\n    }\n  }, [dispatch])\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <MyNavbar activeUser={activeUser} setLoggedIn={setLoggedIn} loggedIn={loggedIn} />\n        <Notification />\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/contact\">\n            <ContactForm />\n          </Route>\n          <Route exact path=\"/forum/post\">\n            <ForumPostMain activeUser={activeUser} />\n          </Route>\n          <Route path=\"/forum\">\n            <ForumDisplayMain activeUser={activeUser} />\n          </Route>\n          <Route path=\"/login\">\n            <LoginForm setLoggedIn={setLoggedIn} />\n          </Route>\n          <Route path='/admin/dashboard'>\n            {!activeUser || activeUser.username !== 'Fern-Admin' ?\n              <NoPage /> :\n              <div>\n                <Button color='secondary' id='pendingToggler' style={{ margin: '0.5rem', position: 'relative' }}>Show Pending\n                </Button>\n                <Button color='secondary' id='contactsToggler' style={{ margin: '0.5rem', position: 'relative' }}>Show Contacts</Button>\n                <Button color='secondary' id='usersToggler' style={{ margin: '0.5rem', position: 'relative' }}>Show Users</Button>\n                <UncontrolledCollapse toggler=\"#pendingToggler\">\n                  <AdminForumDashboard />\n                </UncontrolledCollapse>\n                <UncontrolledCollapse toggler=\"#contactsToggler\">\n                  <AdminContactsDashboard />\n                </UncontrolledCollapse>\n                <UncontrolledCollapse toggler=\"#usersToggler\">\n                  <AdminUsersDashboard />\n                </UncontrolledCollapse>\n              </div>\n            }\n          </Route>\n          <Route path=\"/admin\">\n            <AdminLoginForm setLoggedIn={setLoggedIn} />\n          </Route>\n        </Switch>\n      </div>\n    </Router >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.css'\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);"],"sourceRoot":""}