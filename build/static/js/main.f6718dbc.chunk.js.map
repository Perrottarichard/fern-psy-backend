{"version":3,"sources":["services/forumService.js","reducers/forumReducer.js","reducers/notificationReducer.js","reducers/userReducer.js","store.js","components/Navbar.js","components/About.js","services/loginService.js","components/SpinningLoader.js","services/userService.js","components/RegisterForm.js","components/LoginForm.js","components/ForumMain.js","components/ContactForm.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","blog","put","id","setToken","newToken","remove","question","delete","like","toUpdate","forumReducer","state","action","type","concat","console","log","questionToChange","find","q","changedQuestion","likes","map","filter","badRegister","message","notificationReducer","setUser","userReducer","reducer","combineReducers","forum","notifications","user","store","createStore","composeWithDevTools","applyMiddleware","thunk","MyNavbar","props","useState","isOpen","setIsOpen","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","tag","Link","to","NavbarText","icon","faEnvelopeSquare","faFacebookSquare","About","Container","fluid","ListGroup","flush","ListGroupItem","login","SpinningLoader","Spinner","style","width","height","registerUser","RegisterForm","modal","setModal","toggle","isVerified","setIsVerified","loading","setLoading","name","setName","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","selectedGender","setSelectedGender","dateOfBirth","setDateOfBirth","dispatch","useDispatch","submitRegister","event","preventDefault","setTimeout","length","test","userService","alert","Button","Modal","autoFocus","modalTransition","timeout","ModalBody","Form","onSubmit","method","sitekey","render","onloadCallback","verifyCallback","FormGroup","Label","Input","onChange","target","value","options","label","ModalFooter","LoginForm","setLoggedIn","submitLogin","loginService","window","localStorage","setItem","JSON","stringify","forumService","badLogin","ForumMain","divStyle","marginTop","marginBottom","ContactForm","initialValues","LINE","validate","values","errors","setSubmitting","touched","handleChange","handleBlur","handleSubmit","isSubmitting","for","placeholder","onBlur","Notification","notification","useSelector","Alert","variant","App","useEffect","loggedUserJSON","getItem","parse","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f6718dbc.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/forum'\n\nlet token = null\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (blog, newObject) => {\n  const response = axios.put(`${baseUrl}/${blog.id}`, newObject)\n  return response.data\n}\n\nconst remove = async question => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.delete(`${baseUrl}/${question.id}`, config)\n  return response.data\n}\n\nconst like = async (toUpdate) => {\n  const id = toUpdate.id\n  const response = await axios.put(`${baseUrl}/${id}`, toUpdate)\n  return response.data\n}\n\nexport default { getAll, create, update, setToken, remove, like }","import forumService from '../services/forumService'\n\nconst forumReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'NEW_QUESTION':\n      return state.concat(action.data)\n    case 'INIT_QUESTIONS':\n      console.log(action.data)\n      return action.data\n    case 'LIKE':\n      const id = action.data.id\n      const questionToChange = state.find(q => q.id === id)\n      const changedQuestion = { ...questionToChange, likes: questionToChange.likes + 1 }\n      return state.map(q => q.id === id ? changedQuestion : q)\n    case 'DELETE_QUESTION':\n      return state.filter(q => q.id !== action.data.id)\n    default: return state\n  }\n}\nexport const upLike = (question) => {\n  return async dispatch => {\n    const updatedObject = { ...question, likes: question.likes + 1 }\n    await forumService.like(updatedObject)\n    dispatch({\n      type: 'LIKE',\n      data: updatedObject\n    })\n  }\n}\nexport const addQuestion = data => {\n  return async dispatch => {\n    const newQuestion = await forumService.create(data)\n    dispatch({\n      type: 'NEW_QUESTION',\n      data: newQuestion\n    })\n  }\n}\nexport const deleteQuestion = data => {\n  return async dispatch => {\n    await forumService.remove(data)\n    dispatch({\n      type: 'DELETE_QUESTION',\n      data\n    })\n  }\n}\nexport const initializeQuestions = () => {\n  return async dispatch => {\n    const questions = await forumService.getAll()\n    dispatch({\n      type: 'INIT_QUESTIONS',\n      data: questions\n    })\n  }\n}\nexport default forumReducer","const nada = ''\nconst notificationReducer = (state = nada, action) => {\n  switch (action.type) {\n    case 'LIKE_QUESTION':\n      return action.message\n    case 'CREATE_QUESTION':\n      return action.message\n    case 'DELETE_QUESTION':\n      return action.message\n    case 'GOOD_LOGIN':\n      return action.message\n    case 'GOOD_REGISTER':\n      return action.message\n    case 'BAD_LOGIN':\n      return action.message\n    case 'BAD_REGISTER':\n      return action.message\n    case 'RESET':\n      return nada\n    default:\n      return state\n  }\n}\nexport const voteMessage = () => {\n  return {\n    type: 'LIKE_QUESTION',\n    message: 'You liked a question!'\n  }\n}\nexport const createMessage = () => {\n  return {\n    type: 'CREATE_QUESTION',\n    message: `Congratulations! You added a new question to the forum.`\n  }\n}\nexport const reset = () => {\n  return {\n    type: 'RESET',\n    message: nada\n  }\n}\nexport const deleteMessage = () => {\n  return {\n    type: 'DELETE_QUESTION',\n    message: `You deleted a question`\n  }\n}\nexport const goodLogin = () => {\n  return {\n    type: 'GOOD_LOGIN',\n    message: `Welcome back!`\n  }\n}\nexport const goodRegister = () => {\n  return {\n    type: 'GOOD_REGISTER',\n    message: `Successfully registered!`\n  }\n}\nexport const badLogin = (message) => {\n  return {\n    type: 'BAD_LOGIN',\n    message: message\n  }\n}\nexport const badRegister = (message) => {\n  return {\n    type: 'BAD_REGISTER',\n    message: message\n  }\n}\n\nexport default notificationReducer","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.data\n    case 'CLEAR_USER':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const setUser = data => {\n  console.log(data)\n  return {\n    type: 'SET_USER',\n    data\n  }\n}\nexport const clearUser = () => {\n  return {\n    type: 'CLEAR_USER',\n    data: null\n  }\n}\nexport default userReducer","\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport forumReducer from './reducers/forumReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport userReducer from './reducers/userReducer'\n\n\nconst reducer = combineReducers({\n  forum: forumReducer,\n  notifications: notificationReducer,\n  user: userReducer,\n})\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFacebookSquare } from '@fortawesome/free-brands-svg-icons'\nimport { faEnvelopeSquare } from '@fortawesome/free-solid-svg-icons';\n\nimport { Link } from 'react-router-dom';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarText\n} from 'reactstrap';\n\nconst MyNavbar = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    //<Router>\n    <div>\n      <Navbar id=\"navbar\" color=\"dark\" dark expand=\"md\">\n        <NavbarBrand id='navbrand' href=\"/\">Fern's Counseling</NavbarBrand>\n        <NavbarToggler id=\"dropdownmenu\" onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink tag={Link} id=\"NavLink\" to=\"/forum\">Forum</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} id=\"NavLink\" to=\"/about\">About</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} id=\"NavLink\" to=\"/contact\">Contact</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} id=\"NavLink\" to=\"/login\">Login</NavLink>\n            </NavItem>\n          </Nav>\n          <NavbarText id='NavBarText'>\n            <a href=\"mailto:furbynilu@gmail.com\"> <FontAwesomeIcon id='fa' icon={faEnvelopeSquare} />\n            </a>\n            <a href=\"https://www.facebook.com/NiluAcounselor\"> <FontAwesomeIcon id='fa' icon={faFacebookSquare} /></a>\n          </NavbarText>\n        </Collapse>\n      </Navbar>\n    </div>\n    //</Router>\n  );\n}\nexport default MyNavbar;","import React from 'react';\nimport { Container, ListGroup, ListGroupItem } from 'reactstrap';\n// import Fern from '../components/fernQR.jpg'\nimport '../about.css';\n\nfunction About() {\n  return (\n    <Container id='about' className=\"themed-container\" fluid={true}>\n      <div id='heading'>\n        <h1 id='name'>Nilubon Sukawanich</h1>\n        <h4 id='title'>Counselor</h4>\n      </div>\n      {/* <img src={Fern} alt=\"me\" /> */}\n      <ListGroup flush >\n        <div id='about-me'>\n          <h5>Education:</h5>\n        </div>\n        <ListGroupItem id='list'>\n          มหาวิทยาลัยเชียงใหม่\n          วิทยาศาสตร์มหาบัณฑิต สาขาจิตวิทยาการปรึกษา (2557 - 2559)\n          <br />\n          Chiangmai University\n          Master of Science in Counseling Psychology (2014 - 2016)\n        </ListGroupItem>\n        <ListGroupItem id='list'>\n          มหาวิทยาลัยเชียงใหม่\n          วิทยาศาสตร์บัณฑิต สาขาจิตวิทยา (2544 - 2547)\n          <br />\n          Chiangmai University\n          Bachelor of Science in Counseling Psychology (2001 - 2004)\n        </ListGroupItem>\n      </ListGroup>\n      {/* <img src={Fern} alt=\"me\" /> */}\n    </Container>\n\n  );\n}\n\nexport default About;","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async user => {\n  const response = await axios.post(baseUrl, user)\n  return response.data\n}\nexport default { login }","import React from 'react'\nimport { Spinner } from 'reactstrap'\n\nconst SpinningLoader = () => {\n  return (\n    <div>\n      Loading...\n      <Spinner type=\"grow\" color=\"primary\" style={{ width: '5rem', height: '5rem' }} />\n    </div>\n  )\n}\nexport default SpinningLoader","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst registerUser = async user => {\n  const response = await axios.post(`${baseUrl}/register`, user)\n  return response.data\n}\nexport default { registerUser }","import React, { useState } from 'react'\nimport Recaptcha from 'react-recaptcha'\nimport { useDispatch } from 'react-redux'\nimport SpinningLoader from './SpinningLoader'\nimport Select from 'react-select'\nimport { reset, goodRegister, badRegister } from '../reducers/notificationReducer'\nimport userService from '../services/userService'\nimport { Form, Label, FormGroup, Button, Input, Modal, ModalBody, ModalFooter } from 'reactstrap'\n\nconst RegisterForm = () => {\n\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n\n  const [isVerified, setIsVerified] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  const [name, setName] = useState('')\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [selectedGender, setSelectedGender] = useState('')\n  const [dateOfBirth, setDateOfBirth] = useState('')\n\n  const dispatch = useDispatch()\n\n  const genderOptions = [\n    { value: 'male', label: 'male' },\n    { value: 'female', label: 'female' },\n    { value: 'other', label: 'other' }\n  ]\n\n  const handleChangeName = (event) => {\n    setName(event.target.value)\n  }\n  const handleChangeUsername = (event) => {\n    setUsername(event.target.value)\n  }\n  const handleChangeEmail = (event) => {\n    setEmail(event.target.value)\n  }\n  const handleChangePassword = (event) => {\n    setPassword(event.target.value)\n  }\n  const handleChangeConfirmPassword = (event) => {\n    setConfirmPassword(event.target.value)\n  }\n  const handleChangeGender = (selectedGender) => {\n    setSelectedGender(selectedGender)\n  }\n  const handleChangeDateOfBirth = (event) => {\n    setDateOfBirth(event.target.value)\n  }\n  const recaptchaLoaded = () => {\n    console.log('captcha loaded successfully')\n  }\n  const verifyCallback = (response) => {\n    if (response) {\n      setIsVerified(true);\n    }\n  }\n  const submitRegister = async event => {\n    event.preventDefault()\n    //check captcha\n    if (isVerified) {\n      toggle() //close modal\n      //validate field info\n      if (!name || !username || !selectedGender || !dateOfBirth || !password) {\n        dispatch(badRegister('You must fill all fields'))\n        setTimeout(() => {\n          dispatch(reset())\n        }, 5000)\n      }\n      else if (password.length < 5 || username.length < 5) {\n        dispatch(badRegister('Your username and password must be at least 5 characters long'))\n        setTimeout(() => {\n          dispatch(reset())\n        })\n      }\n      else if (password !== confirmPassword) {\n        dispatch(badRegister('You passwords are not the same. Try again.'))\n        setTimeout(() => {\n          dispatch(reset())\n        }, 5000);\n      }\n      else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\n        dispatch(badRegister('Your email address is not valid'))\n        setTimeout(() => {\n          dispatch(reset())\n        }, 5000)\n      }\n      else {\n        try {\n          setLoading(true)\n          await userService.registerUser({ name, username, password, email, selectedGender, dateOfBirth })\n          setLoading(false)\n          dispatch(goodRegister())\n          setTimeout(() => {\n            dispatch(reset())\n          }, 5000)\n          setUsername('')\n          setPassword('')\n          setConfirmPassword('')\n          setName('')\n          setSelectedGender('')\n          setEmail('')\n          setDateOfBirth('')\n        }\n        catch (error) {\n          console.log(error)\n          setLoading(false)\n          dispatch(badRegister(error.message))\n          setTimeout(() => {\n            dispatch(reset())\n          }, 3000)\n        }\n      }\n    } else {\n      alert('Please verify that you are a human')\n    }\n  }\n\n  return (\n    <div className='container' id='register-form'>\n      {(loading) ?\n        <div>\n          <SpinningLoader />\n        </div> :\n        <div>\n          <Button color=\"primary\" onClick={toggle}>{'Sign up'}</Button>\n          <Modal autoFocus={true} isOpen={modal} toggle={toggle} modalTransition={{ timeout: 300 }} >\n            <ModalBody>\n              <h2>Register</h2>\n              <Form onSubmit={submitRegister} action='?' method='POST'>\n                <Recaptcha sitekey='6LcL060ZAAAAABmkdF8vTezZgafAVQo1WoGgGNDT' render='explicit' onloadCallback={recaptchaLoaded} verifyCallback={verifyCallback} />\n                <FormGroup>\n                  <Label>Name:</Label>\n                  <Input onChange={handleChangeName} value={name}></Input>\n                  <Label>Username:</Label>\n                  <Input onChange={handleChangeUsername} value={username}></Input>\n                  <Label>Password:</Label> <Input id='password' type=\"password\" onChange={handleChangePassword} value={password}></Input>\n                  <Label>Confirm Password:</Label>\n                  <Input onChange={handleChangeConfirmPassword} type='password' value={confirmPassword}></Input>\n                  <Label>Gender:</Label> <Select options={genderOptions} value={selectedGender} onChange={handleChangeGender}></Select>\n                  <Label>Email:</Label> <Input id='email' type=\"text\" onChange={handleChangeEmail} value={email}></Input>\n                  <Label>Date of Birth:</Label> <Input id='dateOfBirth' type=\"date\" onChange={handleChangeDateOfBirth} value={dateOfBirth}></Input>\n                </FormGroup>\n              </Form>\n            </ModalBody>\n            <ModalFooter>\n              <Button color='success' type='submit' onClick={submitRegister}>Sign Up!</Button>\n              <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n            </ModalFooter>\n          </Modal></div>}\n    </div >\n  )\n}\n\nexport default RegisterForm","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { badLogin, goodLogin, reset } from '../reducers/notificationReducer'\nimport loginService from '../services/loginService'\nimport forumService from '../services/forumService'\nimport { setUser } from '../reducers/userReducer'\nimport { Form, Label, FormGroup, Button, Input } from 'reactstrap'\nimport RegisterForm from './RegisterForm'\n\nconst LoginForm = (props) => {\n  const { setLoggedIn } = props\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n\n  const handleChangeUser = (event) => {\n    setUsername(event.target.value)\n  }\n  const handleChangePass = (event) => {\n    setPassword(event.target.value)\n  }\n  const submitLogin = async event => {\n    event.preventDefault()\n    try {\n      const user =\n        await loginService.login({ username, password })\n      window.localStorage.setItem(\n        'loggedForumUser', JSON.stringify(user)\n      )\n      forumService.setToken(user.token)\n      dispatch(setUser(user))\n      setLoggedIn(true)\n      dispatch(goodLogin())\n      setTimeout(() => {\n        dispatch(reset())\n      }, 1000)\n      setUsername('')\n      setPassword('')\n      console.log(user)\n    }\n    catch (error) {\n      dispatch(badLogin())\n      setTimeout(() => {\n        dispatch(reset())\n      }, 3000)\n    }\n  }\n  return (\n    <div className='container' id='login-form'>\n      <h2>Login</h2>\n      <Form onSubmit={submitLogin}>\n        <FormGroup>\n          <Label>Username:</Label>\n          <Input onChange={handleChangeUser} value={username}></Input>\n          <Label>Password:</Label> <Input id='password' type=\"password\" onChange={handleChangePass} value={password}></Input>\n          <Button id='submit-login' type=\"submit\">Login</Button>\n          <hr />\n        </FormGroup>\n      </Form>\n      <p>Don't have an account? </p>\n      <RegisterForm />\n    </div>\n  )\n}\n\nexport default LoginForm","import React from 'react'\n\n\nconst ForumMain = () => {\n  return (\n    <div>\n      THE FORUM WILL GO HERE\n    </div>\n  )\n}\nexport default ForumMain","import React from 'react';\nimport { Formik } from 'formik';\nimport { Container, Form, Label, Input, FormGroup } from 'reactstrap'\n\nconst divStyle = {\n  marginTop: '40px',\n  marginBottom: '20px'\n};\n\nconst ContactForm = () => (\n  <div>\n    <Formik\n      initialValues={{ name: '', email: '', LINE: '', message: '' }}\n      validate={values => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        }\n        if (!values.message) {\n          errors.message = 'Required'\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        ) {\n          errors.email = 'Invalid email address';\n        }\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        console.log('submit clicked do something')\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        /* and other goodies */\n      }) => (\n          <Container style={divStyle}>\n            <h5>Enter your information: </h5> {/*Thai*/}\n            <Form onSubmit={handleSubmit} className='form-ui'>\n              <FormGroup>\n                <Label for='name'>Name</Label>\n                <Input\n                  placeholder='Jane'\n                  type=\"Name\"\n                  name=\"name\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.name}\n                />\n                <Label for='email'>Email</Label>\n                <Input\n                  placeholder='Jane@example.com'\n                  type=\"Email\"\n                  name=\"email\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.email}\n                />\n                {errors.email && touched.email && errors.email}\n                <Label for='Line'>LINE</Label>\n                <Input\n                  placeholder='Line ID'\n                  type=\"Line\"\n                  name=\"LINE\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.LINE}\n                />\n                <Label for='message'>Message</Label> {/*Thai*/}\n                <Input\n                  placeholder='I have a question about...' //Thai\n                  type=\"Message\"\n                  name=\"message\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.message}\n                />\n                {errors.message && touched.message && errors.message}\n              </FormGroup>\n            </Form>\n          </Container>\n        )}\n    </Formik>\n  </div>\n);\n\nexport default ContactForm;","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Alert } from 'reactstrap'\n\nconst Notification = () => {\n  const notification = useSelector(state => state.notifications)\n  return (\n    <div>\n      {notification !== '' ?\n        <Alert variant='success'>\n          {notification}\n        </Alert>\n        : null}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport MyNavbar from './components/Navbar';\nimport About from './components/About';\nimport LoginForm from './components/LoginForm'\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport ForumMain from './components/ForumMain';\nimport ContactForm from './components/ContactForm';\nimport Notification from './components/Notification'\nimport forumService from './services/forumService'\nimport { setUser } from './reducers/userReducer'\n//import { initializeQuestions } from './reducers/forumReducer';\n\n\nconst App = () => {\n  const [loggedIn, setLoggedIn] = useState(false)\n  const forum = useSelector(state => state.forum)\n  const user = useSelector(state => state.user)\n  const dispatch = useDispatch()\n  // const dispatch = useDispatch()\n  // useEffect(() => {\n  //   dispatch(initializeQuestions())\n  // }, [dispatch])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedForumUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(setUser(user))\n      setLoggedIn(true)\n      forumService.setToken(user.token)\n    }\n  }, [dispatch])\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <MyNavbar />\n        <Notification />\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/contact\">\n            <ContactForm />\n          </Route>\n          <Route path=\"/forum\">\n            <ForumMain />\n          </Route>\n          <Route path=\"/login\">\n            <LoginForm />\n          </Route>\n          <Route path=\"api/admin\" />\n        </Switch>\n\n      </div>\n    </Router >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.css'\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);"],"sourceRoot":""}