{"version":3,"sources":["services/forumService.js","reducers/forumReducer.js","reducers/notificationReducer.js","reducers/userReducer.js","store.js","components/Navbar.js","components/About.js","services/loginService.js","components/SpinningLoader.js","services/userService.js","components/RegisterForm.js","components/LoginForm.js","components/ForumMain.js","components/ContactForm.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","blog","put","id","setToken","newToken","remove","question","delete","like","toUpdate","forumReducer","state","action","type","concat","console","log","questionToChange","find","q","changedQuestion","likes","map","filter","notificationReducer","message","setUser","userReducer","reducer","combineReducers","forum","notifications","user","store","createStore","composeWithDevTools","applyMiddleware","thunk","MyNavbar","props","useState","isOpen","setIsOpen","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","tag","Link","to","NavbarText","icon","faEnvelopeSquare","faFacebookSquare","About","Container","fluid","ListGroup","flush","ListGroupItem","login","SpinningLoader","Spinner","style","width","height","registerUser","textStyle","textAlign","fontFamily","registerButtonStyle","display","formDivStyle","labelStyle","float","marginBottom","padding","genderSelectStyle","marginRight","RegisterForm","modal","setModal","toggle","isVerified","setIsVerified","loading","setLoading","name","setName","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","selectedGender","setSelectedGender","dateOfBirth","setDateOfBirth","dispatch","useDispatch","submitRegister","event","preventDefault","alert","length","test","userService","Button","Modal","autoFocus","modalTransition","timeout","ModalBody","Form","onSubmit","FormGroup","Label","Input","onChange","target","value","options","label","sitekey","render","onloadCallback","verifyCallback","ModalFooter","formStyle","inputStyle","loginButtonStyle","LoginForm","setLoggedIn","submitLogin","loginService","window","localStorage","setItem","JSON","stringify","forumService","setTimeout","badLogin","ForumMain","divStyle","marginTop","ContactForm","initialValues","LINE","validate","values","errors","setSubmitting","touched","handleChange","handleBlur","handleSubmit","isSubmitting","for","placeholder","onBlur","Notification","notification","useSelector","UncontrolledAlert","variant","App","useEffect","loggedUserJSON","getItem","parse","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.74fbb525.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/forum'\n\nlet token = null\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (blog, newObject) => {\n  const response = axios.put(`${baseUrl}/${blog.id}`, newObject)\n  return response.data\n}\n\nconst remove = async question => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.delete(`${baseUrl}/${question.id}`, config)\n  return response.data\n}\n\nconst like = async (toUpdate) => {\n  const id = toUpdate.id\n  const response = await axios.put(`${baseUrl}/${id}`, toUpdate)\n  return response.data\n}\n\nexport default { getAll, create, update, setToken, remove, like }","import forumService from '../services/forumService'\n\nconst forumReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'NEW_QUESTION':\n      return state.concat(action.data)\n    case 'INIT_QUESTIONS':\n      console.log(action.data)\n      return action.data\n    case 'LIKE':\n      const id = action.data.id\n      const questionToChange = state.find(q => q.id === id)\n      const changedQuestion = { ...questionToChange, likes: questionToChange.likes + 1 }\n      return state.map(q => q.id === id ? changedQuestion : q)\n    case 'DELETE_QUESTION':\n      return state.filter(q => q.id !== action.data.id)\n    default: return state\n  }\n}\nexport const upLike = (question) => {\n  return async dispatch => {\n    const updatedObject = { ...question, likes: question.likes + 1 }\n    await forumService.like(updatedObject)\n    dispatch({\n      type: 'LIKE',\n      data: updatedObject\n    })\n  }\n}\nexport const addQuestion = data => {\n  return async dispatch => {\n    const newQuestion = await forumService.create(data)\n    dispatch({\n      type: 'NEW_QUESTION',\n      data: newQuestion\n    })\n  }\n}\nexport const deleteQuestion = data => {\n  return async dispatch => {\n    await forumService.remove(data)\n    dispatch({\n      type: 'DELETE_QUESTION',\n      data\n    })\n  }\n}\nexport const initializeQuestions = () => {\n  return async dispatch => {\n    const questions = await forumService.getAll()\n    dispatch({\n      type: 'INIT_QUESTIONS',\n      data: questions\n    })\n  }\n}\nexport default forumReducer","const nada = ''\nconst notificationReducer = (state = nada, action) => {\n  switch (action.type) {\n    case 'LIKE_QUESTION':\n      return action.message\n    case 'CREATE_QUESTION':\n      return action.message\n    case 'DELETE_QUESTION':\n      return action.message\n    case 'GOOD_LOGIN':\n      return action.message\n    case 'GOOD_REGISTER':\n      return action.message\n    case 'BAD_LOGIN':\n      return action.message\n    case 'BAD_REGISTER':\n      return action.message\n    case 'RESET':\n      return nada\n    default:\n      return state\n  }\n}\nexport const voteMessage = () => {\n  return {\n    type: 'LIKE_QUESTION',\n    message: 'You liked a question!'\n  }\n}\nexport const createMessage = () => {\n  return {\n    type: 'CREATE_QUESTION',\n    message: `Congratulations! You added a new question to the forum.`\n  }\n}\nexport const reset = () => {\n  return {\n    type: 'RESET',\n    message: nada\n  }\n}\nexport const deleteMessage = () => {\n  return {\n    type: 'DELETE_QUESTION',\n    message: `You deleted a question`\n  }\n}\nexport const goodLogin = () => {\n  return {\n    type: 'GOOD_LOGIN',\n    message: `Welcome back!`\n  }\n}\nexport const goodRegister = () => {\n  return {\n    type: 'GOOD_REGISTER',\n    message: `Successfully registered! You can now log in.`\n  }\n}\nexport const badLogin = (message) => {\n  return {\n    type: 'BAD_LOGIN',\n    message: message\n  }\n}\nexport const badRegister = (message) => {\n  return {\n    type: 'BAD_REGISTER',\n    message: message\n  }\n}\n\nexport default notificationReducer","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.data\n    case 'CLEAR_USER':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const setUser = data => {\n  console.log(data)\n  return {\n    type: 'SET_USER',\n    data\n  }\n}\nexport const clearUser = () => {\n  return {\n    type: 'CLEAR_USER',\n    data: null\n  }\n}\nexport default userReducer","\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport forumReducer from './reducers/forumReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport userReducer from './reducers/userReducer'\n\n\nconst reducer = combineReducers({\n  forum: forumReducer,\n  notifications: notificationReducer,\n  user: userReducer,\n})\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFacebookSquare } from '@fortawesome/free-brands-svg-icons'\nimport { faEnvelopeSquare } from '@fortawesome/free-solid-svg-icons';\n\nimport { Link } from 'react-router-dom';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarText\n} from 'reactstrap';\n\nconst MyNavbar = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    //<Router>\n    <div>\n      <Navbar id=\"navbar\" color=\"dark\" dark expand=\"md\">\n        <NavbarBrand id='navbrand' href=\"/\">Fern's Counseling</NavbarBrand>\n        <NavbarToggler id=\"dropdownmenu\" onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink tag={Link} id=\"NavLink\" to=\"/forum\">Forum</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} id=\"NavLink\" to=\"/about\">About</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} id=\"NavLink\" to=\"/contact\">Contact</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} id=\"NavLink\" to=\"/login\">Login</NavLink>\n            </NavItem>\n          </Nav>\n          <NavbarText id='NavBarText'>\n            <a href=\"mailto:furbynilu@gmail.com\"> <FontAwesomeIcon id='fa' icon={faEnvelopeSquare} />\n            </a>\n            <a href=\"https://www.facebook.com/NiluAcounselor\"> <FontAwesomeIcon id='fa' icon={faFacebookSquare} /></a>\n          </NavbarText>\n        </Collapse>\n      </Navbar>\n    </div>\n    //</Router>\n  );\n}\nexport default MyNavbar;","import React from 'react';\nimport { Container, ListGroup, ListGroupItem } from 'reactstrap';\n// import Fern from '../components/fernQR.jpg'\nimport '../about.css';\n\nfunction About() {\n  return (\n    <Container id='about' className=\"themed-container\" fluid={true}>\n      <div id='heading'>\n        <h1 id='name'>Nilubon Sukawanich</h1>\n        <h4 id='title'>Counselor</h4>\n      </div>\n      {/* <img src={Fern} alt=\"me\" /> */}\n      <ListGroup flush >\n        <div id='about-me'>\n          <h5>Education:</h5>\n        </div>\n        <ListGroupItem id='list'>\n          มหาวิทยาลัยเชียงใหม่\n          วิทยาศาสตร์มหาบัณฑิต สาขาจิตวิทยาการปรึกษา (2557 - 2559)\n          <br />\n          Chiangmai University\n          Master of Science in Counseling Psychology (2014 - 2016)\n        </ListGroupItem>\n        <ListGroupItem id='list'>\n          มหาวิทยาลัยเชียงใหม่\n          วิทยาศาสตร์บัณฑิต สาขาจิตวิทยา (2544 - 2547)\n          <br />\n          Chiangmai University\n          Bachelor of Science in Counseling Psychology (2001 - 2004)\n        </ListGroupItem>\n      </ListGroup>\n      {/* <img src={Fern} alt=\"me\" /> */}\n    </Container>\n\n  );\n}\n\nexport default About;","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async user => {\n  const response = await axios.post(baseUrl, user)\n  return response.data\n}\nexport default { login }","import React from 'react'\nimport { Spinner } from 'reactstrap'\n\nconst SpinningLoader = () => {\n  return (\n    <div>\n      Loading...\n      <Spinner type=\"grow\" color=\"primary\" style={{ width: '5rem', height: '5rem' }} />\n    </div>\n  )\n}\nexport default SpinningLoader","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst registerUser = async user => {\n  const response = await axios.post(`${baseUrl}/register`, user)\n  return response.data\n}\nexport default { registerUser }","import React, { useState } from 'react'\nimport Recaptcha from 'react-recaptcha'\nimport { useDispatch } from 'react-redux'\nimport SpinningLoader from './SpinningLoader'\nimport Select from 'react-select'\nimport { goodRegister, badRegister } from '../reducers/notificationReducer'\nimport userService from '../services/userService'\nimport { Form, Label, FormGroup, Button, Input, Modal, ModalBody, ModalFooter } from 'reactstrap'\n\n//align sign up button\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Poppins'\n}\nconst registerButtonStyle = {\n  display: 'inline-block'\n}\nconst formDivStyle = {\n  display: 'block',\n  textAlign: 'center'\n}\nconst labelStyle = {\n  float: 'left',\n  marginBottom: '0px',\n  padding: '0px',\n  fontFamily: 'Poppins'\n}\nconst genderSelectStyle = {\n  marginRight: '20px',\n  float: 'left',\n  fontFamily: 'Poppins'\n}\n\nconst RegisterForm = () => {\n\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n\n  //captcha value\n  const [isVerified, setIsVerified] = useState(false)\n\n  const [loading, setLoading] = useState(false)\n\n  const [name, setName] = useState('')\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [selectedGender, setSelectedGender] = useState('')\n  const [dateOfBirth, setDateOfBirth] = useState('')\n\n  const dispatch = useDispatch()\n\n  const genderOptions = [\n    { value: 'Male', label: 'Male' },\n    { value: 'Female', label: 'Female' },\n    { value: 'Other', label: 'Other' }\n  ]\n\n  const handleChangeName = (event) => {\n    setName(event.target.value)\n  }\n  const handleChangeUsername = (event) => {\n    setUsername(event.target.value)\n  }\n  const handleChangeEmail = (event) => {\n    setEmail(event.target.value)\n  }\n  const handleChangePassword = (event) => {\n    setPassword(event.target.value)\n  }\n  const handleChangeConfirmPassword = (event) => {\n    setConfirmPassword(event.target.value)\n  }\n  const handleChangeGender = (selectedGender) => {\n    setSelectedGender(selectedGender)\n  }\n  const handleChangeDateOfBirth = (event) => {\n    setDateOfBirth(event.target.value)\n  }\n  const recaptchaLoaded = () => {\n    console.log('captcha loaded successfully')\n  }\n  const verifyCallback = (response) => {\n    if (response) {\n      setIsVerified(true);\n    }\n  }\n  const submitRegister = async event => {\n    event.preventDefault()\n    //check captcha\n    if (!name || !username || !selectedGender || !dateOfBirth || !password) {\n      alert('You must fill all fields')\n    }\n    else if (password.length < 5 || username.length < 5) {\n      alert('Your username and password must be at least 5 characters long')\n    }\n    else if (password !== confirmPassword) {\n      alert('Your passwords are not the same. Try again.')\n    }\n    else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\n      alert('Your email address is not valid')\n    }\n    else if (!isVerified) {\n      alert('Please verify that you are a human')\n    }\n\n    else {\n      //close modal\n      toggle()\n      try {\n        setLoading(true)\n        await userService.registerUser({ name, username, password, email, selectedGender, dateOfBirth })\n        setLoading(false)\n        dispatch(goodRegister())\n        setUsername('')\n        setPassword('')\n        setConfirmPassword('')\n        setName('')\n        setSelectedGender('')\n        setEmail('')\n        setDateOfBirth('')\n      }\n      catch (error) {\n        console.log(error)\n        setLoading(false)\n        dispatch(badRegister('Something went wrong...'))\n      }\n    }\n  }\n\n  return (\n    <div className='container' id='register-form'>\n      {(loading) ?\n        <div>\n          <SpinningLoader />\n        </div> :\n        <div style={formDivStyle}>\n          <Button style={registerButtonStyle} color=\"primary\" onClick={toggle}>{'Sign up'}</Button>\n          <Modal autoFocus={true} isOpen={modal} toggle={toggle} modalTransition={{ timeout: 300 }} >\n            <ModalBody>\n              <h2 style={textStyle}>Register</h2>\n              <Form onSubmit={submitRegister} >\n\n                <FormGroup>\n                  <Label style={labelStyle}>Name:</Label>\n                  <Input onChange={handleChangeName} value={name}></Input><br />\n                  <Label style={labelStyle}>Username:</Label>\n                  <Input onChange={handleChangeUsername} value={username}></Input><br />\n                  <Label style={labelStyle}>Password:</Label> <Input id='password' type=\"password\" onChange={handleChangePassword} value={password}></Input><br />\n                  <Label style={labelStyle}>Confirm Password:</Label>\n                  <Input onChange={handleChangeConfirmPassword} type='password' value={confirmPassword}></Input><br />\n                  <Label style={labelStyle}>Email:</Label> <Input id='email' type=\"text\" onChange={handleChangeEmail} value={email}></Input><br />\n                  <Label style={genderSelectStyle}>Gender:</Label><Select options={genderOptions} value={selectedGender} onChange={handleChangeGender}></Select><br />\n                  <Label style={labelStyle}>Date of Birth:</Label> <Input id='dateOfBirth' type=\"date\" onChange={handleChangeDateOfBirth} value={dateOfBirth}></Input><br />\n                </FormGroup>\n              </Form>\n            </ModalBody>\n            <Recaptcha sitekey='6LcL060ZAAAAABmkdF8vTezZgafAVQo1WoGgGNDT' render='explicit' onloadCallback={recaptchaLoaded} verifyCallback={verifyCallback} />\n            <ModalFooter>\n              <Button color='primary' type='submit' onClick={submitRegister}>Sign Up</Button>\n              <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n            </ModalFooter>\n          </Modal></div>}\n    </div >\n  )\n}\n\nexport default RegisterForm","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { badLogin, goodLogin, reset } from '../reducers/notificationReducer'\nimport loginService from '../services/loginService'\nimport forumService from '../services/forumService'\nimport { setUser } from '../reducers/userReducer'\nimport { Form, Label, FormGroup, Button, Input } from 'reactstrap'\nimport RegisterForm from './RegisterForm'\n\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Poppins'\n}\nconst formDivStyle = {\n  display: 'block',\n  textAlign: 'center'\n}\nconst formStyle = {\n  width: '70%',\n  display: 'inline-block'\n}\nconst labelStyle = {\n  float: 'left',\n  marginBottom: '0px',\n  padding: '0px',\n  fontFamily: 'Poppins'\n}\nconst inputStyle = {\n  float: 'left',\n  marginBottom: '1rem'\n}\nconst loginButtonStyle = {\n  float: 'left'\n}\n\nconst LoginForm = (props) => {\n  const { setLoggedIn } = props\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n\n  const handleChangeUser = (event) => {\n    setUsername(event.target.value)\n  }\n  const handleChangePass = (event) => {\n    setPassword(event.target.value)\n  }\n  const submitLogin = async event => {\n    event.preventDefault()\n    try {\n      const user =\n        await loginService.login({ username, password })\n      window.localStorage.setItem(\n        'loggedForumUser', JSON.stringify(user)\n      )\n      forumService.setToken(user.token)\n      dispatch(setUser(user))\n      setLoggedIn(true)\n      dispatch(goodLogin())\n      setTimeout(() => {\n        dispatch(reset())\n      }, 1000)\n      setUsername('')\n      setPassword('')\n      console.log(user)\n    }\n    catch (error) {\n      dispatch(badLogin())\n      setTimeout(() => {\n        dispatch(reset())\n      }, 3000)\n    }\n  }\n  return (\n    <div className='container' id='login-form'>\n      <h2 style={textStyle}>Login</h2>\n      <div id='form-div' style={formDivStyle}>\n        <Form style={formStyle} onSubmit={submitLogin}>\n          <FormGroup>\n            <Label style={labelStyle}>Username:</Label>\n            <Input style={inputStyle} onChange={handleChangeUser} value={username}></Input>\n            <Label style={labelStyle}>Password:</Label> <Input style={inputStyle} id='password' type=\"password\" onChange={handleChangePass} value={password}></Input>\n            <Button color='success' style={loginButtonStyle} id='submit-login' type=\"submit\">Login</Button>\n          </FormGroup>\n        </Form>\n      </div>\n      <br />\n      <p style={textStyle}>Don't have an account? </p>\n      <RegisterForm />\n    </div>\n  )\n}\n\nexport default LoginForm","import React from 'react'\n\n\nconst ForumMain = () => {\n  return (\n    <div>\n      THE FORUM WILL GO HERE\n    </div>\n  )\n}\nexport default ForumMain","import React from 'react';\nimport { Formik } from 'formik';\nimport { Container, Form, Label, Input, FormGroup } from 'reactstrap'\n\nconst divStyle = {\n  marginTop: '40px',\n  marginBottom: '20px'\n};\n\nconst ContactForm = () => (\n  <div>\n    <Formik\n      initialValues={{ name: '', email: '', LINE: '', message: '' }}\n      validate={values => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        }\n        if (!values.message) {\n          errors.message = 'Required'\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        ) {\n          errors.email = 'Invalid email address';\n        }\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        console.log('submit clicked do something')\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        /* and other goodies */\n      }) => (\n          <Container style={divStyle}>\n            <h5>Enter your information: </h5> {/*Thai*/}\n            <Form onSubmit={handleSubmit} className='form-ui'>\n              <FormGroup>\n                <Label for='name'>Name</Label>\n                <Input\n                  placeholder='Jane'\n                  type=\"Name\"\n                  name=\"name\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.name}\n                />\n                <Label for='email'>Email</Label>\n                <Input\n                  placeholder='Jane@example.com'\n                  type=\"Email\"\n                  name=\"email\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.email}\n                />\n                {errors.email && touched.email && errors.email}\n                <Label for='Line'>LINE</Label>\n                <Input\n                  placeholder='Line ID'\n                  type=\"Line\"\n                  name=\"LINE\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.LINE}\n                />\n                <Label for='message'>Message</Label> {/*Thai*/}\n                <Input\n                  placeholder='I have a question about...' //Thai\n                  type=\"Message\"\n                  name=\"message\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.message}\n                />\n                {errors.message && touched.message && errors.message}\n              </FormGroup>\n            </Form>\n          </Container>\n        )}\n    </Formik>\n  </div>\n);\n\nexport default ContactForm;","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { UncontrolledAlert } from 'reactstrap'\n\nconst textStyle = {\n  textAlign: 'center',\n  fontFamily: 'Poppins'\n}\n\nconst Notification = () => {\n  const notification = useSelector(state => state.notifications)\n  return (\n    <div >\n      {notification !== '' ?\n        <UncontrolledAlert style={textStyle} variant='info'>\n          <h4>{notification}</h4>\n        </UncontrolledAlert>\n        : null}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport MyNavbar from './components/Navbar';\nimport About from './components/About';\nimport LoginForm from './components/LoginForm'\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport ForumMain from './components/ForumMain';\nimport ContactForm from './components/ContactForm';\nimport Notification from './components/Notification'\nimport forumService from './services/forumService'\nimport { setUser } from './reducers/userReducer'\n//import { initializeQuestions } from './reducers/forumReducer';\n\n\nconst App = () => {\n  const [loggedIn, setLoggedIn] = useState(false)\n  const forum = useSelector(state => state.forum)\n  const user = useSelector(state => state.user)\n  const dispatch = useDispatch()\n  // const dispatch = useDispatch()\n  // useEffect(() => {\n  //   dispatch(initializeQuestions())\n  // }, [dispatch])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedForumUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(setUser(user))\n      setLoggedIn(true)\n      forumService.setToken(user.token)\n    }\n  }, [dispatch])\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <MyNavbar />\n        <Notification />\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/contact\">\n            <ContactForm />\n          </Route>\n          <Route path=\"/forum\">\n            <ForumMain />\n          </Route>\n          <Route path=\"/login\">\n            <LoginForm />\n          </Route>\n          <Route path=\"api/admin\" />\n        </Switch>\n\n      </div>\n    </Router >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.css'\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);"],"sourceRoot":""}